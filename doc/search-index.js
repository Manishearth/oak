var searchIndex = JSON.parse('{\
"benchmark":{"doc":"Oak Functions benchmark example.","t":[5,0,3,3,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["main","proto","BenchmarkRequest","LookupTest","action","benchmark_request","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","iterations","key","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Action","Lookup","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","0"],"q":["benchmark","","benchmark::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","benchmark::proto::benchmark_request","","","","","","","","","","","","","","","","","benchmark::proto::benchmark_request::Action"],"d":["","","A request to execute a benchmark action a specified number …","Container for the key to use when doing a benchmark lookup.","","Nested message and enum types in <code>BenchmarkRequest</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Decodes an instance of the message from a buffer, and …","","","","",""],"i":[0,0,0,0,1,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,15],"f":[[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[2],[1,1],[2,2],[[]],[[]],[[],1],[[],2],[1,3],[2,3],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,[[]],[[]],[9,9],[[]],[9],[9,3],[[9,9],4],[[9,5],6],[[]],[[]],[[10,11,12,13],[[7,[14]]]],[[]],[[],7],[[],7],[[],8],0],"p":[[3,"BenchmarkRequest"],[3,"LookupTest"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[4,"Action"],[4,"Option"],[15,"u32"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[13,"Lookup"]]},\
"echo":{"doc":"Oak Functions echo example.","t":[5],"n":["main"],"q":["echo"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"key_value_lookup":{"doc":"Oak Functions key / value lookup example.","t":[5],"n":["main"],"q":["key_value_lookup"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"location_utils":{"doc":"Utilities for finding and comparing longitude- and …","t":[12,3,3,8,17,17,3,6,17,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10],"n":["0","Angle","CellID","Context","DEFAULT_CUTOFF_RADIUS_RADIANS","LOCATION_SIZE","LatLng","Result","S2_DEFAULT_LEVEL","abs","add","advance","advance_wrap","all_neighbors","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bound_st","bound_uv","cell_id_from_bytes","cell_id_to_bytes","center_face_siti","center_uv","child_begin","child_begin_at_level","child_end","child_end_at_level","child_iter","child_iter_at_level","child_position","children","clone","clone","clone","clone_into","clone_into","clone_into","cmp","common_ancestor_level","contains","context","deg","distance","distance_from_begin","edge_neighbors","eq","eq","face","face_ij_orientation","find_cell","find_covering_cells","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_face","from_face_ij","from_face_pos_level","from_token","hash","immediate_parent","inf","intersects","into","into","into","is_face","is_infinite","is_leaf","is_valid","is_valid","lat","level","lng","location_from_bytes","location_from_degrees","location_to_bytes","lsb","max_tile","mul","new","next","next_wrap","normalized","normalized","parent","partial_cmp","partial_cmp","pos","prev","prev_wrap","rad","range_max","range_min","raw_point","to_owned","to_owned","to_owned","to_string","to_token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vertex_neighbors","with_context"],"q":["location_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Angle represents a 1D angle. The internal representation …","CellID uniquely identifies a cell in the S2 cell …","Provides the <code>context</code> method for <code>Result</code>.","The default cutoff radius in radians.","","","<code>Result&lt;T, Error&gt;</code>","The default level to use for S2 Geometry cells. Higher …","abs returns the absolute value of the angle.","","advance advances or retreats the indicated number of steps …","advance_wrap advances or retreats the indicated number of …","all_neighbors returns all neighbors of this cell at the …","","","","","","","bound_st returns the bound of this CellID in (s,t)-space.","bound_uv returns the bound of this CellID in (u,v)-space.","Converts a byte representation to the <code>CellID</code>.","Converts a <code>CellID</code> to a byte representation.","center_face_siti returns the (face, si, ti) coordinates of …","center_uv returns the center of this CellID in …","child_begin returns the first child in a traversal of the …","child_begin_at_level returns the first cell in a traversal …","child_end returns the first cell after a traversal of the …","child_end_at_level returns the first cell after the last …","","","child_position returns the child position (0..3) of this …","children returns the four immediate children of this cell. …","","","","","","","","common_ancestor_level returns the level of the common …","contains returns true iff the CellID contains oci.","Wrap the error value with additional context.","deg returns the angle in degrees.","","distance_from_begin returns the number of steps that this …","edge_neighbors returns the four cells that are adjacent …","","","face returns the cube face for this cell ID, in the range […","face_ij_orientation uses the global lookupIJ table to …","Finds the cell at the given <code>level</code> that covers the <code>location</code>.","Finds the set of S2 cells at the required <code>level</code> that …","","","","","","","Returns the argument unchanged.","","","","converts this ChordAngle to an Angle.","converts this ChordAngle to an Angle.","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","returns the center of the s2 cell on the sphere as a …","from_face returns the cell corresponding to a given S2 …","","from_pos_level returns a cell given its face in the range […","from_token returns a cell given a hex-encoded string of …","","immediate_parent is cheaper than Parent, but assumes …","inf returns an angle larger than any finite angle.","intersects returns true iff the CellID intersects oci.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","is_face returns whether this is a top-level (face) cell.","is_infinite reports whether this Angle is infinite.","is_leaf returns whether this cell ID is at the deepest …","is_valid reports whether ci represents a valid cell.","","","level returns the subdivision level of this cell ID, in …","","Converts a byte representation of a location into a <code>LatLng</code>.","Converts latitude and longitude values in degrees to a …","Converts a <code>LatLng</code> location to a byte representation.","lsb returns the least significant bit that is set.","max_tile returns the largest cell with the same range_min …","","","next returns the next cell along the Hilbert curve. This …","next_wrap returns the next cell along the Hilbert curve, …","normalized returns an equivalent angle in [0, 2π).","","parent returns the cell at the given level, which must be …","","","pos returns the position along the Hilbert curve of this …","prev returns the previous cell along the Hilbert curve.","prev_wrap returns the previous cell along the Hilbert …","rad returns the angle in radians.","range_max returns the maximum CellID that is contained …","range_min returns the minimum CellID that is contained …","","","","","","to_token returns a hex-encoded string of the uint64 cell …","","","","","","","","","","vertex_neighbors returns the neighboring cellIDs with …","Wrap the error value with additional context that is …"],"i":[3,0,0,0,0,0,0,0,0,1,1,3,3,3,1,3,13,1,3,13,3,3,0,0,3,3,3,3,3,3,3,3,3,3,1,3,13,1,3,13,3,3,3,34,1,13,3,3,1,3,3,3,0,0,1,3,3,13,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,13,13,13,13,13,3,3,3,3,3,3,1,3,1,3,13,3,1,3,3,13,13,3,13,0,0,0,3,3,1,13,3,3,1,13,3,1,3,3,3,3,1,3,3,3,1,3,13,3,3,1,3,13,1,3,13,1,3,13,3,34],"f":[0,0,0,0,0,0,0,0,0,[1,1],[[1,2],1],[[3,4],3],[[3,4],3],[[3,5],[[7,[3,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[3,8],[3,8],[[],[[9,[3]]]],[3,[[7,[10]]]],[3],[3,11],[3,3],[[3,5],3],[3,3],[[3,5],3],[3,12],[[3,5],12],[[3,5],5],[3],[1,1],[3,3],[13,13],[[]],[[]],[[]],[[3,3],14],[[3,3],[[15,[5]]]],[[3,3],16],[[],[[18,[17]]]],[1,2],[[13,13],1],[3,4],[3],[[1,1],16],[[3,3],16],[3,10],[3],[[13,10],[[9,[3]]]],[[13,1,10],[[9,[[7,[3]]]]]],[[1,19],[[18,[20]]]],[[3,19],[[18,[20]]]],[[3,19],[[18,[20]]]],[[13,19],[[18,[20]]]],[21,1],[21,1],[[]],[22,1],[23,1],[24,1],[25,1],[25,1],[26,1],[23,1],[24,1],[26,1],[22,1],[13,3],[27,3],[27,3],[28,3],[13,3],[[]],[28,3],[28,13],[28,13],[3,13],[[]],[3,13],[5,3],[[10,29,29],3],[[5,5,5],3],[30,3],[3],[3,3],[[],1],[[3,3],16],[[]],[[]],[[]],[3,16],[1,16],[3,16],[3,16],[13,16],0,[3,5],0,[[],[[9,[13]]]],[[2,2],13],[13],[3,5],[[3,3],3],[[1,2],1],[[1,1],13],[3,3],[3,3],[1,1],[13,13],[[3,5],3],[[1,1],[[15,[14]]]],[[3,3],[[15,[14]]]],[3,5],[3,3],[3,3],[1,2],[3,3],[3,3],[3,31],[[]],[[]],[[]],[[],32],[3,32],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[3,5],[[7,[3,6]]]],[[],[[18,[17]]]]],"p":[[3,"Angle"],[15,"f64"],[3,"CellID"],[15,"i64"],[15,"u64"],[3,"Global"],[3,"Vec"],[3,"Rect"],[6,"Result"],[15,"u8"],[3,"Point"],[3,"Iter"],[3,"LatLng"],[4,"Ordering"],[4,"Option"],[15,"bool"],[3,"Error"],[4,"Result"],[3,"Formatter"],[3,"Error"],[3,"E6"],[3,"Deg"],[3,"E7"],[3,"Rad"],[3,"ChordAngle"],[3,"E5"],[3,"Cell"],[3,"Point"],[15,"i32"],[15,"str"],[3,"Vector"],[3,"String"],[3,"TypeId"],[8,"Context"]]},\
"lookup_data_checker":{"doc":"","t":[3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,5,11,11,11,11,11,11],"n":["Opt","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","file_path","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","parse_lookup_entries","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":["lookup_data_checker","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],[2,2],[[]],[[],1],[[],1],0,[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[],[[9,[8]]]],[[]],[[],10],[11,[[10,[[14,[[13,[12]],[13,[12]]]]]]]],[[]],[[],7],[[],7],[[],15],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]]],"p":[[3,"Command"],[3,"Opt"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[6,"Result"],[8,"Buf"],[15,"u8"],[3,"Vec"],[3,"HashMap"],[3,"TypeId"]]},\
"lookup_data_generator":{"doc":"","t":[0,5,5,5],"n":["data","generate_and_serialize_random_entries","generate_and_serialize_sparse_weather_entries","generate_and_serialize_weather_entries"],"q":["lookup_data_generator","lookup_data_generator::data","",""],"d":["","Generates random lookup entries with the specified sizes …","Generates a sparse set of random weather lookup entries …","Generates a dense set of random weather lookup entries …"],"i":[0,0,0,0],"f":[0,[[1,1,1],[[3,[2]]]],[1,[[3,[2]]]],[[],[[3,[2]]]]],"p":[[15,"usize"],[3,"BytesMut"],[6,"Result"]]},\
"oak_channel":{"doc":"","t":[8,8,8,0,10,10,0,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Channel","Read","Write","client","flush","read","server","write","ClientChannelHandle","RequestEncoder","borrow","borrow","borrow_mut","borrow_mut","default","encode_request","from","from","into","into","new","read_response","try_from","try_from","try_into","try_into","type_id","type_id","write_request","start_blocking_server","start_blocking_server_protobuf"],"q":["oak_channel","","","","","","","","oak_channel::client","","","","","","","","","","","","","","","","","","","","","oak_channel::server",""],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Starts a blocking server that listens for requests on the …",""],"i":[0,0,0,0,12,13,0,12,0,0,6,2,6,2,2,2,6,2,6,2,6,6,6,2,6,2,6,2,6,0,0],"f":[0,0,0,0,[[],1],[[],1],0,[[],1],0,0,[[]],[[]],[[]],[[]],[[],2],0,[[]],[[]],[[]],[[]],[[[5,[4]]],6],[6,[[1,[0]]]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,[[[5,[4]],9],[[1,[10]]]],[[[5,[4]],11],[[1,[10]]]]],"p":[[6,"Result"],[3,"RequestEncoder"],[3,"Request"],[8,"Channel"],[3,"Box"],[3,"ClientChannelHandle"],[4,"Result"],[3,"TypeId"],[8,"Handler"],[15,"never"],[8,"Transport"],[8,"Write"],[8,"Read"]]},\
"oak_echo_service":{"doc":"","t":[2,3,11,11,11,11,11,11,0,11,11,11,3,3,8,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["EchoService","EchoServiceImpl","borrow","borrow_mut","default","echo","from","into","proto","try_from","try_into","type_id","EchoRequest","EchoResponse","EchoService","EchoServiceAsyncClient","EchoServiceClient","EchoServiceServer","body","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","echo","echo","echo","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","invoke","new","new","serve","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["oak_echo_service","","","","","","","","","","","","oak_echo_service::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,2,3,10,12,2,3,8,10,12,2,3,8,2,3,2,3,8,2,3,8,2,3,17,10,12,2,3,2,3,2,3,10,12,2,3,8,10,12,2,3,8,8,10,12,17,2,3,8,10,12,2,3,8,10,12,2,3,8,10,12,2,3,8],"f":[0,0,[[]],[[]],[[],1],[[1,2],[[5,[3,4]]]],[[]],[[]],0,[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[3],[2,2],[3,3],[[[8,[7]]],[[8,[7]]]],[[]],[[]],[[]],[[],2],[[],3],[2,[[5,[3,4]]]],[[[10,[9]],2],[[5,[[5,[3,4]]]]]],[[[12,[11]],2],[[5,[[5,[3,4]]]]]],[2,13],[3,13],[[2,2],14],[[3,3],14],[[2,15],16],[[3,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[17]]],[[5,[[19,[18]],20]]]],[9,[[10,[9]]]],[11,[[12,[11]]]],[[],8],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],6]],"p":[[3,"EchoServiceImpl"],[3,"EchoRequest"],[3,"EchoResponse"],[3,"Status"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[3,"EchoServiceServer"],[8,"Transport"],[3,"EchoServiceClient"],[8,"AsyncTransport"],[3,"EchoServiceAsyncClient"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"EchoService"],[15,"u8"],[3,"Vec"],[15,"never"]]},\
"oak_functions_abi":{"doc":"Type, constant and Wasm host function definitions for the …","t":[13,13,13,13,13,13,2,13,13,13,13,17,4,3,3,3,3,4,3,13,4,4,4,3,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,0,5,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,12,3,3,13,13,13,13,4,3,13,13,13,13,4,13,3,3,13,13,13,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["BadRequest","BadTensorFlowModelInput","Blackhole","Echo","Echo","ErrorDecodingInference","ExtensionHandle","InternalServerError","PolicySizeViolation","PolicyTimeViolation","ProxyAlreadyConsumed","RESPONSE_BODY_OFFSET","ReportMetricError","ReportMetricRequest","ReportMetricResponse","Request","Response","StatusCode","StorageGetItemResponse","Success","TestingRequest","TestingResponse","TfModelInferError","TfModelInferResponse","Unspecified","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","decode","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_to_vec","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_repr","into","into","into","into","into","into","into","into","into","into","into","invoke","label","length","pad","proto","read_request","result","result","serialize","serialize","serialize","serialize","serialize","serialize","serialize","status","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","write_response","0","0","0","ConfigurationReport","Entry","ErrInternal","ErrInvalidArgs","ErrInvalidHandle","ErrSerializing","ExtensionHandle","Inference","InvalidHandle","LoggingHandle","LookupHandle","MetricsHandle","OakStatus","Ok","PrivateMetricsConfig","ServerPolicy","TestingHandle","TfHandle","Unspecified","as_str_name","as_str_name","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","constant_processing_time_ms","constant_response_size_bytes","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","epsilon","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_i32","from_i32","hash","hash","inference_vec","into","into","into","into","into","into","into","is_valid","is_valid","key","partial_cmp","partial_cmp","policy","shape","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","wasm_hash"],"q":["oak_functions_abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_abi::TestingRequest","","oak_functions_abi::TestingResponse","oak_functions_abi::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Holds the <code>label</code> and the <code>value</code> to report a metric.","","See REQUEST_RESPONSE_ENCODING.MD in the crate root.","See REQUEST_RESPONSE_ENCODING.MD in the crate root.","See REQUEST_RESPONSE_ENCODING.MD in the crate root.","Holds the optional value from the storage.","","","","","","","Returns the body of the response, excluding any trailing …","","body (may include padding 0s)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of Response.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to create Self from the raw representation","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","See <code>invoke</code>.","","The effective length of the body, excluding any padding …","Creates and returns a new <code>Response</code> instance with the same …","","See <code>read_request</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>write_response</code>.","","","","The client can check the configuration report for the …","An individual entry to be made available for lookup to an …","Internal error, e.g. serializing the response in the Oak …","Arguments invalid, e.g. deserializing the request in the …","Error when the given number is not a valid handle.","Error when serializing the request or deserializing the …","The <code>ExtensionHandle</code> indicates which extension to invoke in …","The inference from a TensorFlow model, containing an …","","","","","Status values exchanged as i32 values across the Node Wasm …","Success.","Configuration for differentially private metrics.","/ Server-side policy describing limits on the size of the …","Handle for an extension used for testing Wasm modules.","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","The number of requests that will be aggregated into each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A fixed response time, in milliseconds.","A fixed size for responses returned by the trusted runtime.","","","","","","","","","","","","","The privacy budget.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>ExtensionHandle</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>OakStatus</code>, or <code>None</code> if <code>value</code> is not a …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ExtensionHandle</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>OakStatus</code>.","","","","The validated server-side policy.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the loaded Wasm module."],"i":[5,12,14,14,15,12,0,5,5,5,10,0,0,0,0,0,0,0,0,5,0,0,0,0,5,1,4,1,24,4,1,5,9,10,11,12,13,14,15,24,4,1,5,9,10,11,12,13,14,15,4,1,5,4,1,5,1,1,9,10,11,12,13,14,15,1,4,1,5,4,1,5,5,10,12,24,4,1,5,9,10,11,12,13,14,15,5,24,4,1,5,9,10,11,12,13,14,15,0,9,1,1,0,0,11,13,9,10,11,12,13,14,15,1,4,1,5,5,24,24,4,1,5,9,10,11,12,13,14,15,24,4,1,5,9,10,11,12,13,14,15,24,4,1,5,9,10,11,12,13,14,15,24,9,0,36,37,38,0,0,28,28,28,28,0,0,26,26,26,26,0,28,0,0,26,26,28,26,28,32,29,30,31,32,26,28,33,29,30,31,32,26,28,33,29,30,31,32,33,29,30,31,32,26,28,33,29,30,31,32,26,28,33,26,28,31,31,29,30,31,32,26,28,33,29,30,31,32,33,32,29,30,31,32,26,28,33,29,30,31,32,26,28,33,29,30,31,32,26,28,33,26,28,26,28,29,29,30,31,32,26,28,33,26,28,33,26,28,30,29,29,30,31,32,26,28,33,29,30,31,32,26,28,33,29,30,31,32,26,28,33,29,30,31,32,26,28,33,33,30],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[1,1],[5,5],[[]],[[]],[[]],[[5,[7,[6]]],1],[[],[[8,[1]]]],[[],[[3,[9]]]],[[],[[3,[10]]]],[[],[[3,[11]]]],[[],[[3,[12]]]],[[],[[3,[13]]]],[[],[[3,[14]]]],[[],[[3,[15]]]],[1,[[7,[6]]]],[[4,4],16],[[1,1],16],[[5,5],16],[[4,17],18],[[1,17],18],[[5,17],[[3,[19]]]],[[5,17],18],[[10,17],18],[[12,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,[[21,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[1,22],[[8,[1]]]],0,0,0,0,[9,3],[10,3],[11,3],[12,3],[13,3],[14,3],[15,3],0,[[]],[[]],[[]],[[],23],[[],[[3,[24]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,27],[28,27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29],[30],[31],[32],[33],[29,29],[30,30],[31,31],[32,32],[26,26],[28,28],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,26],34],[[28,28],34],0,0,[[],29],[[],30],[[],31],[[],32],[[],26],[[],28],[[],33],[29,22],[30,22],[31,22],[32,22],[33,22],0,[[29,29],16],[[30,30],16],[[31,31],16],[[32,32],16],[[26,26],16],[[28,28],16],[[33,33],16],[[29,17],18],[[30,17],18],[[31,17],18],[[32,17],18],[[26,17],18],[[28,17],18],[[33,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,[[21,[26]]]],[35,[[21,[28]]]],[26],[28],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,16],[35,16],0,[[26,26],[[21,[34]]]],[[28,28],[[21,[34]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0],"p":[[3,"Response"],[3,"TryFromIntError"],[4,"Result"],[3,"Request"],[4,"StatusCode"],[15,"u8"],[3,"Vec"],[6,"Result"],[3,"ReportMetricRequest"],[4,"ReportMetricError"],[3,"ReportMetricResponse"],[4,"TfModelInferError"],[3,"TfModelInferResponse"],[4,"TestingRequest"],[4,"TestingResponse"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u32"],[4,"Option"],[15,"usize"],[3,"String"],[3,"StorageGetItemResponse"],[3,"TypeId"],[4,"ExtensionHandle"],[15,"str"],[4,"OakStatus"],[3,"Inference"],[3,"ConfigurationReport"],[3,"ServerPolicy"],[3,"PrivateMetricsConfig"],[3,"Entry"],[4,"Ordering"],[15,"i32"],[13,"Echo"],[13,"Blackhole"],[13,"Echo"]]},\
"oak_functions_client":{"doc":"","t":[3,11,11,11,11,11,11,11,0,0,11,11,11,11,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,5,5,5,5,11,11,11,11,11,11,11,11,11],"n":["Client","borrow","borrow_mut","from","into","into_request","invoke","new","proto","rekor","try_from","try_into","type_id","vzip","PublicKeyInfo","UnaryRequest","UnaryResponse","attestation","body","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","public_key","session_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unary_session_client","vzip","vzip","vzip","UnarySessionClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_public_key_info","into","into_request","message","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Body","Data","GenericSignature","Hash","LogEntry","LogEntryVerification","PublicKey","RekorSignatureBundle","Spec","algorithm","api_version","base64_signature","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalized","content","content","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","get_sha256","hash","integrated_time","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","log_id","log_index","public_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signed_entry_timestamp","spec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmarshal_pem_to_p256_public_key","value","verification","verify_rekor_body","verify_rekor_log_entry","verify_rekor_signature","verify_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["oak_functions_client","","","","","","","","","","","","","","oak_functions_client::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_client::proto::unary_session_client","","","","","","","","","","","","","","","","","","","","","","oak_functions_client::rekor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","This module provides structs for representing a Rekor …","","","","","","","","The serialized attestation report binding the public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The serialized public key.","Links a sequence of messages, declaring them as part of a …","","","","","","","","","","","","","Generated client implementations.","","","","Service definition for unary communication with the …","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","Gets the public key and the attestation report that binds …","Calls <code>U::from(self)</code>.","","Used to send a sequence of a messages for session key …","","Compress requests with the given encoding.","","","","","","","","Struct representing the body in a Rekor LogEntry.","Struct representing the hashed data in the body of a Rekor …","Struct representing a signature in the body of a Rekor …","Struct representing a hash digest. Based on …","Struct representing a Rekor LogEntry. Based on …","Struct representing a verification object in a Rekor …","Struct representing a public key included in the body of a …","Convenient struct for verifying the <code>signedEntryTimestamp</code> …","Struct representing the <code>spec</code> in the body of a Rekor …","","","Base64-encoded signature over the canonicalized JSON …","We cannot directly use the type <code>Body</code> here, since body is …","","","","","","","","","","","","","","","","","","","Canonicalized JSON representation, based on RFC 8785 …","Base64 content that is signed.","Base64 content of a public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Computes a SHA-256 digest of <code>input</code> and returns it in a …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This is the SHA256 hash of the DER-encoded public key for …","Minimum: 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses a PEM-encoded x509/PKIX public key into a …","","Includes a signature over the body, integratedTime, logID, …","Verifies the signature in the <code>body</code> over the <code>contents_bytes</code>…","Verifies a Rekor LogEntry.","Parses <code>log_entry_bytes</code> into a Rekor LogEntry, and verifies …","Verifies the given base64-encoded signature over the given …","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,0,0,2,2,2,2,0,0,0,11,9,10,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,11,9,9,10,11,9,10,11,9,10,11,9,10,11,0,9,10,11,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,31,28,35,27,35,27,28,29,30,31,32,33,34,35,27,28,29,30,31,32,33,34,35,32,33,29,27,28,29,30,31,32,33,34,27,28,29,30,31,32,33,34,27,28,29,30,31,32,33,34,32,35,27,28,29,30,31,32,33,34,0,30,27,35,27,28,29,30,31,32,33,34,35,27,28,29,30,31,32,33,34,28,27,27,32,27,28,29,30,31,32,33,34,29,34,28,35,35,27,28,29,30,31,32,33,34,35,27,28,29,30,31,32,33,34,35,27,28,29,30,31,32,33,34,0,31,27,0,0,0,0,35,27,28,29,30,31,32,33,34],"f":[0,[[]],[[]],[[]],[[]],[[],1],[[2,3],[[5,[4]]]],[6,[[5,[2]]]],0,0,[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[9],[10],[11],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[],9],[[],10],[[],11],[9,12],[10,12],[11,12],[[9,9],13],[[10,10],13],[[11,11],13],[[9,14],15],[[10,14],15],[[11,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],0,[[]],[[]],[[]],0,[[16,17],16],[[]],[[]],[[[16,[18]]],[[16,[18]]]],[[]],[[],[[7,[[16,[19]],20]]]],[[[16,[21]],14],15],[[]],[[16,22],[[7,[[23,[11]],24]]]],[[]],[[],1],[[16,[22,[9]]],[[7,[[23,[10]],24]]]],[[],16],[[16,17],16],[[]],[[],7],[[],7],[[],8],[[]],[[],[[16,[25]]]],[26,16],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[7,[27]]]],[[],[[7,[28]]]],[[],[[7,[29]]]],[[],[[7,[30]]]],[[],[[7,[31]]]],[[],[[7,[32]]]],[[],[[7,[33]]]],[[],[[7,[34]]]],[[27,27],13],[[28,28],13],[[29,29],13],[[30,30],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[27,14],15],[[28,14],15],[[29,14],15],[[30,14],15],[[31,14],15],[[32,14],15],[[33,14],15],[[34,14],15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,[27,7],[28,7],[29,7],[30,7],[31,7],[32,7],[33,7],[34,7],0,0,0,[27,[[5,[35]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[5,[36]]]],0,0,[28,5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Request"],[3,"Client"],[3,"Request"],[3,"Response"],[6,"Result"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"UnaryRequest"],[3,"UnaryResponse"],[3,"PublicKeyInfo"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"UnarySessionClient"],[4,"CompressionEncoding"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"Debug"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[3,"InterceptedService"],[3,"Uri"],[3,"LogEntry"],[3,"Body"],[3,"Spec"],[3,"Data"],[3,"Hash"],[3,"GenericSignature"],[3,"PublicKey"],[3,"LogEntryVerification"],[3,"RekorSignatureBundle"],[6,"VerifyingKey"]]},\
"oak_functions_extension":{"doc":"","t":[8,8,10,10,10,10],"n":["ExtensionFactory","OakApiNativeExtension","create","get_handle","invoke","terminate"],"q":["oak_functions_extension","","","","",""],"d":["An ExtensionFactory creates a new <code>OakApiNativeExtension</code>.","A OakApiNativeExtension implements new functionality for …","","Gets the <code>ExtensionHandle</code> for this extension.","Invokes the extension with the given request and returns a …","Performs any cleanup or terminating behavior necessary …"],"i":[0,0,9,1,1,1],"f":[0,0,[[],[[3,[[2,[1]]]]]],[[],4],[[[6,[5]]],[[8,[[6,[5]],7]]]],[[],3]],"p":[[8,"OakApiNativeExtension"],[3,"Box"],[6,"Result"],[4,"ExtensionHandle"],[15,"u8"],[3,"Vec"],[4,"OakStatus"],[4,"Result"],[8,"ExtensionFactory"]]},\
"oak_functions_freestanding":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,3,3,3,4,3,3,3,4,3,3,3,4,3,3,3,3,3,3,4,4,3,3,3,4,3,8,3,3,3,3,4,3,3,3,4,18,18,18,18,18,18,18,18,18,18,18,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,12],"n":["RuntimeImplementation","StandaloneLogger","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","from","from","handle_user_request","initialize","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","log_public","log_sensitive","new","schema","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_lookup_data","0","Empty","EmptyArgs","EmptyBuilder","EmptyOffset","Initialization","InitializationArgs","InitializationBuilder","InitializationOffset","InitializeResponse","InitializeResponseArgs","InitializeResponseBuilder","InitializeResponseOffset","LookupData","LookupDataArgs","LookupDataBuilder","LookupDataEntry","LookupDataEntryArgs","LookupDataEntryBuilder","LookupDataEntryOffset","LookupDataOffset","PublicKeyInfo","PublicKeyInfoArgs","PublicKeyInfoBuilder","PublicKeyInfoOffset","SessionId","TrustedRuntime","TrustedRuntimeServer","UserRequest","UserRequestArgs","UserRequestBuilder","UserRequestOffset","UserRequestResponse","UserRequestResponseArgs","UserRequestResponseBuilder","UserRequestResponseOffset","VT_ATTESTATION","VT_BODY","VT_BODY","VT_CONSTANT_RESPONSE_SIZE","VT_ITEMS","VT_KEY","VT_PUBLIC_KEY","VT_PUBLIC_KEY_INFO","VT_SESSION_ID","VT_VALUE","VT_WASM_MODULE","_tab","_tab","_tab","_tab","_tab","_tab","_tab","_tab","add_attestation","add_body","add_body","add_constant_response_size","add_items","add_key","add_public_key","add_public_key_info","add_session_id","add_value","add_wasm_module","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","attestation","attestation","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constant_response_size","constant_response_size","create","create","create","create","create","create","create","create","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","finish","finish","finish","finish","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follow","follow","follow","follow","follow","follow","follow","follow","follow","follow","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","handle_user_request","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invoke","items","items","key","key","new","new","new","new","new","new","new","new","new","public_key","public_key","public_key_info","public_key_info","push","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","serve","session_id","session_id","set_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_lookup_data","value","value","value","wasm_module","wasm_module"],"q":["oak_functions_freestanding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_freestanding::schemad":["","Temporary OakLogger implementation using the <code>log</code> crate.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,0,3,2,3,2,3,2,3,2,2,2,2,3,2,3,3,3,2,3,2,3,2,3,2,2,2,3,0,2,3,2,3,2,3,2,3,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,4,5,9,19,30,34,10,4,30,9,4,5,9,10,34,30,19,20,21,25,26,27,29,32,21,33,25,32,27,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,34,42,4,5,38,39,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,35,4,5,9,10,34,30,19,20,35,4,5,9,10,34,30,19,20,9,40,4,5,9,10,34,30,19,20,38,39,40,41,42,43,44,45,35,35,4,5,9,10,34,30,19,20,25,26,27,33,21,32,29,47,35,4,5,9,10,34,30,19,20,35,35,4,5,9,10,34,30,19,20,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,52,4,5,9,10,34,30,19,20,52,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,53,19,44,30,43,25,26,27,33,21,32,29,47,35,34,42,10,41,35,35,4,5,9,10,34,30,19,20,52,4,38,35,35,4,5,9,10,34,30,19,20,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,59,38,25,60,39,26,61,40,27,62,41,33,63,42,21,64,43,32,65,44,29,66,45,47,35,4,5,9,10,34,30,19,20,53,52,35,30,43,9,40],"f":[0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[2,2],[[]],[[],2],[[]],[[]],[[3,4],[[8,[[6,[5]],7]]]],[[3,9],[[8,[[6,[10]],7]]]],[[]],[[]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[[2,15,16]],[[2,15,16]],[17,3],0,[[]],[[],8],[[],8],[[],8],[[],8],[[],18],[[],18],[[3,19],[[8,[[6,[20]],7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[21,[24,[[23,[22]]]]]],[[25,[24,[[23,[22]]]]]],[[26,[24,[[23,[22]]]]]],[[27,28]],[[29,[24,[[23,[[31,[30]]]]]]]],[[32,[24,[[23,[22]]]]]],[[21,[24,[[23,[22]]]]]],[[33,[24,[34]]]],[[25,35]],[[32,[24,[[23,[22]]]]]],[[27,[24,[[23,[22]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[34,[[36,[[23,[22]]]]]],0,[4,[[36,[[23,[22]]]]]],[5,[[36,[[23,[22]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[4,4],[5,5],[9,9],[10,10],[34,34],[30,30],[19,19],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,28],0,[[37,38],[[24,[4]]]],[[37,39],[[24,[5]]]],[[37,40],[[24,[9]]]],[[37,41],[[24,[10]]]],[[37,42],[[24,[34]]]],[[37,43],[[24,[30]]]],[[37,44],[[24,[19]]]],[[37,45],[[24,[20]]]],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],35],[[35,35],46],[[4,4],46],[[5,5],46],[[9,9],46],[[10,10],46],[[34,34],46],[[30,30],46],[[19,19],46],[[20,20],46],[25,[[24,[4]]]],[26,[[24,[5]]]],[27,[[24,[9]]]],[33,[[24,[10]]]],[21,[[24,[34]]]],[32,[[24,[30]]]],[29,[[24,[19]]]],[47,[[24,[20]]]],[[35,48],49],[[4,48],49],[[5,48],49],[[9,48],49],[[10,48],49],[[34,48],49],[[30,48],49],[[19,48],49],[[20,48],49],[50],[50],[50],[50],[50],[50],[50],[50],[50],[50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[8,[[6,[5]],7]]]],[51,4],[51,5],[51,9],[51,10],[51,34],[51,30],[51,19],[51,20],[9,[[8,[[6,[10]],7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[[[53,[52]],54],[[8,[[55,[22]],7]]]],[19,[[36,[[23,[[31,[30]]]]]]]],0,[30,[[36,[[23,[22]]]]]],0,[37,25],[37,26],[37,27],[37,33],[37,21],[37,32],[37,29],[37,47],[[],35],[34,[[36,[[23,[22]]]]]],0,[10,[[36,[34]]]],0,[[35,50]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[56,50],[[8,[57]]]],[[],53],[4,[[36,[35]]]],0,[35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[19,[[8,[[6,[20]],7]]]],[35,[[58,[22]]]],[30,[[36,[[23,[22]]]]]],0,[9,[[36,[[23,[22]]]]]],0],"p":[[8,"Any"],[3,"StandaloneLogger"],[3,"RuntimeImplementation"],[3,"UserRequest"],[3,"UserRequestResponse"],[3,"OwnedFlatbuffer"],[3,"Status"],[4,"Result"],[3,"Initialization"],[3,"InitializeResponse"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Level"],[15,"str"],[3,"AttestationBehavior"],[3,"TypeId"],[3,"LookupData"],[3,"Empty"],[3,"PublicKeyInfoBuilder"],[15,"u8"],[3,"Vector"],[3,"WIPOffset"],[3,"UserRequestBuilder"],[3,"UserRequestResponseBuilder"],[3,"InitializationBuilder"],[15,"u32"],[3,"LookupDataBuilder"],[3,"LookupDataEntry"],[3,"ForwardsUOffset"],[3,"LookupDataEntryBuilder"],[3,"InitializeResponseBuilder"],[3,"PublicKeyInfo"],[3,"SessionId"],[4,"Option"],[3,"FlatBufferBuilder"],[3,"UserRequestArgs"],[3,"UserRequestResponseArgs"],[3,"InitializationArgs"],[3,"InitializeResponseArgs"],[3,"PublicKeyInfoArgs"],[3,"LookupDataEntryArgs"],[3,"LookupDataArgs"],[3,"EmptyArgs"],[15,"bool"],[3,"EmptyBuilder"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"Table"],[8,"TrustedRuntime"],[3,"TrustedRuntimeServer"],[3,"Request"],[3,"Vec"],[3,"Verifier"],[4,"InvalidFlatbuffer"],[3,"Array"],[4,"UserRequestOffset"],[4,"UserRequestResponseOffset"],[4,"InitializationOffset"],[4,"InitializeResponseOffset"],[4,"PublicKeyInfoOffset"],[4,"LookupDataEntryOffset"],[4,"LookupDataOffset"],[4,"EmptyOffset"]]},\
"oak_functions_launcher":{"doc":"","t":[3,13,4,13,11,11,11,11,11,11,11,11,0,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,12,5,12,5,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,8,10,0,10,0,10,3,3,17,17,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,3,3,3,4,3,3,3,4,3,3,3,4,3,3,3,3,3,3,4,4,3,3,3,4,3,8,3,3,3,3,3,4,3,3,3,4,18,18,18,18,18,18,18,18,18,18,18,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,12,11,11,12,5,5,11,11,11,11,11,0,5,12,11,11,11,11,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,8,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,10,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","Crosvm","Mode","Native","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","channel","clone","clone_into","command","command_for_update","constant_response_size","eq","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","instance","into","into","into_request","into_request","lookup","lookup_data","main","mode","path_exists","port","schema","server","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","wasm","0","0","Connector","ConnectorHandle","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","inner","into","into","into_request","into_request","invoke","invoke","request_dispatcher","request_encoder","spawn","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LaunchedInstance","create_comms_channel","crosvm","kill","native","wait","Instance","Params","VSOCK_GUEST_CID","VSOCK_GUEST_PORT","app_binary","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","console","create_comms_channel","eq","fmt","from","from","from_arg_matches","from_arg_matches_mut","gdb","group_id","instance","into","into","into_request","into_request","kill","start","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vmm_binary","vzip","vzip","wait","Instance","Params","app_binary","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","comms_host","create_comms_channel","eq","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","instance","into","into","into_request","into_request","kill","start","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","wait","encode_lookup_data","load_lookup_data","parse_lookup_entries","0","Empty","EmptyArgs","EmptyBuilder","EmptyOffset","Initialization","InitializationArgs","InitializationBuilder","InitializationOffset","InitializeResponse","InitializeResponseArgs","InitializeResponseBuilder","InitializeResponseOffset","LookupData","LookupDataArgs","LookupDataBuilder","LookupDataEntry","LookupDataEntryArgs","LookupDataEntryBuilder","LookupDataEntryOffset","LookupDataOffset","PublicKeyInfo","PublicKeyInfoArgs","PublicKeyInfoBuilder","PublicKeyInfoOffset","SessionId","TrustedRuntime","TrustedRuntimeAsyncClient","TrustedRuntimeServer","UserRequest","UserRequestArgs","UserRequestBuilder","UserRequestOffset","UserRequestResponse","UserRequestResponseArgs","UserRequestResponseBuilder","UserRequestResponseOffset","VT_ATTESTATION","VT_BODY","VT_BODY","VT_CONSTANT_RESPONSE_SIZE","VT_ITEMS","VT_KEY","VT_PUBLIC_KEY","VT_PUBLIC_KEY_INFO","VT_SESSION_ID","VT_VALUE","VT_WASM_MODULE","_tab","_tab","_tab","_tab","_tab","_tab","_tab","_tab","add_attestation","add_body","add_body","add_constant_response_size","add_items","add_key","add_public_key","add_public_key_info","add_session_id","add_value","add_wasm_module","attestation","attestation","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constant_response_size","constant_response_size","create","create","create","create","create","create","create","create","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","fbb_","fbb_","fbb_","fbb_","fbb_","fbb_","fbb_","fbb_","finish","finish","finish","finish","finish","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follow","follow","follow","follow","follow","follow","follow","follow","follow","follow","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","handle_user_request","handle_user_request","handler","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","init_from_table","initialize","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoke","items","items","key","key","new","new","new","new","new","new","new","new","new","new","public_key","public_key","public_key_info","public_key_info","push","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","serve","service","session_id","session_id","set_value","start_","start_","start_","start_","start_","start_","start_","start_","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_lookup_data","update_lookup_data","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_module","wasm_module","SessionProxy","attestation","borrow","borrow_mut","connector_handle","decode_response","encode_request","from","get_public_key_info","into","into_request","message","proto","server","signing_public_key","try_from","try_into","type_id","vzip","PublicKeyInfo","UnaryRequest","UnaryResponse","attestation","body","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","public_key","session_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unary_session_server","vzip","vzip","vzip","0","UnarySession","UnarySessionServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","get_public_key_info","inner","into","into","into_request","into_request","message","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["oak_functions_launcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_launcher::Mode","","oak_functions_launcher::channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_launcher::instance","","","","","","oak_functions_launcher::instance::crosvm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_launcher::instance::native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_launcher::lookup","","","oak_functions_launcher::schemaoak_functions_launcher::server","","","","","","","","","","","","","","","","","","","oak_functions_launcher::server::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_launcher::server::proto::unary_session_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Launch runtime in crosvm","","Launch a runtime binary directly as a child process","","","","","","","","","","","","","","Consistent response size that the runtime should apply","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Path to a file containing key / value entries in protobuf …","","Execution mode.","","","","","","","","","","","","","","","","","","Path to a Wasm file to be loaded into the trusted runtime …","","","Singleton responsible for sending requests, and receiving …","Implementation of an <code>oak_idl::AsyncHandler</code> that enables …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Spawn an instance of the <code>Connector</code> in a seperate task, and …","","","","","","","","","","Defines the interface of a launched runtime instance. …","Creates a channel to communicate with the runtime instance.","","Kill the runtime instance.","","Wait for the runtime instance process to finish.","","Parameters used for launching VM instances","","","Path to the binary to load into the VM.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Port to use for debugging with gdb","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Path to the VMM binary to execute.","","","","An instance of the runtime running directly as a linux …","Parameters used for launching the runtime as a native …","Path to the runtime binary","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The serialized attestation report binding the public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The serialized public key.","Links a sequence of messages, declaring them as part of a …","","","","","","","","","","","","","Generated server implementations.","","","","","Generated trait containing gRPC methods that should be …","Service definition for unary communication with the …","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Gets the public key and the attestation report that binds …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Used to send a sequence of a messages for session key …","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","",""],"i":[0,2,0,2,6,6,2,2,2,6,2,6,0,2,2,6,6,6,2,2,6,2,6,2,6,2,6,6,2,0,2,6,2,6,0,6,0,6,0,6,0,0,2,2,6,2,6,2,6,2,6,2,6,2,6,6,92,93,0,0,20,19,20,19,19,19,20,19,20,20,19,20,19,20,19,19,20,20,19,20,19,20,19,20,19,20,19,0,94,0,94,0,94,0,0,0,0,28,28,28,29,28,29,28,28,28,28,28,29,29,28,28,29,28,28,28,28,28,29,29,28,29,28,29,29,28,29,28,29,28,29,28,28,28,28,29,28,29,0,0,32,32,32,33,32,33,32,32,32,32,32,33,33,32,32,33,32,32,32,32,33,33,32,33,32,33,33,32,33,32,33,32,33,32,32,32,33,32,33,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,52,53,54,35,46,50,55,52,46,54,52,53,54,55,50,46,35,56,38,41,42,43,45,48,38,49,41,48,43,50,62,52,53,58,59,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,51,52,53,54,55,50,46,35,56,51,52,53,54,55,50,46,35,56,54,60,52,53,54,55,50,46,35,56,58,59,60,61,62,63,64,65,51,51,52,53,54,55,50,46,35,56,41,42,43,49,38,48,45,66,41,42,43,49,38,48,45,66,51,52,53,54,55,50,46,35,56,51,51,52,53,54,55,50,46,35,56,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,71,69,69,52,53,54,55,50,46,35,56,71,69,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,72,35,64,46,63,41,42,43,49,38,48,45,66,51,69,50,62,55,61,51,51,52,53,54,55,50,46,35,56,71,72,52,58,51,41,42,43,49,38,48,45,66,51,52,53,54,55,50,46,35,56,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,71,69,51,46,63,95,58,41,96,59,42,97,60,43,98,61,49,99,62,38,100,63,48,101,64,45,102,65,66,51,52,53,54,55,50,46,35,56,72,69,54,60,0,79,79,79,79,0,0,79,79,79,79,79,0,0,79,79,79,79,79,0,0,0,81,78,76,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,78,76,81,81,78,78,76,81,78,76,81,78,76,81,78,76,81,0,78,76,81,86,0,0,0,83,83,86,83,86,83,83,83,86,83,86,83,86,83,86,83,83,82,83,86,83,86,83,82,83,83,83,83,83,86,83,86,83,86,83,86,83,86,83,83],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],0,[2,2],[[]],[[],1],[[],1],0,[[2,2],3],[[2,4],5],[[6,4],5],[[]],[[]],[7,[[9,[2,8]]]],[7,[[9,[6,8]]]],[7,[[9,[2,8]]]],[7,[[9,[6,8]]]],[[],[[11,[10]]]],[12,3],0,[[]],[[]],[[],13],[[],13],0,0,[[],[[9,[[15,[14]]]]]],0,[12,[[9,[16,17]]]],0,0,0,[[]],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[2,7],[[9,[8]]]],[[6,7],[[9,[8]]]],[[2,7],[[9,[8]]]],[[6,7],[[9,[8]]]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[19,19],[[]],[[]],[[]],0,[[]],[[]],[[],13],[[],13],[[20,21],[[9,[[23,[22]],24]]]],[[19,21],[[26,[[15,[25]]]]]],0,0,[[[15,[27]]],19],[[]],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,[[],[[26,[[15,[25]]]]]],0,[15,[[26,[[15,[25]]]]]],0,[[],[[26,[[15,[25]]]]]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[28,28],[[]],[[],1],[[],1],0,[29,[[26,[[15,[25]]]]]],[[28,28],3],[[28,4],5],[[]],[[]],[7,[[9,[28,8]]]],[7,[[9,[28,8]]]],0,[[],[[11,[10]]]],0,[[]],[[]],[[],13],[[],13],[[[15,[29]]],[[26,[[15,[25]]]]]],[[28,30],[[31,[29]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[28,7],[[9,[8]]]],[[28,7],[[9,[8]]]],0,[[]],[[]],[29,[[26,[[15,[25]]]]]],0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[32,32],[[]],[[],1],[[],1],0,[33,[[26,[[15,[25]]]]]],[[32,32],3],[[32,4],5],[[]],[[]],[7,[[9,[32,8]]]],[7,[[9,[32,8]]]],[[],[[11,[10]]]],0,[[]],[[]],[[],13],[[],13],[[[15,[33]]],[[26,[[15,[25]]]]]],[32,[[31,[33]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[32,7],[[9,[8]]]],[[32,7],[[9,[8]]]],[[]],[[]],[33,[[26,[[15,[25]]]]]],[[[34,[[23,[22]],[23,[22]]]]],[[31,[[36,[35]]]]]],[16,[[31,[[34,[[23,[22]],[23,[22]]]]]]]],[37,[[31,[[34,[[23,[22]],[23,[22]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[38,[40,[[39,[22]]]]]],[[41,[40,[[39,[22]]]]]],[[42,[40,[[39,[22]]]]]],[[43,44]],[[45,[40,[[39,[[47,[46]]]]]]]],[[48,[40,[[39,[22]]]]]],[[38,[40,[[39,[22]]]]]],[[49,[40,[50]]]],[[41,51]],[[48,[40,[[39,[22]]]]]],[[43,[40,[[39,[22]]]]]],[50,[[11,[[39,[22]]]]]],0,[52,[[11,[[39,[22]]]]]],[53,[[11,[[39,[22]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,51],[52,52],[53,53],[54,54],[55,55],[50,50],[46,46],[35,35],[56,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,44],0,[[57,58],[[40,[52]]]],[[57,59],[[40,[53]]]],[[57,60],[[40,[54]]]],[[57,61],[[40,[55]]]],[[57,62],[[40,[50]]]],[[57,63],[[40,[46]]]],[[57,64],[[40,[35]]]],[[57,65],[[40,[56]]]],[[],58],[[],59],[[],60],[[],61],[[],62],[[],63],[[],64],[[],65],[[],51],[[51,51],3],[[52,52],3],[[53,53],3],[[54,54],3],[[55,55],3],[[50,50],3],[[46,46],3],[[35,35],3],[[56,56],3],0,0,0,0,0,0,0,0,[41,[[40,[52]]]],[42,[[40,[53]]]],[43,[[40,[54]]]],[49,[[40,[55]]]],[38,[[40,[50]]]],[48,[[40,[46]]]],[45,[[40,[35]]]],[66,[[40,[56]]]],[[51,4],5],[[52,4],5],[[53,4],5],[[54,4],5],[[55,4],5],[[50,4],5],[[46,4],5],[[35,4],5],[[56,4],5],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,[[9,[[36,[53]],24]]]],[[[69,[68]],[23,[22]]],[[9,[[36,[53]],24]]]],0,[70,52],[70,53],[70,54],[70,55],[70,50],[70,46],[70,35],[70,56],[54,[[9,[[36,[55]],24]]]],[[[69,[68]],[23,[22]]],[[9,[[36,[55]],24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[72,[71]],21],[[9,[[23,[22]],24]]]],[35,[[11,[[39,[[47,[46]]]]]]]],0,[46,[[11,[[39,[22]]]]]],0,[57,41],[57,42],[57,43],[57,49],[57,38],[57,48],[57,45],[57,66],[[],51],[68,[[69,[68]]]],[50,[[11,[[39,[22]]]]]],0,[55,[[11,[50]]]],0,[[51,67]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[73,67],[[9,[74]]]],[[],72],0,[52,[[11,[51]]]],0,[51],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[35,[[9,[[36,[56]],24]]]],[[[69,[68]],[23,[22]]],[[9,[[36,[56]],24]]]],[51,[[75,[22]]]],[46,[[11,[[39,[22]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,[[11,[[39,[22]]]]]],0,0,0,[[]],[[]],0,[[[23,[22]]],[[9,[76,77]]]],[78,[[9,[[23,[22]],24]]]],[[]],[[79,13],[[26,[[15,[25]]]]]],[[]],[[],13],[[79,[13,[78]]],[[26,[[15,[25]]]]]],0,[[80,19,[23,[22]],[23,[22]]],25],0,[[],9],[[],9],[[],18],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[78],[76],[81],[78,78],[76,76],[81,81],[[]],[[]],[[]],[[],78],[[],76],[[],81],[78,67],[76,67],[81,67],[[78,78],3],[[76,76],3],[[81,81],3],[[78,4],5],[[76,4],5],[[81,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],0,0,0,0,[[[83,[82]],84],[[83,[82]]]],0,[[]],[[]],[[]],[[]],[[83,85]],[85],[[[86,[82]]],[[86,[82]]]],[[[83,[82]]],[[83,[82]]]],[[]],[[]],[[[86,[87]],4],5],[[[83,[[0,[87,82]]]],4],5],[[]],[[]],[[[88,[82]]],[[83,[82]]]],[13,[[26,[[15,[25]]]]]],0,[[]],[[]],[[],13],[[],13],[[[13,[78]]],[[26,[[15,[25]]]]]],[82,[[83,[82]]]],[[83,89],[[90,[9]]]],[89,[[90,[9]]]],[[[83,[82]],84],[[83,[82]]]],0,[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],[82,[[91,[[83,[82]]]]]]],"p":[[3,"Command"],[4,"Mode"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Args"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"str"],[3,"Request"],[8,"Error"],[3,"Box"],[3,"PathBuf"],[3,"String"],[3,"TypeId"],[3,"ConnectorHandle"],[3,"Connector"],[3,"Request"],[15,"u8"],[3,"Vec"],[3,"Status"],[8,"Future"],[3,"Pin"],[8,"Channel"],[3,"Params"],[3,"Instance"],[3,"UnixStream"],[6,"Result"],[3,"Params"],[3,"Instance"],[3,"HashMap"],[3,"LookupData"],[3,"OwnedFlatbuffer"],[8,"Buf"],[3,"PublicKeyInfoBuilder"],[3,"Vector"],[3,"WIPOffset"],[3,"UserRequestBuilder"],[3,"UserRequestResponseBuilder"],[3,"InitializationBuilder"],[15,"u32"],[3,"LookupDataBuilder"],[3,"LookupDataEntry"],[3,"ForwardsUOffset"],[3,"LookupDataEntryBuilder"],[3,"InitializeResponseBuilder"],[3,"PublicKeyInfo"],[3,"SessionId"],[3,"UserRequest"],[3,"UserRequestResponse"],[3,"Initialization"],[3,"InitializeResponse"],[3,"Empty"],[3,"FlatBufferBuilder"],[3,"UserRequestArgs"],[3,"UserRequestResponseArgs"],[3,"InitializationArgs"],[3,"InitializeResponseArgs"],[3,"PublicKeyInfoArgs"],[3,"LookupDataEntryArgs"],[3,"LookupDataArgs"],[3,"EmptyArgs"],[3,"EmptyBuilder"],[15,"usize"],[8,"AsyncHandler"],[3,"TrustedRuntimeAsyncClient"],[3,"Table"],[8,"TrustedRuntime"],[3,"TrustedRuntimeServer"],[3,"Verifier"],[4,"InvalidFlatbuffer"],[3,"Array"],[3,"UnaryResponse"],[3,"Status"],[3,"UnaryRequest"],[3,"SessionProxy"],[4,"SocketAddr"],[3,"PublicKeyInfo"],[8,"UnarySession"],[3,"UnarySessionServer"],[4,"CompressionEncoding"],[3,"Request"],[3,"_Inner"],[8,"Debug"],[3,"Arc"],[3,"Context"],[4,"Poll"],[3,"InterceptedService"],[13,"Crosvm"],[13,"Native"],[8,"LaunchedInstance"],[4,"UserRequestOffset"],[4,"UserRequestResponseOffset"],[4,"InitializationOffset"],[4,"InitializeResponseOffset"],[4,"PublicKeyInfoOffset"],[4,"LookupDataEntryOffset"],[4,"LookupDataOffset"],[4,"EmptyOffset"]]},\
"oak_functions_linux_fd_bin":{"doc":"","t":[7,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11],"n":["LOGGER","Logger","Opt","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","comms_fd","enabled","flush","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","log","main","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":["oak_functions_linux_fd_bin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,4,3,4,3,3,3,4,3,4,3,3,3,3,3,3,4,4,3,4,3,3,3,3,4,3,4,3,4,3,4,3,4,0,3,4,3,4,3,4,3,3,3],"f":[0,0,0,[[],1],[[],1],[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[]],[[]],[3,3],[[]],[[],2],[[],2],0,[[4,5],6],[4],[[3,7],8],[[]],[[]],[9,[[11,[3,10]]]],[9,[[11,[3,10]]]],[[],[[13,[12]]]],[[]],[[]],[[[15,[14]]],[[15,[1,14]]]],[[[15,[14]]],[[15,[1,14]]]],[16,[[16,[1]]]],[16,[[16,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[[4,18]],[[],19],[[]],[[],11],[[],11],[[],11],[[],11],[[],20],[[],20],[[3,9],[[11,[10]]]],[[3,9],[[11,[10]]]]],"p":[[8,"Any"],[3,"Command"],[3,"Opt"],[3,"Logger"],[3,"Metadata"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Record"],[15,"never"],[3,"TypeId"]]},\
"oak_functions_linux_vsock_bin":{"doc":"","t":[3,11,11,11,11,11,11,0,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Opt","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","channel","clone","clone_into","command","command_for_update","create_vsock_stream","file_descriptor","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","into_any","into_any_arc","into_any_rc","main","proto","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","BUFFER_SIZE","Channel","as_any","as_any_mut","borrow","borrow_mut","flush","from","into","into_any","into_any_arc","into_any_rc","new","read","read_buffer_consumer","read_buffer_producer","stream","try_from","try_into","type_id","write","oak","sandbox","runtime","Request","Response","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","data","data","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_functions_linux_vsock_bin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_linux_vsock_bin::channel","","","","","","","","","","","","","","","","","","","","","oak_functions_linux_vsock_bin::proto","oak_functions_linux_vsock_bin::proto::oak","oak_functions_linux_vsock_bin::proto::oak::sandbox","oak_functions_linux_vsock_bin::proto::oak::sandbox::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,3,3,3,3,3,3,0,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22],"f":[0,[[],1],[[],1],[2,2],[2,2],[[]],[[]],0,[3,3],[[]],[[],2],[[],2],[4,[[6,[5]]]],0,[[3,7],8],[[]],[9,[[11,[3,10]]]],[9,[[11,[3,10]]]],[[],[[13,[12]]]],[[]],[[[15,[14]]],[[15,[1,14]]]],[16,[[16,[1]]]],[17,[[17,[1]]]],[[],18],0,[[]],[[],11],[[],11],[[],19],[[3,9],[[11,[10]]]],[[3,9],[[11,[10]]]],0,0,[[],1],[[],1],[[]],[[]],[20,6],[[]],[[]],[[[15,[14]]],[[15,[1,14]]]],[16,[[16,[1]]]],[17,[[17,[1]]]],[[],20],[20,6],0,0,0,[[],11],[[],11],[[],19],[20,6],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[21],[22],[21,21],[22,22],[[]],[[]],0,0,[[],21],[[],22],[21,23],[22,23],[[21,21],24],[[22,22],24],[[21,7],8],[[22,7],8],[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[1,14]]]],[[[15,[14]]],[[15,[1,14]]]],[16,[[16,[1]]]],[16,[[16,[1]]]],[17,[[17,[1]]]],[17,[[17,[1]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],19],[[],19]],"p":[[8,"Any"],[3,"Command"],[3,"Opt"],[6,"RawFd"],[3,"VsockStream"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"never"],[3,"TypeId"],[3,"Channel"],[3,"Request"],[3,"Response"],[15,"usize"],[15,"bool"]]},\
"oak_functions_load_test":{"doc":"","t":[17,17,17,5],"n":["REQUEST","TOTAL_REQUESTS","URL","main"],"q":["oak_functions_load_test","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[0,0,0,[[],1]],"p":[[6,"Result"]]},\
"oak_functions_lookup":{"doc":"","t":[6,3,3,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Data","LookupData","LookupDataManager","LookupFactory","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create","create_lookup_data","for_test","format_bytes","from","from","from","get","get_handle","into","into","into","invoke","is_empty","len","log_debug","log_error","new_boxed_extension_factory","new_empty","terminate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_data"],"q":["oak_functions_lookup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Provides access to shared lookup data.","Utility for managing lookup data.","","","","","","","","","Creates a new <code>LookupData</code> instance with a reference to the …","Creates an instance of LookupData populated with the given …","Converts a binary sequence to a string if it is a valid …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets an individual entry from the backing data.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether the backing data is empty.","Gets the number of entries in the backing data.","Logs a debug message.","Logs an error message.","","Creates a new instance with empty backing data.","","","","","","","","","","","Updates the backing data that will be used by new …"],"i":[0,0,0,0,1,5,6,1,5,6,1,5,5,0,1,5,6,6,6,1,5,6,6,6,6,6,6,1,5,6,1,5,6,1,5,6,1,5,6,5],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[[3,[2]]]]]],[5,6],[7,5],[[],8],[[]],[[]],[[]],[6,[[11,[[10,[9]]]]]],[[[6,[12]]],13],[[]],[[]],[[]],[[[6,[12]],[10,[9]]],[[15,[[10,[9]],14]]]],[6,16],[6,17],[[6,18]],[[6,18]],[[[19,[5]]],[[4,[[3,[20]]]]]],[[],5],[[[6,[12]]],4],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],21],[[],21],[[],21],[[5,7]]],"p":[[3,"LookupFactory"],[8,"OakApiNativeExtension"],[3,"Box"],[6,"Result"],[3,"LookupDataManager"],[3,"LookupData"],[6,"Data"],[3,"String"],[15,"u8"],[3,"Vec"],[4,"Option"],[8,"OakLogger"],[4,"ExtensionHandle"],[4,"OakStatus"],[4,"Result"],[15,"bool"],[15,"usize"],[15,"str"],[3,"Arc"],[8,"ExtensionFactory"],[3,"TypeId"]]},\
"oak_functions_sdk":{"doc":"SDK functionality that provides idiomatic Rust wrappers …","t":[5,14,5,5,5,5,5,5],"n":["alloc","log","read_request","result_from_status","storage_get_item","testing","write_log_message","write_response"],"q":["oak_functions_sdk","","","","","","",""],"d":["","Logs a debug message.","Reads and returns the user request.","Convert a status returned from a host function call to a …","Looks up an item from the in-memory lookup store.","Calls the testing extension with the given request. The …","Writes a debug log message.","Write the response."],"i":[0,0,0,0,0,0,0,0],"f":[[1,2],0,[[],[[5,[[3,[2]],4]]]],[6,[[5,[4]]]],[[],[[5,[[7,[[3,[2]]]],4]]]],[[],[[5,[[3,[2]],4]]]],[[[9,[8]]],[[5,[4]]]],[[],[[5,[4]]]]],"p":[[15,"u32"],[15,"u8"],[3,"Vec"],[4,"OakStatus"],[4,"Result"],[15,"i32"],[4,"Option"],[15,"str"],[8,"AsRef"]]},\
"oak_functions_sdk_abi_test_get_storage_item":{"doc":"Oak Functions ABI test.","t":[5],"n":["main"],"q":["oak_functions_sdk_abi_test_get_storage_item"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"oak_functions_sdk_abi_test_invoke_testing":{"doc":"Oak Functions ABI test for Testing Extension.","t":[5],"n":["main"],"q":["oak_functions_sdk_abi_test_invoke_testing"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"oak_functions_test_utils":{"doc":"Test utilities to help with unit testing of Oak-Functions …","t":[3,3,3,5,5,11,11,11,11,11,11,5,5,5,12,5,11,11,11,11,11,11,11,11,11,11,5,5,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["Background","Term","TestResult","assert_response_body","background","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_rust_crate_wasm","compile_rust_wasm","create_and_start_oak_functions_server","elapsed","free_port","from","from","from","into","into","into","into_future","into_request","into_request","into_request","kill_process","make_request","poll","response","serialize_entries","terminate_and_join","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_to_temp_file"],"q":["oak_functions_test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wrapper around a termination signal <code>oneshot::Sender</code> and …","A wrapper around a termination signal <code>oneshot::Receiver</code>.","","","Executes the provided closure passing to it a <code>Term</code> …","","","","","","","Builds the crate identified by the given package name (as …","Uses cargo to compile a Rust manifest to Wasm bytes.","Starts an instance of the Oak Functions server running in …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Kills all the processes identified by the provided handle.","","","","Serializes the provided map as a contiguous buffer of …","Sends the termination signal to the background task and …","","","","","","","","","","","","",""],"i":[0,0,0,0,0,3,13,12,3,13,12,0,0,0,12,0,3,13,12,3,13,12,13,3,13,12,0,0,13,12,0,3,3,13,12,3,13,12,3,13,12,3,13,12,0],"f":[0,0,0,[[1,2]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[5,[4]]]],[[2,6],[[5,[[8,[7]]]]]],[[9,2,2],[[5,[10]]]],0,[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[10],[9,12],[[[14,[13]],15],16],0,[[[17,[[8,[7]],[8,[7]]]]],[[8,[7]]]],[3],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[],20]],"p":[[3,"Response"],[15,"str"],[3,"Background"],[3,"String"],[6,"Result"],[15,"bool"],[15,"u8"],[3,"Vec"],[15,"u16"],[3,"ReaderHandle"],[3,"Request"],[3,"TestResult"],[3,"Term"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"HashMap"],[4,"Result"],[3,"TypeId"],[3,"NamedTempFile"]]},\
"oak_functions_testing_extension":{"doc":"Extension to support testing.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TestingFactory","TestingLogger","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","for_test","from","from","into","into","log_public","log_sensitive","new_boxed_extension_factory","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_functions_testing_extension","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Implemenation of the <code>oak_loggger::OakLogger</code> trait to …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,2,1,2,1,1,1,2,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[2,[[5,[[4,[3]]]]]],[[],1],[[]],[[]],[[]],[[]],[[1,6,7]],[[1,6,7]],[[],[[5,[[4,[8]]]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10]],"p":[[3,"TestingLogger"],[3,"TestingFactory"],[8,"OakApiNativeExtension"],[3,"Box"],[6,"Result"],[4,"Level"],[15,"str"],[8,"ExtensionFactory"],[4,"Result"],[3,"TypeId"]]},\
"oak_functions_utils":{"doc":"","t":[0,6,6,3,11,11,11,11,11,11,11,11,11,11],"n":["sync","Mutex","MutexGuard","SpinLock","borrow","borrow_mut","from","into","lock","try_from","try_into","try_lock","type_id","unlock"],"q":["oak_functions_utils","oak_functions_utils::sync","","","","","","","","","","","",""],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1],[[],2],[[],2],[1,3],[[],4],[1]],"p":[[3,"SpinLock"],[4,"Result"],[15,"bool"],[3,"TypeId"]]},\
"oak_functions_wasm":{"doc":"Wasm business logic provider based on Wasmi.","t":[17,6,6,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ABI_USIZE","AbiExtensionHandle","AbiPointer","AbiPointerOffset","WasmHandler","WasmState","alloc","alloc_and_write_buffer_to_wasm_memory","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","from","from","get_memory","handle_invoke","handle_raw_invoke","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","invoke_extension","invoke_index","new","read_buffer_from_wasm_memory","read_request","read_u32_from_wasm_memory","resolve_func","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_buffer_to_wasm_memory","write_response","write_u32_to_wasm_memory"],"q":["oak_functions_wasm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wasm type identifier for position/offset values in linear …","","","","","<code>WasmState</code> holds runtime values for a particular execution …","","Writes the given <code>buffer</code> by allocating <code>buffer.len()</code> Wasm …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Helper function to get memory.","","Handles an invocation using raw bytes and returns the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Invocation of a host function specified by its registered …","","Reads the buffer starting at address <code>buf_ptr</code> with length …","Corresponds to the host ABI function <code>read_request</code>.","","","","","","","","","","Writes the buffer <code>source</code> at the address <code>dest</code> of the Wasm …","Corresponds to the host ABI function <code>write_response</code>.","Writes the u32 <code>value</code> at the <code>address</code> of the Wasm memory."],"i":[0,0,0,0,0,0,1,1,1,11,1,11,1,11,1,11,11,11,11,1,11,1,11,11,1,11,1,11,1,11,1,11,1,1,1,1,1,1,1,11,1,11,1,11,1,11,1,1,1],"f":[0,0,0,0,0,0,[[1,2],3],[[1,[5,[4]],3,3],[[7,[6]]]],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[[11,[[0,[9,10]]]]],[[11,[[0,[9,10]]]]]],[[]],[[[5,[[13,[12]]]]],[[14,[11]]]],[[]],[[]],[1,15],[[11,16],[[14,[17]]]],[[11,[5,[4]]],[[14,[[5,[4]]]]]],[[]],[[]],[[[13,[18]]],[[13,[8,18]]]],[[[13,[18]]],[[13,[8,18]]]],[19,[[19,[8]]]],[19,[[19,[8]]]],[20,[[20,[8]]]],[20,[[20,[8]]]],[[1,21,3,22,3,3],[[7,[6]]]],[[1,23,24],[[7,[[26,[25]],27]]]],[[28,[5,[4]],[31,[29,[13,[30]]]]],[[14,[1]]]],[[1,3,22],[[7,[[5,[4]],6]]]],[[1,3,3],[[7,[6]]]],[[1,3],[[7,[2,6]]]],[[1,32,33],[[7,[34,35]]]],[[]],[[],7],[[],7],[[],7],[[],7],[[],36],[[],36],[[1,3],[[7,[6]]]],[[1,3,22],[[7,[6]]]],[[1,2,3],[[7,[6]]]]],"p":[[3,"WasmState"],[15,"u32"],[6,"AbiPointer"],[15,"u8"],[3,"Vec"],[4,"OakStatus"],[4,"Result"],[8,"Any"],[8,"Clone"],[8,"OakLogger"],[3,"WasmHandler"],[8,"ExtensionFactory"],[3,"Box"],[6,"Result"],[3,"MemoryRef"],[3,"Request"],[3,"Response"],[3,"Global"],[3,"Arc"],[3,"Rc"],[6,"AbiExtensionHandle"],[6,"AbiPointerOffset"],[15,"usize"],[3,"RuntimeArgs"],[4,"RuntimeValue"],[4,"Option"],[3,"Trap"],[3,"Module"],[4,"ExtensionHandle"],[8,"OakApiNativeExtension"],[3,"HashMap"],[15,"str"],[3,"Signature"],[3,"FuncRef"],[4,"Error"],[3,"TypeId"]]},\
"oak_functions_web_client":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11],"n":["WebClient","borrow","borrow_mut","describe","from","from_abi","into","into_abi","invoke","is_none","main","new","none","ref_from_abi","ref_mut_from_abi","return_abi","try_from","try_into","type_id","vzip"],"q":["oak_functions_web_client","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2],"f":[0,[[]],[[]],[[]],[[]],[1,2],[[]],[2,1],[[2,[4,[3]]],5],[[],6],[[]],[7,[[8,[2,7]]]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],9],[[]]],"p":[[15,"u32"],[3,"WebClient"],[15,"u8"],[3,"Vec"],[3,"Promise"],[15,"bool"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"oak_functions_workload_logging":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["WorkloadLogger","WorkloadLoggingFactory","borrow","borrow","borrow_mut","borrow_mut","create","from","from","get_handle","into","into","invoke","new_boxed_extension_factory","terminate","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_functions_workload_logging","","","","","","","","","","","","","","","","","","","",""],"d":["Wrapper that uses the underlying logger to provide …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,1,6,1,6,1,1,6,6,1,6,6,1,6,1,6,1,6,1,6],"f":[0,0,[[]],[[]],[[]],[[]],[1,[[4,[[3,[2]]]]]],[[]],[[]],[[[6,[5]]],7],[[]],[[]],[[[6,[5]],[9,[8]]],[[11,[[9,[8]],10]]]],[[],[[4,[[3,[12]]]]]],[[[6,[5]]],4],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13]],"p":[[3,"WorkloadLoggingFactory"],[8,"OakApiNativeExtension"],[3,"Box"],[6,"Result"],[8,"OakLogger"],[3,"WorkloadLogger"],[4,"ExtensionHandle"],[15,"u8"],[3,"Vec"],[4,"OakStatus"],[4,"Result"],[8,"ExtensionFactory"],[3,"TypeId"]]},\
"oak_grpc_unary_attestation":{"doc":"Remote Attestation handshake protocol implemened using …","t":[0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["client","proto","server","UnaryGrpcClient","borrow","borrow_mut","create","from","into","into_request","message","try_from","try_into","type_id","vzip","PublicKeyInfo","UnaryRequest","UnaryResponse","attestation","body","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","public_key","session_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unary_session_client","unary_session_server","vzip","vzip","vzip","UnarySessionClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_public_key_info","into","into_request","message","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","UnarySession","UnarySessionServer","accept_compressed","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","get_public_key_info","into","into_request","message","new","poll_ready","poll_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","AttestationServer","borrow","borrow_mut","create","from","get_public_key_info","into","into_request","message","try_from","try_into","type_id","vzip"],"q":["oak_grpc_unary_attestation","","","oak_grpc_unary_attestation::client","","","","","","","","","","","","oak_grpc_unary_attestation::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_grpc_unary_attestation::proto::unary_session_client","","","","","","","","","","","","","","","","","","","","","","oak_grpc_unary_attestation::proto::unary_session_server","","","","","","","","","","","","","","","","","","","","","","","","","","oak_grpc_unary_attestation::server","","","","","","","","","","","",""],"d":["","","Server-side implementation of the bidirectional gRPC …","gRPC implementation of <code>AttestationTransport</code> trait using …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","The serialized attestation report binding the public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The serialized public key.","Links a sequence of messages, declaring them as part of a …","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","Service definition for unary communication with the …","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","Gets the public key and the attestation report that binds …","Calls <code>U::from(self)</code>.","","Used to send a sequence of a messages for session key …","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","Service definition for unary communication with the …","Enable decompressing requests with the given encoding.","","","","","","","","Returns the argument unchanged.","","Gets the public key and the attestation report that binds …","Calls <code>U::from(self)</code>.","","Used to send a sequence of a messages for session key …","","","","Compress responses with the given encoding, if the client …","","","","","","","gRPC Attestation Service implementation.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,15,13,14,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,15,13,13,14,15,13,14,15,13,14,15,13,14,15,0,0,13,14,15,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,32,32,32,32,32,32,32,32,32,32,31,32,32,31,32,32,32,32,32,32,32,32,32,32,0,37,37,37,37,37,37,37,37,37,37,37,37],"f":[0,0,0,0,[[]],[[]],[1,[[3,[2]]]],[[]],[[]],[[],4],[[2,5,[7,[6]]],[[10,[[9,[8]]]]]],[[],11],[[],11],[[],12],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[13],[14],[15],[13,13],[14,14],[15,15],[[]],[[]],[[]],[[],13],[[],14],[[],15],[13,16],[14,16],[15,16],[[13,13],17],[[14,14],17],[[15,15],17],[[13,18],19],[[14,18],19],[[15,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],0,[[20,21],20],[[]],[[]],[[[20,[22]]],[[20,[22]]]],[[]],[[],[[11,[[20,[23]],24]]]],[[[20,[25]],18],19],[[]],[[20,26],[[11,[[27,[15]],28]]]],[[]],[[],4],[[20,[26,[13]]],[[11,[[27,[14]],28]]]],[[],20],[[20,21],20],[[]],[[],11],[[],11],[[],12],[[]],[[],[[20,[29]]]],[30,20],0,0,[[[32,[31]],21],[[32,[31]]]],[[]],[[]],[33],[[32,33]],[[[32,[31]]],[[32,[31]]]],[[]],[[[32,[[0,[25,31]]]],18],19],[[]],[[[34,[31]]],[[32,[31]]]],[4,[[10,[[9,[8]]]]]],[[]],[[],4],[[[4,[13]]],[[10,[[9,[8]]]]]],[31,[[32,[31]]]],[[32,35],[[36,[11]]]],[35,[[36,[11]]]],[[[32,[31]],21],[[32,[31]]]],[[]],[[],11],[[],11],[[],12],[[]],[31,[[29,[[32,[31]]]]]],0,[[]],[[]],[[],[[3,[37]]]],[[]],[[37,4],[[10,[[9,[8]]]]]],[[]],[[],4],[[37,[4,[13]]],[[10,[[9,[8]]]]]],[[],11],[[],11],[[],12],[[]]],"p":[[15,"str"],[3,"UnaryGrpcClient"],[6,"Result"],[3,"Request"],[6,"SessionId"],[15,"u8"],[3,"Vec"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Result"],[3,"TypeId"],[3,"UnaryRequest"],[3,"UnaryResponse"],[3,"PublicKeyInfo"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"UnarySessionClient"],[4,"CompressionEncoding"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"Debug"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[3,"InterceptedService"],[3,"Uri"],[8,"UnarySession"],[3,"UnarySessionServer"],[3,"Request"],[3,"Arc"],[3,"Context"],[4,"Poll"],[3,"AttestationServer"]]},\
"oak_idl":{"doc":"","t":[13,13,8,13,13,13,13,8,13,13,13,13,13,13,3,13,3,4,13,13,13,13,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,10,12,12,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Aborted","AlreadyExists","AsyncHandler","Cancelled","DataLoss","DeadlineExceeded","FailedPrecondition","Handler","Internal","InvalidArgument","NotFound","Ok","OutOfRange","PermissionDenied","Request","ResourceExhausted","Status","StatusCode","Unauthenticated","Unavailable","Unimplemented","Unknown","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code","eq","eq","fmt","fmt","from","from","from","from","into","into","into","invoke","invoke","message","method_id","new","new_with_message","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","OwnedFlatbuffer","OwnedFlatbufferBuilder","borrow","borrow","borrow_mut","borrow_mut","buf","default","deref","deref_mut","finish","fmt","from","from","from_vec","get","into","into","into_vec","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_idl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_idl::utils","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The operation was aborted.","Some entity that we attempted to create already exists.","Async version of <code>Handler</code> to support async clients.","The operation was cancelled.","Unrecoverable data loss or corruption.","Deadline expired before operation could complete.","The system is not in a state required for the operation’…","A message-oriented handler that allows performing …","Internal error.","Client specified an invalid argument.","Some requested entity was not found.","The operation completed successfully.","Operation was attempted past the valid range.","The caller does not have permission to execute the …","A request message representing an invocation of the method …","Some resource has been exhausted.","","gRPC status codes used by <code>Status</code>.","The request does not have valid authentication credentials","The service is currently unavailable.","Operation is not implemented or not supported.","Unknown error.","The serialized request payload, corresponding to the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","English message that helps developers understand and …","Identifies the method to be invoked, as defined by the IDL.","","","","","","","","","","","","Utilities for improving the ergonomics of FlatBuffers in …","An owned flatbuffer message, which owns the underlying …","A helper struct to facilitate building a <code>OwnedFlatbuffer</code>.","","","","","Returns a reference to the underlying owned buffer.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the flatbuffer object, pointing …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying owned buffer.","","","","","",""],"i":[3,3,0,3,3,3,3,0,3,3,3,3,3,3,0,3,0,0,3,3,3,3,7,7,1,3,7,1,3,1,1,3,1,3,7,1,3,3,7,1,3,24,25,1,7,1,1,7,1,3,7,1,3,7,1,3,0,0,0,20,17,20,17,17,20,20,20,20,17,20,17,17,17,20,17,17,20,17,20,17,20,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,1],2],[[3,3],2],[[1,4],5],[[3,4],5],[[]],[[]],[6,3],[[]],[[]],[[]],[[]],[7,[[10,[[9,[8]],1]]]],[7,[[13,[[12,[11]]]]]],0,0,[3,1],[[3,[15,[14]]],1],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],16],[[],16],[[],16],0,0,0,[[]],[[]],[[]],[[]],[17],[[],[[20,[[0,[18,19]]]]]],[20],[20],[[[20,[[0,[18,19]]]],[21,[[0,[18,19]]]]],[[10,[[17,[[0,[18,19]]]],22]]]],[[[17,[23]],4],5],[[]],[[]],[[[9,[8]]],[[10,[[17,[18]],22]]]],[[[17,[[0,[19,18]]]]]],[[]],[[]],[17,[[9,[8]]]],[[],10],[[],10],[[],10],[[],10],[[],16],[[],16]],"p":[[3,"Status"],[15,"bool"],[4,"StatusCode"],[3,"Formatter"],[6,"Result"],[15,"u32"],[3,"Request"],[15,"u8"],[3,"Vec"],[4,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"String"],[8,"Into"],[3,"TypeId"],[3,"OwnedFlatbuffer"],[8,"Verifiable"],[8,"Follow"],[3,"OwnedFlatbufferBuilder"],[3,"WIPOffset"],[4,"InvalidFlatbuffer"],[8,"Debug"],[8,"Handler"],[8,"AsyncHandler"]]},\
"oak_idl_gen_services":{"doc":"This crate allows compiling flatbuffer services to Rust in …","t":[5,5,5],"n":["compile_services_async_clients","compile_services_clients","compile_services_servers"],"q":["oak_idl_gen_services","",""],"d":["Compile Rust async client code from the services in the …","Compile Rust client code from the services in the provided …","Compile Rust server code from the services in the provided …"],"i":[0,0,0],"f":[[1],[1],[1]],"p":[[15,"str"]]},\
"oak_idl_gen_structs":{"doc":"This crate allows compiling flatbuffer structs and tables …","t":[5],"n":["compile_structs"],"q":["oak_idl_gen_structs"],"d":["Compile structs and tables from the provided flatbuffer …"],"i":[0],"f":[[1]],"p":[[15,"str"]]},\
"oak_linux_boot_params":{"doc":"","t":[13,3,13,3,3,18,13,3,3,17,13,13,4,13,3,13,3,13,3,13,18,18,18,3,13,13,3,13,13,18,13,13,13,3,3,4,3,3,13,18,18,18,18,18,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,12,12,12,12,12,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12],"n":["ACPI","APMBiosInfo","AppleProperties","BootE820Entry","BootParams","CAN_USE_HEAP","CCBlob","CCBlobSevInfo","CCSetupData","CC_BLOB_SEV_INFO_MAGIC","DISABLED","DTB","E820EntryType","E820Ext","EDIDInfo","EFI","EFIInfo","IMA","ISTInfo","Jailhouse","KASLR_FLAG","KEEP_SEGMENTS","LOADED_HIGH","LoadFlags","NVS","None","OLPCOfwHeader","PCI","PMEM","QUIET_FLAG","RAM","RESERVED","RngSeed","ScreenInfo","SetupData","SetupDataType","SetupHeader","SysDescTable","UNUSABLE","XLF_CAN_BE_LOADED_ABOVE_4G","XLF_EFI_HANDOVER_32","XLF_EFI_HANDOVER_64","XLF_EFI_KEXEC","XLF_KERNEL_64","XLoadFlags","_eddbuf","_pad2","_pad3","_pad4","_pad5","_pad6","_pad7","_pad8","_pad9","_reserved","_reserved","_rsvd1","_rsvd2","acpi_rsdp_addr","addr","all","all","alt_mem_k","apm_bios_info","args","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","blue_pos","blue_size","boot_flag","bootsect_kludge","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","cc_blob_address","cc_blob_address","cif_handler","cl_magic","cl_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd_line_ptr","cmdline_size","cmp","cmp","code32_start","command","complement","complement","contains","contains","cpuid_len","cpuid_phys","cseg","cseg_16","cseg_16_len","cseg_len","difference","difference","dseg","dseg_len","dummy","e820_entries","e820_table","e820_table","edd_mbr_sig_buf_entries","edd_mbr_sig_buffer","eddbuf_entries","edid_info","efi_info","efi_loader_signature","efi_memdesc_size","efi_memdesc_version","efi_memmap","efi_memmap_hi","efi_memmap_size","efi_systab","efi_systab_hi","empty","empty","entry_type","eq","eq","eq","eq","event","ext_cmd_line_ptr","ext_lfb_base","ext_loader_type","ext_loader_ver","ext_mem_k","ext_ramdisk_image","ext_ramdisk_size","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_repr","from_repr","green_pos","green_size","handover_offset","hardware_subarch","hardware_subarch_data","hash","hash","hd0_info","hd1_info","hdr","header","header","heap_end_ptr","init_size","initrd_addr_max","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","irq_desc_table","is_all","is_all","is_empty","is_empty","ist_info","jump","kbd_status","kernel_alignment","kernel_info_offset","kernel_version","len","length","lfb_base","lfb_depth","lfb_height","lfb_linelength","lfb_size","lfb_width","loadflags","magic","min_alignment","next","not","not","offset","ofw_magic","ofw_version","olpc_ofw_header","orig_video_cols","orig_video_ega_bx","orig_video_is_vga","orig_video_lines","orig_video_mode","orig_video_page","orig_video_points","orig_x","orig_y","pages","partial_cmp","partial_cmp","payload_length","payload_offset","perf_level","pref_address","protocol","ram_size","ramdisk_image","ramdisk_size","realmode_swtch","red_pos","red_size","relocatable_kernel","remove","remove","root_dev","root_flags","rsvd_pos","rsvd_size","scratch","screen_info","secrets_len","secrets_phys","secure_boot","sentinel","set","set","setup_data","setup_move_size","setup_sects","signature","size","start_sys_seg","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","sys_desc_table","syssize","table","tboot_addr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_loader","union","union","unused2","unused3","version","version","version","vesa_attributes","vesapm_off","vesapm_seg","vid_mode","xloadflags"],"q":["oak_linux_boot_paramsd":["ACPI Reclaim Memory. Available after the OS reads the ACPI …","","","","","Indicates that the value entered in …","","","","","Memory that is not enabled.","","E820 address range types according to Chapter 15 of the …","","","","","","","","Used internally by the compressed kernel to communicate …","","If <code>0</code>, the protected-mode code is loaded at <code>0x10000</code>.If <code>1</code>, …","Boot protocol option flags.","ACPI NVS memory; in use or reserved by the system.","","","","Persistent memory: must be handled distinct from …","Requests the kernel to not write early messages that …","Available RAM usable by the operating system.","In use or reserved by the system.","","","","","Real-mode Kernel Header.","","Memory in which errors have been detected.","The kernel/boot_params/cmdline/ramdisk can be above 4G.","The kernel supports the 32-bit EFI handoff entry point …","The kernel supports the 64-bit EFI handoff entry point …","The kernel supports kexec EFI boot with EFI runtime …","This kernel has the legacy 64-bit entry point at <code>0x200</code>.","Extended Boot protocol option flags.","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","0xAA55 magic number","DO NOT USE - for bootsect.S use only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","32-bit pointer to the kernel command line","Maximum size of the kernel command line","","","Boot loader hook","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","Extended boot laoder ID","Extended boot loader version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Try to create Self from the raw representation","Try to create Self from the raw representation","","","Offset of handover entry point","Hardware subarchitecture","Subarchitecture-specific data","","","","","","","Magic signature “HdrS”","Free memory after setup end","Linear memory required during initialization","Highest legal initrd address","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Jump instruction","","Physical addr alignment required for kernel","Offset of the kernel_info","Pointer to kernel version string","","","","","","","","","Boot protocol option flags","","Minimum alignment, as a power of two","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","Length of kernel payload","Offset of kernel payload","","Preferred loading address","","DO NOT USE - for bootsect.S use only","initrd load address (set by boot loader)","initrd size (set by boot loader)","Boot loader hook","","","Whether kernel is relocatable or not","Removes the specified flags in-place.","Removes the specified flags in-place.","Default root device number","If this field is nonzero, the root defaults to readonly.","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","64-bit physical pointer to linked list of struct setup_data","Move to high memory size (used with hooks)","The size of the setup code in 512-byte sectors.","","","The load-low segment (<code>0x1000</code>) (obsolete)","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","The size of the protected-mode code in units of 16-byte …","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boot loader identifier","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Boot protocol version supported","","","","","","Video mode control","Boot protocol option flags"],"i":[9,0,10,0,0,3,10,0,0,0,9,10,0,10,0,10,0,10,0,10,3,3,3,0,9,10,0,10,9,3,9,9,10,0,0,0,0,0,9,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,12,19,19,19,5,1,3,4,5,5,5,3,4,3,4,3,4,3,4,3,4,3,4,3,4,12,12,11,11,32,33,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,32,33,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,12,33,5,16,12,12,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,11,11,3,4,11,14,3,4,3,4,19,19,13,13,13,13,3,4,13,13,18,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,3,4,1,9,3,4,10,14,5,12,11,11,12,5,5,3,4,12,13,9,9,3,3,3,3,3,4,4,4,4,4,10,10,11,1,12,13,14,15,16,17,18,32,33,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,3,4,3,4,3,4,3,4,9,10,12,12,11,11,11,3,4,5,5,5,33,11,11,11,11,3,4,3,4,3,4,32,33,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,16,3,4,3,4,5,11,5,11,11,11,32,15,12,12,12,12,12,12,11,19,11,32,3,4,13,16,16,5,12,12,12,12,12,12,12,12,12,12,3,4,11,11,14,11,5,11,11,11,11,12,12,11,3,4,11,11,12,12,5,5,19,19,5,5,3,4,11,11,11,14,1,11,3,4,3,4,3,4,5,11,15,5,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,9,10,3,4,32,33,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,32,33,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,32,32,33,9,3,4,10,11,1,12,13,14,15,16,17,18,5,19,11,3,4,12,12,11,13,19,12,12,12,11,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],3],[[],4],0,0,[5,6],[[3,3],3],[[4,4],4],[[3,3]],[[4,4]],[[3,3],3],[[4,4],4],[[3,3]],[[4,4]],[3,7],[4,8],[[3,3],3],[[4,4],4],[[3,3]],[[4,4]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[9,9],[3,3],[4,4],[10,10],[11,11],[1,1],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[5,5],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[3,3],20],[[4,4],20],0,0,[3,3],[4,4],[[3,3],21],[[4,4],21],0,0,0,0,0,0,[[3,3],3],[[4,4],4],0,0,0,0,[5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[],4],[1,9],[[9,9],21],[[3,3],21],[[4,4],21],[[10,10],21],0,0,0,0,0,0,0,0,[[3,22]],[[4,22]],0,0,[[9,23],24],[[9,23],[[26,[25]]]],[[3,23],24],[[3,23],24],[[3,23],24],[[3,23],24],[[3,23],24],[[4,23],24],[[4,23],24],[[4,23],24],[[4,23],24],[[4,23],24],[[10,23],[[26,[25]]]],[[10,23],24],[[11,23],24],[[1,23],24],[[12,23],24],[[13,23],24],[[14,23],24],[[15,23],24],[[16,23],24],[[17,23],24],[[18,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[27,[3]]]],[8,[[27,[4]]]],[7,3],[8,4],[7,3],[8,4],[22,3],[22,4],[28,[[27,[9]]]],[28,[[27,[10]]]],0,0,0,0,0,[3],[4],0,0,0,0,0,0,0,0,[[3,3]],[[4,4]],[[3,3],3],[[4,4],4],[[3,3],21],[[4,4],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,21],[4,21],[3,21],[4,21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,3],[4,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,3],[[27,[20]]]],[[4,4],[[27,[20]]]],0,0,0,0,[5,29],0,0,0,0,0,0,0,[[3,3]],[[4,4]],0,0,0,0,0,0,0,0,0,0,[[3,3,21]],[[4,4,21]],0,0,0,0,[1,2],0,[[3,3],3],[[4,4],4],[[3,3]],[[4,4]],[[3,3],3],[[4,4],4],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[3,3]],[[4,4]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[3,3],3],[[4,4],4],0,0,0,0,0,0,0,0,0,0],"p":[[3,"BootE820Entry"],[15,"usize"],[3,"LoadFlags"],[3,"XLoadFlags"],[3,"BootParams"],[3,"CStr"],[15,"u8"],[15,"u16"],[4,"E820EntryType"],[4,"SetupDataType"],[3,"SetupHeader"],[3,"ScreenInfo"],[3,"APMBiosInfo"],[3,"ISTInfo"],[3,"SysDescTable"],[3,"OLPCOfwHeader"],[3,"EFIInfo"],[3,"EDIDInfo"],[3,"CCBlobSevInfo"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[4,"Option"],[15,"u32"],[15,"str"],[3,"String"],[3,"TypeId"],[3,"SetupData"],[3,"CCSetupData"]]},\
"oak_logger":{"doc":"","t":[13,13,13,4,8,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11],"n":["Debug","Error","Info","Level","OakLogger","Trace","Warn","as_str","borrow","borrow_mut","clone","clone_into","cmp","eq","eq","fmt","fmt","from","from_str","ge","ge","gt","gt","hash","into","iter","le","le","log_public","log_sensitive","lt","lt","max","partial_cmp","partial_cmp","to_level_filter","to_owned","to_string","try_from","try_into","type_id"],"q":["oak_logger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The “debug” level.","The “error” level.","The “info” level.","An enum representing the available verbosity levels of the …","","The “trace” level.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","","","Logs a message that contains only public, non-sensitive …","Logs the message, which might contain sensitive …","","","Returns the most verbose logging level.","","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","","","","",""],"i":[1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,13,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,[1,2],[[]],[[]],[1,1],[[]],[[1,1],3],[[1,4],5],[[1,1],5],[[1,6],[[8,[7]]]],[[1,6],[[8,[7]]]],[[]],[2,[[8,[1]]]],[[1,4],5],[[1,1],5],[[1,4],5],[[1,1],5],[1],[[]],[[],9],[[1,1],5],[[1,4],5],[[1,2]],[[1,2]],[[1,4],5],[[1,1],5],[[],1],[[1,1],[[10,[3]]]],[[1,4],[[10,[3]]]],[1,4],[[]],[[],11],[[],8],[[],8],[[],12]],"p":[[4,"Level"],[15,"str"],[4,"Ordering"],[4,"LevelFilter"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Iterator"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"OakLogger"]]},\
"oak_protobuf_idl":{"doc":"","t":[13,13,8,13,13,13,2,13,16,16,13,13,13,13,2,13,13,13,13,3,13,3,4,3,4,8,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Aborted","AlreadyExists","AsyncTransport","Cancelled","DataLoss","DeadlineExceeded","Err","Err","Error","Error","FailedPrecondition","Internal","InvalidArgument","NotFound","Ok","Ok","Ok","OutOfRange","PermissionDenied","Request","ResourceExhausted","Response","Result","Status","StatusCode","Transport","Unauthenticated","Unavailable","Unimplemented","Unknown","Vec","advance_mut","allocator","and","and_then","append","as_deref","as_deref_mut","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_ptr","as_ref","as_ref","as_ref","as_slice","async_client_invoke","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","capacity","chunk_mut","clear","clear","clear","clear","client_invoke","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","cloned","cloned","cmp","cmp","code","contains","contains_err","copied","copied","dedup","dedup_by","dedup_by_key","default","default","default","deref","deref_mut","drain","drain_filter","drop","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","err","error_response","expect","expect_err","extend","extend","extend_from_slice","extend_from_within","extend_one","extend_one","extend_reserve","extend_reserve","flatten","flush","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_output","from_raw_parts","from_raw_parts_in","from_residual","from_residual","hash","hash","index","index_mut","insert","inspect","inspect_err","into","into","into","into","into","into","into_boxed_slice","into_err","into_flattened","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_ok","into_raw_parts","into_raw_parts_with_alloc","invoke","invoke","is_empty","is_err","is_err_and","is_ok","is_ok_and","is_write_vectored","iter","iter_mut","leak","len","map","map_err","map_or","map_or_else","message","method_id","ne","ne","ne","ne","ne","ne","new","new","new_in","new_with_message","ok","or","or_else","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","product","push","put","put_bytes","put_slice","remaining_mut","remove","report","reserve","reserve_exact","resize","resize_with","response","response","retain","retain_mut","set_len","shrink_to","shrink_to_fit","spare_capacity_mut","splice","split_at_spare_mut","split_off","success_response","sum","swap_remove","to_owned","to_owned","to_owned","to_owned","transpose","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","unwrap_err","unwrap_err_unchecked","unwrap_or","unwrap_or_default","unwrap_or_else","unwrap_unchecked","with_capacity","with_capacity_in","write","write_all","write_vectored","0","0","Body","Error","Response","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","0","0"],"q":["oak_protobuf_idloak_protobuf_idl::Result","","oak_protobuf_idl::response","","","","","","","","","","","","","","","","","","oak_protobuf_idl::response::Response",""],"d":["The operation was aborted.","Some entity that we attempted to create already exists.","Same as <code>Transport</code>, but for async use cases.","The operation was cancelled.","Unrecoverable data loss or corruption.","Deadline expired before operation could complete.","","Contains the error value","Type representing any transport-specific errors. By …","See <code>Transport::Error</code>.","The system is not in a state required for the operation’…","Internal error.","Client specified an invalid argument.","Some requested entity was not found.","","The operation completed successfully.","Contains the success value","Operation was attempted past the valid range.","The caller does not have permission to execute the …","A wrapper message representing a request over a transport.","Some resource has been exhausted.","A wrapper message representing a response over a transport.","<code>Result</code> is a type that represents either success (<code>Ok</code>) or …","","gRPC status codes used by <code>Status</code>.","A message-oriented transport that allows performing …","The request does not have valid authentication credentials","The service is currently unavailable.","Operation is not implemented or not supported.","Unknown error.","A contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …","","Returns a reference to the underlying allocator.","Returns <code>res</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> …","Calls <code>op</code> if the result is <code>Ok</code>, otherwise returns the <code>Err</code> …","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","Converts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;Result&lt;T, E&gt;</code>) to …","Converts from <code>Result&lt;T, E&gt;</code> (or <code>&amp;mut Result&lt;T, E&gt;</code>) to …","","","Converts from <code>&amp;mut Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;mut T, &amp;mut E&gt;</code>.","Returns an unsafe mutable pointer to the vector’s …","Extracts a mutable slice of the entire vector.","Returns a raw pointer to the vector’s buffer, or a …","","","Converts from <code>&amp;Result&lt;T, E&gt;</code> to <code>Result&lt;&amp;T, &amp;E&gt;</code>.","Extracts a slice containing the entire vector.","Same as <code>client_invoke</code>, but via an <code>AsyncTransport</code>.","The bytes of the serialized request.","","","","","","","","","","","","","","","","Returns the number of elements the vector can hold without …","","","","Clears the vector, removing all values.","","Invokes the method identified by <code>method_id</code> via the …","","","","","","","","","","","Maps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the …","Maps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by cloning the …","","","","Returns <code>true</code> if the result is an <code>Ok</code> value containing the …","Returns <code>true</code> if the result is an <code>Err</code> value containing the …","Maps a <code>Result&lt;&amp;mut T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the …","Maps a <code>Result&lt;&amp;T, E&gt;</code> to a <code>Result&lt;T, E&gt;</code> by copying the …","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","","","Creates an empty <code>Vec&lt;T&gt;</code>.","","","Removes the specified range from the vector in bulk, …","Creates an iterator which uses a closure to determine if …","","","","","","","","","","","","","","","","","","Converts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;E&gt;</code>.","Creates a <code>Response</code> representing an error.","Returns the contained <code>Ok</code> value, consuming the <code>self</code> value.","Returns the contained <code>Err</code> value, consuming the <code>self</code> value.","","","Clones and appends all elements in a slice to the <code>Vec</code>.","Copies elements from <code>src</code> range to the end of the vector.","","","","","Converts from <code>Result&lt;Result&lt;T, E&gt;, E&gt;</code> to <code>Result&lt;T, E&gt;</code>","","","","","","","","Creates a <code>String</code> using interpolation of runtime …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Turn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Returns the argument unchanged.","","","Convert a boxed slice into a vector by transferring …","Converts a <code>CString</code> into a Vec&lt;u8&gt;.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Converts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Allocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.","Allocate a <code>Vec&lt;T&gt;</code> and move <code>s</code>’s items into it.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Convert a clone-on-write slice into a vector.","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …","Returns the argument unchanged.","","","","Takes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …","","Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a capacity, and …","Creates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a capacity, a …","","","","","","","Inserts an element at position <code>index</code> within the vector, …","Calls the provided closure with a reference to the …","Calls the provided closure with a reference to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the vector into <code>Box&lt;[T]&gt;</code>.","Returns the contained <code>Err</code> value, but never panics.","Takes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.","Creates a consuming iterator, that is, one that moves each …","","","","Returns a consuming iterator over the possibly contained …","","Returns the contained <code>Ok</code> value, but never panics.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","","See <code>Transport::invoke</code>.","Returns <code>true</code> if the vector contains no elements.","Returns <code>true</code> if the result is <code>Err</code>.","Returns <code>true</code> if the result is <code>Err</code> and the value inside of …","Returns <code>true</code> if the result is <code>Ok</code>.","Returns <code>true</code> if the result is <code>Ok</code> and the value inside of …","","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained …","Consumes and leaks the <code>Vec</code>, returning a mutable reference …","Returns the number of elements in the vector, also …","Maps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;U, E&gt;</code> by applying a function …","Maps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;T, F&gt;</code> by applying a function …","Returns the provided default (if <code>Err</code>), or applies a …","Maps a <code>Result&lt;T, E&gt;</code> to <code>U</code> by applying fallback function …","English message that helps developers understand and …","The id of the method to invoke. This is usually specified …","","","","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code>.","Constructs a new, empty <code>Vec&lt;T, A&gt;</code>.","","Converts from <code>Result&lt;T, E&gt;</code> to <code>Option&lt;T&gt;</code>.","Returns <code>res</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> …","Calls <code>op</code> if the result is <code>Err</code>, otherwise returns the <code>Ok</code> …","","","","","Removes the last element from a vector and returns it, or …","Takes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …","Appends an element to the back of a collection.","","","","","Removes and returns the element at position <code>index</code> within …","","Reserves capacity for at least <code>additional</code> more elements to …","Reserves the minimum capacity for at least <code>additional</code> more …","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Nested message and enum types in <code>Response</code>.","","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","Forces the length of the vector to <code>new_len</code>.","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of the vector as much as possible.","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of <code>T</code>, along with the …","Splits the collection into two at the given index.","Creates a <code>Response</code> representing success.","Takes each element in the <code>Iterator</code>: if it is an <code>Err</code>, no …","Removes an element from the vector and returns it.","","","","","Transposes a <code>Result</code> of an <code>Option</code> into an <code>Option</code> of a <code>Result</code>…","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve the minimum capacity for at least …","","","","","","","Returns the contained <code>Ok</code> value, consuming the <code>self</code> value.","Returns the contained <code>Err</code> value, consuming the <code>self</code> value.","Returns the contained <code>Err</code> value, consuming the <code>self</code> value, …","Returns the contained <code>Ok</code> value or a provided default.","Returns the contained <code>Ok</code> value or a default","Returns the contained <code>Ok</code> value or computes it from a …","Returns the contained <code>Ok</code> value, consuming the <code>self</code> value, …","Constructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …","","","","","","The bytes of the serialized response, if successful.","A status / error message, in case of failure.","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Decodes an instance of the message from a buffer, and …","","","","","",""],"i":[18,18,0,18,18,18,0,5,56,57,18,18,18,18,0,18,5,18,18,0,18,0,0,0,0,0,18,18,18,18,0,3,3,5,5,3,5,5,3,3,5,3,3,3,3,3,5,3,0,12,12,9,18,13,3,3,5,12,9,18,13,3,3,5,5,3,3,12,13,3,3,0,12,13,3,5,3,5,12,13,3,5,5,5,3,5,9,5,5,5,5,3,3,3,12,13,3,3,3,3,3,3,12,13,3,12,9,18,13,3,3,3,3,3,3,3,3,5,5,0,5,5,3,3,3,3,3,3,3,3,5,3,12,9,18,13,3,5,0,12,9,18,18,13,3,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,3,5,5,3,3,5,5,3,5,3,3,3,5,5,12,9,18,13,3,5,3,5,3,3,3,3,5,5,5,5,3,3,56,57,3,5,5,5,5,3,5,5,3,3,5,5,5,5,9,12,3,3,3,3,3,3,9,3,3,9,5,5,5,3,3,3,5,3,5,3,3,3,3,3,3,5,3,3,3,3,0,13,3,3,3,3,3,3,3,3,3,0,5,3,12,13,3,5,5,3,12,9,18,13,3,5,12,9,18,13,3,5,3,3,12,9,18,13,3,5,5,5,5,5,5,5,5,3,3,3,3,3,58,59,52,52,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,60,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[1,2]],4]],[3],[[5,5],5],[5,5],[[3,3]],[5,5],[5,5],[3],[3,3],[5,5],[3],[3],[3],[3,3],[3],[5,5],[3],[6,[[5,[[5,[[0,[7,8]],9]]]]]],0,[[]],[[]],[[]],[[]],[[]],[3],[[]],[[]],[[]],[[]],[[]],[3],[[]],[[]],[5,10],[3,4],[[[3,[1,2]]],11],[12],[13],[3],[[[3,[1,2]]]],[6,[[5,[[5,[[0,[7,8]],9]]]]]],[12,12],[13,13],[3,3],[5,5],[[3,3]],[[5,5]],[[]],[[]],[[]],[[]],[5,5],[5,5],[[3,3],14],[[5,5],14],0,[5,15],[5,15],[5,5],[5,5],[3],[3],[3],[[],12],[[],13],[[],[[3,[2]]]],[3],[3],[3,16],[3,17],[3],[12,4],[13,4],[[[3,[1,2]]],4],[[12,12],15],[[9,9],15],[[18,18],15],[[13,13],15],[3,15],[3,15],[3,15],[[3,3],15],[[[3,[1,2]],19],15],[3,15],[3,15],[[[3,[1,2]],20],15],[[5,5],15],[5,21],[9,13],[[5,22]],[[5,22]],[3],[3],[3],[3],[3],[3],[[3,4]],[[3,4]],[[[5,[5]]],5],[[[3,[1]]],[[5,[23]]]],[[12,24],25],[[9,24],[[5,[26]]]],[[18,24],[[5,[26]]]],[[13,24],25],[[3,24],[[5,[26]]]],[[5,24],[[5,[26]]]],0,[[]],[[]],[6,18],[[]],[[]],[27,3],[[]],[19,[[3,[1,2]]]],[20,[[3,[1,2]]]],[28,3],[29,[[3,[1,2]]]],[[],[[3,[2]]]],[30,[[3,[2]]]],[22,[[3,[1,2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[31,[[3,[2]]]],[32,[[3,[1,2]]]],[[]],[33,[[5,[34,35]]]],[33,[[5,[34,35]]]],[[],[[3,[2]]]],[[],5],[[],5],[[4,4],[[3,[2]]]],[[4,4],3],[[[5,[36]]],5],[37,5],[3],[5],[3],[3],[[3,4]],[5,5],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[3,28],[5],[3,3],[3,38],[3,39],[3,40],[5,41],[5,42],[5,43],[5],[3],[3],[[],[[5,[[3,[1]]]]]],[[],[[45,[[28,[44]]]]]],[3,15],[5,15],[[5,46],15],[5,15],[[5,46],15],[[[3,[1]]],15],[5,43],[5,41],[3],[3,4],[5,5],[5,5],[5],[5],0,0,[3,15],[[3,3],15],[3,15],[3,15],[3,15],[3,15],[18,9],[[],[[3,[2]]]],[[],3],[[18,[47,[32]]],9],[5,21],[[5,5],5],[5,5],[[[3,[1,2]],20],[[21,[14]]]],[[3,3],[[21,[14]]]],[[[3,[1,2]],19],[[21,[14]]]],[[5,5],[[21,[14]]]],[3,21],[[],5],[3],[[[3,[1,2]]]],[[[3,[1,2]],1,4]],[[[3,[1,2]]]],[[[3,[1,2]]],4],[[3,4]],[5,48],[[3,4]],[[3,4]],[[3,4]],[[3,4]],0,0,[3],[3],[[3,4]],[[3,4]],[3],[3],[3,49],[3],[[3,4],3],[[[3,[1]]],13],[[],5],[[3,4]],[[]],[[]],[[]],[[]],[[[5,[21]]],[[21,[5]]]],[[3,4]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[3,4],[[5,[50]]]],[[3,4],[[5,[50]]]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[5],[5],[5],[5],[5],[5],[5],[4,[[3,[2]]]],[4,3],[[[3,[1]]],[[5,[4,23]]]],[[[3,[1]]],[[5,[23]]]],[[[3,[1]]],[[5,[4,23]]]],0,0,0,0,0,[[]],[[]],[52,52],[[]],[52],[52,4],[[52,52],15],[[52,24],25],[[]],[[]],[[21,6,53,54],[[5,[55]]]],[[]],[[],5],[[],5],[[],51],0,0],"p":[[15,"u8"],[3,"Global"],[3,"Vec"],[15,"usize"],[4,"Result"],[15,"u32"],[8,"Message"],[8,"Default"],[3,"Status"],[4,"ControlFlow"],[3,"UninitSlice"],[3,"Request"],[3,"Response"],[4,"Ordering"],[15,"bool"],[3,"Drain"],[3,"DrainFilter"],[4,"StatusCode"],[3,"Bytes"],[3,"BytesMut"],[4,"Option"],[15,"str"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"VecDeque"],[3,"Box"],[3,"CString"],[3,"BinaryHeap"],[4,"Cow"],[3,"String"],[3,"StreamResult"],[4,"MZStatus"],[4,"MZError"],[4,"Infallible"],[3,"Yeet"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[8,"Future"],[3,"Pin"],[8,"FnOnce"],[8,"Into"],[3,"ExitCode"],[3,"Splice"],[3,"TryReserveError"],[3,"TypeId"],[4,"Response"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[8,"Transport"],[8,"AsyncTransport"],[13,"Ok"],[13,"Err"],[13,"Error"],[13,"Body"]]},\
"oak_protobuf_idl_build":{"doc":"This crate allows compiling protobuf services to Rust in …","t":[5],"n":["compile"],"q":["oak_protobuf_idl_build"],"d":["Compile Rust server code from the services in the provided …"],"i":[0],"f":[[[]]],"p":[]},\
"oak_remote_attestation":{"doc":"A library for clients and servers to implement Remote …","t":[0,0,0,17,3,17,13,17,17,3,4,17,17,17,17,17,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,8,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,3,13,3,13,8,3,13,17,17,4,17,17,17,8,3,13,17,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,10,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["crypto","handshaker","message","AEAD_ALGORITHM_KEY_LENGTH","AeadEncryptor","CLIENT_KEY_PURPOSE","Client","KEY_AGREEMENT_ALGORITHM_KEY_LENGTH","KEY_DERIVATION_SALT","KeyNegotiator","KeyNegotiatorType","NONCE_LENGTH","SERVER_KEY_PURPOSE","SHA256_HASH_LENGTH","SIGNATURE_LENGTH","SIGNING_ALGORITHM_KEY_LENGTH","Server","SignatureVerifier","Signer","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create","create_encryptor","decrypt","encrypt","from","from","from","from","from","get_random","get_sha256","into","into","into","into","into","new","public_key","public_key","sign","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","AttestationBehavior","AttestationGenerator","AttestationVerifier","ClientHandshaker","EmptyAttestationGenerator","EmptyAttestationVerifier","Encryptor","ServerHandshaker","attestation_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","create_client_hello","decrypt","encrypt","fmt","from","from","from","from","from","from","generate_attestation","generate_attestation","generator","get_encryptor","get_encryptor","hash_concat_hash","into","into","into","into","into","into","is_aborted","is_aborted","is_completed","is_completed","new","new","new","next_step","next_step","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verifier","verify_attestation","verify_attestation","ClientHello","ClientHello","ClientIdentity","ClientIdentity","Deserializable","EncryptedData","EncryptedData","MAXIMUM_MESSAGE_SIZE","MESSAGE_HEADER_LENGTH","MessageWrapper","PROTOCOL_VERSION","PROTOCOL_VERSION_LENGTH","REPLAY_PROTECTION_ARRAY_LENGTH","Serializable","ServerIdentity","ServerIdentity","VEC_SIZE_PREFIX_LENGTH","attestation_report","attestation_report","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_transcript_signature","clear_transcript_signature","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_message","ephemeral_public_key","ephemeral_public_key","eq","eq","eq","eq","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","new","new","new","new","nonce","random","random","serialize","serialize","serialize","serialize","serialize","set_transcript_signature","set_transcript_signature","signing_public_key","signing_public_key","to_owned","to_owned","to_owned","to_owned","transcript_signature","transcript_signature","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","0","0","0","0"],"q":["oak_remote_attestation","","","oak_remote_attestation::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_remote_attestation::handshaker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_remote_attestation::message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_remote_attestation::message::MessageWrapper","","",""],"d":["","","","","Implementation of Authenticated Encryption with Associated …","Purpose string used for deriving client session keys with …","Defines a key negotiator which provides client session key …","","Salt used for key derivation with HKDF. …","Implementation of the X25519 Elliptic Curve Diffie-Hellman …","Defines the type of key negotiator and the set of session …","Length of the encryption nonce. <code>ring::aead</code> uses 96-bit …","Purpose string used for deriving server session keys with …","","IEEE-P1363 encoded ECDSA-P256 signature length. …","OpenSSL ECDSA-P256 key public key length, which is …","Defines a key negotiator which provides server session key …","","","","","","","","","","","","","","","","","Derives session keys from self and peer public keys and …","Decrypts and authenticates <code>data</code> using …","Encrypts <code>data</code> using <code>AeadEncryptor::encryption_key</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates a random vector of <code>size</code> bytes.","Computes a SHA-256 digest of <code>input</code> and returns it in a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Verifies the signature validity.","Defines the behavior of the remote attestation protocol.","A trait implementing the functionality of generating a …","A trait implementing the functionality of verifying a …","Client of the remote attestation protocol handshake.","An instance of <code>AttestationGenerator</code> that always returns an …","An instance of <code>AttestationVerifier</code> that succeeds iff the …","Used by the client and server to encrypt and decrypt …","Server of the remote attestation protocol handshake.","Compute data to be attested based on the actual or …","","","","","","","","","","","","","","","","","","","","Initializes the remote attestation handshake by creating a …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate a remote attestation report, ensuring that …","","","","","Compute a hash over values of possibly different length.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates <code>ClientHandshaker</code> with <code>Initializing</code> state.","Creates <code>ServerHandshaker</code> with …","","Processes incoming <code>message</code> and returns a serialized remote …","Processes incoming <code>message</code> and returns a serialized remote …","","","","","","","","","","","","","","","","","","","","","","","Verify the provided remote attestation report, checking …","","Initial message that starts remote attestation handshake.","","Client identity message containing remote attestation …","","","Message containing data encrypted using a session key.","","Maximum handshake message size is set to be equal to 1KiB.","Length (in bytes) of a message header.","Convenience struct that wraps attestation messages.","Remote attestation protocol version.","Length (in bytes) of the protocol version.","Length (in bytes) of the random vector sent in messages …","","Server identity message containing remote attestation …","","Length (in bytes) of the prefix that is used for …","Information used for remote attestation such as a TEE …","See <code>ServerIdentity::attestation_report</code>.","","","","","","","","","","","","","","","","","","","","","Data encrypted using the session key.","","","","","","Deserializes an attestation message from a serialized <code>input</code>…","Public key needed to establish a session key.","See <code>ServerIdentity::ephemeral_public_key</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Random nonce (initialization vector) used for …","Random vector sent in messages for preventing replay …","Random vector sent in messages for preventing replay …","","","","","","","","Public key used to sign transcripts.","See <code>ServerIdentity::signing_public_key</code>.","","","","","Signature of the SHA-256 hash of all previously sent and …","See <code>ServerIdentity::transcript_signature</code>.","","","","","","","","","","","","","","","","Remote attestation protocol version.","","","",""],"i":[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,5,2,4,9,1,5,2,4,9,1,1,1,2,4,2,5,5,5,2,4,9,1,0,0,5,2,4,9,1,9,2,4,4,1,5,2,4,9,1,5,2,4,9,1,5,2,4,9,1,9,0,0,0,0,0,0,0,0,0,18,23,19,15,16,17,18,23,19,15,16,17,15,16,17,15,16,17,15,18,19,19,15,18,23,19,15,16,17,13,16,15,18,23,0,18,23,19,15,16,17,18,23,18,23,18,23,19,18,23,15,16,17,18,23,19,15,16,17,18,23,19,15,16,17,18,23,19,15,16,17,15,14,17,0,30,0,30,0,0,30,0,0,0,0,0,0,0,0,30,0,27,28,30,29,27,28,6,30,29,27,28,6,27,28,29,27,28,6,29,27,28,6,6,31,29,27,28,6,0,27,28,30,29,27,28,6,30,6,30,29,27,28,6,30,29,27,28,6,29,27,28,6,6,29,27,32,29,27,28,6,27,28,27,28,29,27,28,6,27,28,30,29,27,28,6,30,29,27,28,6,30,29,27,28,6,27,33,34,35,36],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[1,[[3,[2]]]],[[],[[3,[4]]]],[2,[[3,[5]]]],[[5,6],[[3,[[8,[7]]]]]],[5,[[3,[6]]]],[[]],[[]],[[]],[[]],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[9]]]],[2,3],[4,3],[4,3],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[9,3],0,0,0,0,0,0,0,0,[[],[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[[0,[12,13]],[0,[12,14]]]]],[[15,[[0,[12,13]],[0,[12,14]]]]]],[16,16],[17,17],[[]],[[]],[[]],[[13,14],[[15,[13,14]]]],[[[18,[13,14]]],[[3,[[8,[7]]]]]],[19,[[3,[[8,[7]]]]]],[19,[[3,[[8,[7]]]]]],[[[15,[[0,[20,13]],[0,[20,14]]]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[[8,[7]]]]]],[16,[[3,[[8,[7]]]]]],0,[[[18,[13,14]]],[[3,[19]]]],[[[23,[13,14]]],[[3,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[13,14]]],24],[[[23,[13,14]]],24],[[[18,[13,14]]],24],[[[23,[13,14]]],24],[[[15,[13,14]]],[[3,[[18,[13,14]]]]]],[[[15,[13,14]],[25,[4]]],[[3,[[23,[13,14]]]]]],[5,19],[[[18,[13,14]]],[[3,[[26,[[8,[7]]]]]]]],[[[23,[13,14]]],[[3,[[26,[[8,[7]]]]]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[],3],[17,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27],[28],[29,29],[27,27],[28,28],[6,6],[[]],[[]],[[]],[[]],0,[[],3],[[],[[3,[29]]]],[[],[[3,[27]]]],[[],[[3,[28]]]],[[],[[3,[6]]]],[[],[[3,[30]]]],0,0,[[30,30],24],[[29,29],24],[[27,27],24],[[28,28],24],[[6,6],24],[[30,21],22],[[6,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[[8,[7]]],27],[[[8,[7]]],28],[[[8,[7]]],6],0,0,0,[[],[[3,[[8,[7]]]]]],[29,[[3,[[8,[7]]]]]],[27,[[3,[[8,[7]]]]]],[28,[[3,[[8,[7]]]]]],[6,[[3,[[8,[7]]]]]],[27],[28],0,0,[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0],"p":[[4,"KeyNegotiatorType"],[3,"KeyNegotiator"],[6,"Result"],[3,"Signer"],[3,"AeadEncryptor"],[3,"EncryptedData"],[15,"u8"],[3,"Vec"],[3,"SignatureVerifier"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[8,"AttestationGenerator"],[8,"AttestationVerifier"],[3,"AttestationBehavior"],[3,"EmptyAttestationGenerator"],[3,"EmptyAttestationVerifier"],[3,"ClientHandshaker"],[3,"Encryptor"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"ServerHandshaker"],[15,"bool"],[3,"Arc"],[4,"Option"],[3,"ServerIdentity"],[3,"ClientIdentity"],[3,"ClientHello"],[4,"MessageWrapper"],[8,"Deserializable"],[8,"Serializable"],[13,"ClientHello"],[13,"ServerIdentity"],[13,"ClientIdentity"],[13,"EncryptedData"]]},\
"oak_remote_attestation_amd":{"doc":"This crate implements remote attestation primitives from …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["PlaceholderAmdAttestationGenerator","PlaceholderAmdAttestationVerifier","PlaceholderAmdReport","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","default","deserialize","eq","fmt","from","from","from","from_string","generate_attestation","into","into","into","measurement","new","platform_version","serialize","signature","svn","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_attestation","version"],"q":["oak_remote_attestation_amd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Placeholder implementation of TEE report for remote …","","","","","","","","","","","Arbitrary data to put into the TEE report.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","TEE measurement, i.e. VM hash.","Placeholder function for collecting TEE measurement of …","The installed version of firmware.","","Signature of this report.","Security version number of SNP firmware.","","","","","","","","","","","","","","Version number of this attestation report."],"i":[0,0,0,1,2,3,1,2,3,1,2,1,2,3,3,3,3,3,1,2,3,3,1,1,2,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,2,3],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],0,[[],3],[[],[[4,[3]]]],[[3,3],5],[[3,6],7],[[]],[[]],[[]],[8,[[9,[3]]]],[1,[[9,[[11,[10]]]]]],[[]],[[]],[[]],0,[[],3],0,[3,4],0,0,[[]],[[]],[3,[[9,[12]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],13],[[],13],[[],13],[2,9],0],"p":[[3,"PlaceholderAmdAttestationGenerator"],[3,"PlaceholderAmdAttestationVerifier"],[3,"PlaceholderAmdReport"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[6,"Result"],[15,"u8"],[3,"Vec"],[3,"String"],[3,"TypeId"]]},\
"oak_remote_attestation_sessions":{"doc":"Logic for performing remote attestation in multiple …","t":[13,13,17,6,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["EncryptedMessageExchange","HandshakeInProgress","SESSION_ID_LENGTH","SessionId","SessionState","SessionTracker","borrow","borrow","borrow_mut","borrow_mut","create","from","from","into","into","pop_or_create_session_state","put_session_state","try_from","try_from","try_into","try_into","type_id","type_id","0","0"],"q":["oak_remote_attestation_sessions","","","","","","","","","","","","","","","","","","","","","","","oak_remote_attestation_sessions::SessionState",""],"d":["","","","","","Maintains remote attestation state for a number of sessions","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes remote attestation state of an existing session. …","Record a session in the tracker. Unlike …","","","","","","","",""],"i":[9,9,0,0,0,0,9,7,9,7,7,9,7,9,7,7,7,9,7,9,7,9,7,13,14],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,[4,[2,3]],[6,[5]]],[[7,[2,3]]]],[[]],[[]],[[]],[[]],[[[7,[2,3]],8],[[10,[[9,[2,3]]]]]],[[[7,[2,3]],8,[9,[2,3]]]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0],"p":[[15,"usize"],[8,"AttestationGenerator"],[8,"AttestationVerifier"],[3,"AttestationBehavior"],[3,"Signer"],[3,"Arc"],[3,"SessionTracker"],[6,"SessionId"],[4,"SessionState"],[6,"Result"],[4,"Result"],[3,"TypeId"],[13,"HandshakeInProgress"],[13,"EncryptedMessageExchange"]]},\
"oak_remote_attestation_sessions_client":{"doc":"","t":[8,3,11,11,11,11,11,10,11,11,11,11,11],"n":["AttestationTransport","GenericAttestationClient","borrow","borrow_mut","create","from","into","message","message","try_from","try_into","type_id","vzip"],"q":["oak_remote_attestation_sessions_client","","","","","","","","","","","",""],"d":["Abstract interface for networking using a request/response …","gRPC Attestation Service client implementation.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Constructs a requests, sends it over the network, and …","Sends data encrypted by the <code>Encryptor</code> to the server and …","","","",""],"i":[0,0,5,5,5,5,5,1,5,5,5,5,5],"f":[0,0,[[]],[[]],[[1,[4,[2,3]]],[[6,[[5,[1]]]]]],[[]],[[]],[[7,[9,[8]]],[[12,[[11,[10]]]]]],[[[5,[1]]],[[6,[[9,[8]]]]]],[[],13],[[],13],[[],14],[[]]],"p":[[8,"AttestationTransport"],[8,"AttestationGenerator"],[8,"AttestationVerifier"],[3,"AttestationBehavior"],[3,"GenericAttestationClient"],[6,"Result"],[6,"SessionId"],[15,"u8"],[3,"Vec"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Result"],[3,"TypeId"]]},\
"oak_restricted_kernel":{"doc":"Main ‘kernel’ for baremetal Oak Functions.","t":[5,0,5,5],"n":["panic","shutdown","start_kernel","shutdown"],"q":["oak_restricted_kernel","","","oak_restricted_kernel::shutdown"],"d":["Common panic routine for the kernel. This needs to be …","","Main entry point for the kernel, to be called from …","Tries various ways to shut down the machine."],"i":[0,0,0,0],"f":[[1,2],0,[3,[[5,[4]]]],[[],2]],"p":[[3,"PanicInfo"],[15,"never"],[3,"BootParams"],[8,"Channel"],[3,"Box"]]},\
"oak_simple_io":{"doc":"Simple I/O driver for communication between the guest and …","t":[3,17,17,17,17,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BufferDescriptor","DEFAULT_INPUT_BUFFER","DEFAULT_OUTPUT_BUFFER","INPUT_BUFFER_LENGTH","OUTPUT_BUFFER_LENGTH","SimpleIo","Translator","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","new_with_defaults","read_bytes","try_from","try_from","try_into","try_into","type_id","type_id","write_bytes"],"q":["oak_simple_io","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["I/O port descriptor for a buffer.","Default I/O ports for the input buffer.","Default I/O ports for the output buffer.","The length of the buffer that will be used for input …","The length of the buffer that will be used for output …","The simple I/O channel driver implementation.","Memory address translation function.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads the next available bytes from the input buffer, if …","","","","","","","Writes the data to the output buffer and notifies the host."],"i":[0,0,0,0,0,0,0,3,5,3,5,3,5,3,5,5,5,5,3,5,3,5,3,5,5],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2,3,3],[[7,[[5,[4]],6]]]],[[1,2],[[7,[[5,[4]],6]]]],[[[5,[4]]],[[10,[[9,[8]]]]]],[[],7],[[],7],[[],7],[[],7],[[],11],[[],11],[[[5,[4]]],[[10,[12]]]]],"p":[[4,"PortFactoryWrapper"],[8,"Translator"],[3,"BufferDescriptor"],[8,"Allocator"],[3,"SimpleIo"],[15,"str"],[4,"Result"],[15,"u8"],[3,"VecDeque"],[4,"Option"],[3,"TypeId"],[15,"usize"]]},\
"oak_tensorflow_service":{"doc":"","t":[3,11,11,11,11,11,11,11,11,0,11,11,11,12,3,3,3,4,3,3,3,4,3,3,3,4,3,3,3,4,3,8,3,18,18,18,18,12,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TensorflowServiceImpl","borrow","borrow_mut","default","from","initialize","into","invoke","new","schema","try_from","try_into","type_id","0","InitializeRequest","InitializeRequestArgs","InitializeRequestBuilder","InitializeRequestOffset","InitializeResponse","InitializeResponseArgs","InitializeResponseBuilder","InitializeResponseOffset","InvokeRequest","InvokeRequestArgs","InvokeRequestBuilder","InvokeRequestOffset","InvokeResponse","InvokeResponseArgs","InvokeResponseBuilder","InvokeResponseOffset","SessionId","TensorflowService","TensorflowServiceServer","VT_BODY","VT_BODY","VT_SESSION_ID","VT_TENSORFLOW_MODEL","_tab","_tab","_tab","_tab","add_body","add_body","add_session_id","add_tensorflow_model","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create","create","create","create","default","default","default","default","default","eq","eq","eq","eq","eq","finish","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","follow","follow","follow","follow","follow","follow","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init_from_table","init_from_table","init_from_table","init_from_table","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invoke","invoke","new","new","new","new","new","push","run_verifier","run_verifier","run_verifier","run_verifier","run_verifier","serve","session_id","session_id","set_value","tensorflow_model","tensorflow_model","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value"],"q":["oak_tensorflow_service","","","","","","","","","","","","","oak_tensorflow_service::schemad":["","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,1,1,1,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,2,2,3,7,8,10,14,10,16,7,8,21,22,36,19,16,37,20,24,38,21,10,39,22,14,15,2,3,7,8,30,36,19,16,37,20,24,38,21,10,39,22,14,15,2,3,7,8,30,15,2,3,7,8,15,2,3,7,8,2,3,7,8,19,20,21,22,15,15,2,3,7,8,16,24,10,14,15,2,3,7,8,15,15,2,3,7,8,36,19,16,37,20,24,38,21,10,39,22,14,15,2,3,7,8,30,2,3,7,8,29,36,19,16,37,20,24,38,21,10,39,22,14,15,2,3,7,8,30,29,30,16,24,10,14,15,15,15,2,3,7,8,29,7,21,15,2,19,15,2,3,7,8,36,19,16,37,20,24,38,21,10,39,22,14,15,2,3,7,8,30,36,19,16,37,20,24,38,21,10,39,22,14,15,2,3,7,8,30,36,19,16,37,20,24,38,21,10,39,22,14,15,2,3,7,8,30,15],"f":[0,[[]],[[]],[[],1],[[]],[[1,2],[[6,[[4,[3]],5]]]],[[]],[[1,7],[[6,[[4,[8]],5]]]],[[],1],0,[[],6],[[],6],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,[13,[[12,[11]]]]]],[[14,[13,[[12,[11]]]]]],[[10,15]],[[16,[13,[[12,[11]]]]]],[7,[[17,[[12,[11]]]]]],[8,[[17,[[12,[11]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[2,2],[3,3],[7,7],[8,8],[[]],[[]],[[]],[[]],[[]],[[18,19],[[13,[2]]]],[[18,20],[[13,[3]]]],[[18,21],[[13,[7]]]],[[18,22],[[13,[8]]]],[[],19],[[],20],[[],21],[[],22],[[],15],[[15,15],23],[[2,2],23],[[3,3],23],[[7,7],23],[[8,8],23],[16,[[13,[2]]]],[24,[[13,[3]]]],[10,[[13,[7]]]],[14,[[13,[8]]]],[[15,25],26],[[2,25],26],[[3,25],26],[[7,25],26],[[8,25],26],[27],[27],[27],[27],[27],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,2],[28,3],[28,7],[28,8],[2,[[6,[[4,[3]],5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,[[6,[[4,[8]],5]]]],[[[30,[29]],31],[[6,[[32,[11]],5]]]],[18,16],[18,24],[18,10],[18,14],[[],15],[[15,27]],[[33,27],[[6,[34]]]],[[33,27],[[6,[34]]]],[[33,27],[[6,[34]]]],[[33,27],[[6,[34]]]],[[33,27],[[6,[34]]]],[[],30],[7,[[17,[15]]]],0,[15],[2,[[17,[[12,[11]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[15,[[35,[11]]]]],"p":[[3,"TensorflowServiceImpl"],[3,"InitializeRequest"],[3,"InitializeResponse"],[3,"OwnedFlatbuffer"],[3,"Status"],[4,"Result"],[3,"InvokeRequest"],[3,"InvokeResponse"],[3,"TypeId"],[3,"InvokeRequestBuilder"],[15,"u8"],[3,"Vector"],[3,"WIPOffset"],[3,"InvokeResponseBuilder"],[3,"SessionId"],[3,"InitializeRequestBuilder"],[4,"Option"],[3,"FlatBufferBuilder"],[3,"InitializeRequestArgs"],[3,"InitializeResponseArgs"],[3,"InvokeRequestArgs"],[3,"InvokeResponseArgs"],[15,"bool"],[3,"InitializeResponseBuilder"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"Table"],[8,"TensorflowService"],[3,"TensorflowServiceServer"],[3,"Request"],[3,"Vec"],[3,"Verifier"],[4,"InvalidFlatbuffer"],[3,"Array"],[4,"InitializeRequestOffset"],[4,"InitializeResponseOffset"],[4,"InvokeRequestOffset"],[4,"InvokeResponseOffset"]]},\
"oak_utils":{"doc":"","t":[3,3,8,11,11,11,11,12,12,11,11,12,11,11,5,11,11,10,11,11,11,11,11,11,11],"n":["CodegenOptions","ExternPath","LogError","borrow","borrow","borrow_mut","borrow_mut","build_client","build_server","default","default","extern_paths","from","from","generate_grpc_code","into","into","log_error","new","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_utils","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Options for building gRPC code.","","Trait for logging error messages","","","","","Specify whether to build client related code.","Specify whether to build server related code.","","","Specify externally provided Protobuf packages or types.","Returns the argument unchanged.","Returns the argument unchanged.","Generate gRPC code from Protobuf using <code>tonic</code> library.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,1,2,1,2,1,1,1,2,1,1,2,0,1,2,7,2,1,2,1,2,1,2],"f":[0,0,0,[[]],[[]],[[]],[[]],0,0,[[],1],[[],2],0,[[]],[[]],[[3,1],4],[[]],[[]],[3],[[3,3],2],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6]],"p":[[3,"CodegenOptions"],[3,"ExternPath"],[15,"str"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"LogError"]]},\
"offline_attestation_client":{"doc":"","t":[17,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11],"n":["ECHO_PATH","Opt","PUBLIC_KEY_INFO_PATH","RequestHelper","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","decrypt_response","from","from","from_arg_matches","from_arg_matches_mut","generate_encrypted_request","group_id","into","into","main","message","message","new","private_key_handle","server_public_key_handle","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","url","vzip","vzip"],"q":["offline_attestation_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Utility for creating encrypted requests and decrypting the …","","","","","","","","","","","Consumes the helper and decrypts the encrypted response …","Returns the argument unchanged.","Returns the argument unchanged.","","","Generates an encrypted request to send to the server.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The clear-text message to encrypt as part of the request.","","Creates a new instance for handling a single …","Handle to private key for decrypting the server’s …","Handle to the server’s public key for encrypting …","","","","","","","","","","","",""],"i":[0,0,0,0,2,2,3,2,3,2,2,2,2,2,3,3,2,2,2,3,2,3,2,0,3,2,3,3,3,2,3,2,3,2,3,2,2,2,2,3,2],"f":[0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[2,2],[[]],[[],1],[[],1],[[3,4],[[7,[[6,[5]]]]]],[[]],[[]],[8,[[10,[2,9]]]],[8,[[10,[2,9]]]],[3,[[7,[11]]]],[[],[[13,[12]]]],[[]],[[]],[[],7],0,0,[14,[[7,[3]]]],0,0,[[]],[[],10],[[],10],[[],10],[[],10],[[],15],[[],15],[[2,8],[[10,[9]]]],[[2,8],[[10,[9]]]],0,[[]],[[]]],"p":[[3,"Command"],[3,"Opt"],[3,"RequestHelper"],[3,"EncryptedResponse"],[15,"u8"],[3,"Vec"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"EncryptedRequest"],[3,"Id"],[4,"Option"],[3,"PublicKeyInfo"],[3,"TypeId"]]},\
"offline_attestation_server":{"doc":"","t":[17,3,17,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,5,11,5,11,5,12,11,11,11,11,11,11,11],"n":["ECHO_PATH","Opt","PUBLIC_KEY_INFO_PATH","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","create_root_filter","encrypted_echo","fmt","from","from_arg_matches","from_arg_matches_mut","generate_attestation_report","get_public_key_info","group_id","handle","into","main","port","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["offline_attestation_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Creates the root filter that combines the two path filters …","Path filter for “POST /encrypted_echo” with a JSON …","","Returns the argument unchanged.","","","","Path filter for “GET /public_key_info”.","","Handles an encrypted request.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,2,2,2,2,2,2,2,2,0,0,2,2,2,2,0,0,2,0,2,0,2,2,2,2,2,2,2,2],"f":[0,0,0,[1,1],[1,1],[[]],[[]],[2,2],[[]],[[],1],[[],1],[[[4,[3]],[4,[5]]],[[0,[6,7]]]],[[[4,[3]]],[[0,[6,7]]]],[[2,8],9],[[]],[10,[[12,[2,11]]]],[10,[[12,[2,11]]]],[3,[[14,[13]]]],[[[4,[5]]],[[0,[6,7]]]],[[],[[16,[15]]]],[[17,[4,[3]]],18],[[]],[[],14],0,[[]],[[],12],[[],12],[[],19],[[2,10],[[12,[11]]]],[[2,10],[[12,[11]]]],[[]]],"p":[[3,"Command"],[3,"Opt"],[3,"Handle"],[3,"Arc"],[3,"PublicKeyInfo"],[8,"Filter"],[8,"Clone"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"AttestationReport"],[6,"Result"],[3,"Id"],[4,"Option"],[3,"EncryptedRequest"],[6,"Response"],[3,"TypeId"]]},\
"offline_attestation_shared":{"doc":"Shared components used by both the client and server for …","t":[3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,5,5,5,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AttestationReport","EncryptedRequest","EncryptedResponse","Handle","PublicKeyInfo","attestation","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","ciphertext","decrypt","deserialize","deserialize","deserialize","deserialize_attestation_report","deserialize_public_key","encrypt","fmt","from","from","from","from","from","generate_private_key","get_public_key_handle","get_public_key_handle","init","into","into","into","into","into","keyset_info","new","new","new_with_no_secrets","primitives","primitives_with_key_manager","public","read","read_with_associated_data","read_with_no_secrets","request_public_key","response_public_key","serialize","serialize","serialize","serialize_attestation_report","serialize_public_key","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","vzip","write","write_with_associated_data","write_with_no_secrets"],"q":["offline_attestation_shared","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Placeholder for an attestation report.","An encrypted request sent from the client to the server.","An encrypted response sent from the server to the client.","<code>Handle</code> provides access to a <code>Keyset</code> protobuf, to limit the …","Information about the public key that should be used for …","The binary-serialised attestation report providing …","","","","","","","","","","","The encrypted payload.","The encrypted payload.","Decrypts the provides <code>cyphertext</code> using the private key.","","","","Deserialises the attestation report from a binary …","Deserialises the binary data into a keyset containing the …","Encrypts the clear text <code>data</code> using Tink hybrid encryption.","Return a string representation of the managed keyset. The …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates a new private key suitable for hybrid encryption …","Deserialises the <code>response_public_key</code> as a keyset handle.","Deserialises the <code>request_publlic_key</code> as a keyset handle.","Initialize the <code>tink-hybrid</code> crate, registering its …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return <code>KeysetInfo</code> representation of the managed keyset. …","Create a keyset handle that contains a single fresh key …","Constructs a new <code>PublicKeyInfo</code> instance from the public …","Create a new instance of <code>Handle</code> using the given <code>Keyset</code> …","Create a set of primitives corresponding to the keys with …","Create a set of primitives corresponding to the keys with …","Return a <code>Handle</code> of the public keys if the managed keyset …","Attempt to create a <code>Handle</code> from an encrypted keyset …","Attempt to create a <code>Handle</code> from an encrypted keyset …","Attempt to create a <code>Handle</code> from a keyset obtained via a …","The public key that should be used for encrypting requests.","The public key that should be used for encrypting the …","","","","Serialises the attestation report to a binary …","Serialises the handle’s underlying keyset containing the …","","","","","","","","","","","","","","","","Validates the attestation associated with the public key …","","","","","","Encrypts and writes the enclosed <code>Keyset</code>.","Encrypts and writes the enclosed <code>Keyset</code> using the provided …","Export the keyset in <code>h</code> to the given <code>Writer</code> returning an …"],"i":[0,0,0,0,0,8,9,1,5,7,8,9,1,5,7,8,5,7,0,5,7,8,0,0,0,1,9,1,5,7,8,0,5,8,0,9,1,5,7,8,1,1,8,1,1,1,1,1,1,1,8,5,5,7,8,0,0,9,1,5,7,8,9,1,5,7,8,9,1,5,7,8,8,9,1,5,7,8,1,1,1],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,[[4,[[3,[2]]]]]],[[],[[6,[5]]]],[[],[[6,[7]]]],[[],[[6,[8]]]],[[],[[4,[9]]]],[[],[[4,[1]]]],[1,[[4,[[3,[2]]]]]],[[1,10],[[6,[11]]]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[1]]]],[5,[[4,[1]]]],[8,[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1,12],[13,[[6,[1,14]]]],[[1,9],[[4,[8]]]],[15,[[6,[1,14]]]],[1,[[6,[16,14]]]],[[1,[19,[[18,[17]]]]],[[6,[16,14]]]],[1,[[6,[1,14]]]],[[[22,[20,21]]],[[6,[1,14]]]],[[[22,[20,21]]],[[6,[1,14]]]],[[],[[6,[1,14]]]],0,0,[5,6],[7,6],[8,6],[9,[[4,[[3,[2]]]]]],[1,[[4,[[3,[2]]]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],23],[[],23],[[],23],[[],23],[[],23],[8,4],[[]],[[]],[[]],[[]],[[]],[[1,[22,[20,21]]],[[6,[14]]]],[[1,[22,[20,21]]],[[6,[14]]]],[1,[[6,[14]]]]],"p":[[3,"Handle"],[15,"u8"],[3,"Vec"],[6,"Result"],[3,"EncryptedRequest"],[4,"Result"],[3,"EncryptedResponse"],[3,"PublicKeyInfo"],[3,"AttestationReport"],[3,"Formatter"],[3,"Error"],[3,"KeysetInfo"],[3,"KeyTemplate"],[3,"TinkError"],[3,"Keyset"],[3,"PrimitiveSet"],[8,"KeyManager"],[3,"Arc"],[4,"Option"],[8,"Aead"],[3,"Global"],[3,"Box"],[3,"TypeId"]]},\
"sev_guest":{"doc":"Rust wrappers for instructions and structs for use by …","t":[8,0,0,0,0,0,0,0,14,0,17,17,3,3,3,3,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,18,18,17,17,3,3,18,18,18,18,18,18,18,18,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,13,13,4,13,3,3,3,3,4,17,17,17,13,13,18,4,13,3,3,13,13,17,3,3,3,13,13,13,13,13,13,13,13,13,18,4,13,13,3,3,18,13,13,4,18,18,18,4,13,18,3,13,13,13,13,13,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,18,18,13,13,13,4,13,13,13,4,3,18,3,13,13,4,13,4,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,3,11,11,12,11,11,11,2,12,12,12,12,12,12,12,12,12,12,11,11,11,13,13,3,3,8,4,8,4,8,13,13,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,12,12,12,12,18,18,13,4,3,3,18,13,13,13,13,13,3,13,13,13,3,3,13,13,17,18,4,3,3,13,18,18,18,18,4,3,3,18,18,18,18,18,18,17,3,3,3,4,13,13,3,3,4,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,5,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,17,3,11,11,12,11,11,12,12,12,12,11,11,11,12,11,12,12,12,12,12,12],"n":["Translator","cpuid","ghcb","guest","instructions","interrupts","io","msr","mutable_interrupt_handler_with_error_code","secrets","CPUID_COUNT_MAX","CPUID_PAGE_SIZE","CpuidFunction","CpuidInput","CpuidOutput","CpuidPage","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count","cpuid_data","eax","eax","ebx","ecx","ecx","edx","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xcr0","xss","CPL","DR7","GHCB_PAGE_SIZE","GHCB_PROTOCOL_VERSION","Ghcb","GhcbProtocol","RAX","RBX","RCX","RDX","SW_EXIT_CODE","SW_EXIT_INFO_1","SW_EXIT_INFO_2","SW_SCRATCH","ValidBitmap","XCR0","XSS","all","as_mut","as_mut","as_ref","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","cpl","default","default","difference","dr7","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_cpuid","get_gpa","ghcb_usage","hash","insert","intersection","intersects","into","into","into","io_read_u32","io_read_u8","io_write_u32","io_write_u8","is_all","is_empty","new","new","not","partial_cmp","protocol_version","rax","rbx","rcx","rdx","register_with_hypervisor","remove","reset","set","shared_buffer","sub","sub_assign","sw_exit_code","sw_exit_info_1","sw_exit_info_2","sw_scratch","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","valid_bitmap","x87_state_gpa","xcr0","xss","AbsorbNomaRequest","AbsorbNomaResponse","AbsorbRequest","AbsorbResponse","AeadAlgorithm","Aes256Gcm","AttestationReport","AttestationReportData","AttestationRequest","AttestationResponse","AuthorKey","CURRENT_ATTESTATION_VERSION","CURRENT_HEADER_VERSION","CURRENT_MESSAGE_VERSION","CpuidRequest","CpuidResponse","DEBUG","EccCurve","EcdsaP384Sha384","EcdsaPublicKey","EcdsaSignature","ExportRequest","ExportResponse","GUEST_MESSAGE_SIZE","GuestMessage","GuestMessageHeader","GuestPolicy","ImportRequest","ImportResponse","Invalid","Invalid","Invalid","Invalid","InvalidParams","KeyRequest","KeyResponse","MIGRATE_MA","MessageType","No","P384","PlatformInfo","PolicyFlags","RESERVED","ReportRequest","ReportResponse","ReportStatus","SINGLE_SOCKET","SMT","SMT_EN","SigningAlgorithm","Success","TSME_EN","TcbVersion","TccInfoReqsponse","TscInfoRequest","VmrkRequest","VmrkResponse","Yes","abi_major","abi_minor","algorithm","all","all","auth_tag","author_key_digest","author_key_en","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","boot_loader","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chip_id","clone","clone","clone_into","clone_into","cmp","cmp","committed_build","committed_major","committed_minor","committed_tcb","complement","complement","contains","contains","current_build","current_major","current_minor","current_tcb","curve","data","default","default","difference","difference","empty","empty","eq","eq","extend","extend","family_id","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_repr","from_repr","from_repr","from_repr","from_repr","from_repr","guest_svn","hash","hash","header","header_size","header_version","host_data","id_key_digest","image_id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","launch_tcb","measurement","message_size","message_type","message_version","message_vmpck","microcode","not","not","partial_cmp","partial_cmp","payload","platform_info","policy","r","r","remove","remove","report","report_data","report_data","report_id","report_id_ma","report_size","reported_tcb","s","s","sequence_number","set","set","signature","signature_algo","snp","status","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","tee","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","vmpl","vmpl","EXECUTE_SUPERVISOR","EXECUTE_USER","FailInput","FailPermission","FailSizeMismatch","InstructionError","No","Page2MiB","Page4KiB","PageSize","PermissionMask","READ","RmpPermission","Unvalidated","Validated","Validation","ValidationStatusNotUpdated","Vmsa","WRITE","Yes","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_repr","from_repr","from_repr","from_repr","hash","insert","intersection","intersects","into","into","into","into","into","into","is_all","is_empty","not","partial_cmp","perm_mask","pvalidate","remove","rmpadjust","set","sub","sub_assign","symmetric_difference","target_vmpl","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","vmgexit","vmsa","MutableInterruptStackFrame","borrow","borrow_mut","cs","fmt","from","into","mutable_interrupt_handler_with_error_code","rax","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","ss","try_from","try_into","type_id","Ghcb","Ghcb","GhcbIoFactory","GhcbIoPort","IoPortFactory","PortFactoryWrapper","PortReader","PortWrapper","PortWriter","Raw","Raw","RawIoPortFactory","StaticGhcbIoPort","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","into","into","into","into","into","new","new_ghcb","new_raw","new_reader","new_reader","new_reader","new_reader","new_writer","new_writer","new_writer","new_writer","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_read","try_read","try_read","try_read","try_write","try_write","try_write","try_write","type_id","type_id","type_id","type_id","type_id","0","0","0","0","ALTERNATE_INJECTION_ENABLED","AP_CREATION","AddressNotAligned","CpuidRegister","CpuidRequest","CpuidResponse","DEBUG_SWAP_ENABLED","Eax","Ebx","Ecx","Edx","General","GhcbGpa","GhcbLocationNotAccepted","GhcbProtocolVersion","GhcbResponseLocationNotMatchingRequest","HypervisorFeatureSupportRequest","HypervisorFeatureSupportResponse","InvalidResponse","InvalidValue","NO_PREFERRED_GHCB_LOCATION","PREVENT_HOST_IBS_ENABLED","PageAssignment","PreferredGhcbGpaRequest","PreferredGhcbGpaResponse","Private","REFLECT_VC_ENABLED","RESTRICTED_INJECTION","RESTRICTED_INJECTION_ENABLED","RESTRICTED_INJECTION_TIMER","RegisterGhcbGpaError","RegisterGhcbGpaRequest","RegisterGhcbGpaResponse","SECURE_TSC_ENABLED","SEV_ENABLED","SEV_ES_ENABLED","SEV_SNP","SNP_ACTIVE","SNP_BTB_ISOLATION_ENABLED","SUPPORTED_PROTOCOL_VERSION","SevInfoRequest","SevInfoResponse","SevStatus","SevStatusError","Shared","SnpFeatureNotSupported","SnpPageStateChangeRequest","SnpPageStateChangeResponse","TerminationReason","TerminationRequest","VMSA_REG_PROT_ENABLED","VTOM_ENABLED","all","all","as_error_source","as_error_source","backtrace","backtrace","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","cause","change_snp_page_state","change_snp_state_for_frame","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","default","default","description","description","difference","difference","empty","empty","encryption_bit","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_repr","from_repr","get_cpuid","get_cpuid_for_vc_exception","get_hypervisor_feature_support","get_preferred_ghcb_location","get_sev_info","get_sev_status","ghcb_gpa","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","leaf","max_protocol_version","min_protocol_version","new","new","new","not","not","partial_cmp","partial_cmp","reason","register","register","register_ghcb_location","remove","remove","request_termination","set","set","set_ghcb_address_and_exit","source","source","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","value","response_ghcb_gpa","SECRETS_PAGE_SIZE","SECRETS_PAGE_VERSION","SecretsPage","borrow","borrow_mut","fms","fmt","from","gosv","guest_area_0","guest_area_1","imi_en","into","try_from","try_into","tsc_factor","type_id","version","vmpck_0","vmpck_1","vmpck_2","vmpck_3","vmsa_tweak_bitmap"],"q":["sev_guest","","","","","","","","","","sev_guest::cpuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sev_guest::ghcb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sev_guest::guestsev_guest::instructions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sev_guest::interrupts","","","","","","","","","","","","","","","","","","","","","sev_guest::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sev_guest::io::PortFactoryWrapper","","sev_guest::io::PortWrapper","","sev_guest::msrsev_guest::msr::RegisterGhcbGpaError","sev_guest::secrets","","","","","","","","","","","","","","","","","","","","","",""],"d":["Memory address translation functions.","This module contains structs that can be used to interpret …","This module contains an implementation of the …","Utilities for creating and processing SNP Guest Request …","Rust instruction wrappers for managing page state and …","Utilities for building interrupt handlers that need to …","","Rust implementations of the AMD SEV-SNP GHCB MSR protocol.","","This module contains structs that can be used to interpret …","The maximum number of CPUID functions that can be included …","The size of the CPUID page.","The CPUID function result of an invocation for a specific …","The required input valus for invoking CPUID.","The resulting register values after invoking CPUID.","Representation of the CPUID page.","","","","","","","","","The number of CPUID function results included in the page. …","The CPUID function results.","The input value of the EAX register, which represents the …","The EAX register output from calling CPUID.","The EBX register output from calling CPUID.","The input value of the ECX register, which represents the …","The ECX register output from calling CPUID.","The EDX register output from calling CPUID.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The input value of the XCR0 extended control register.","The value of the IA32_XSS model-specific register.","","","The size of the GHCB page.","The version of the GHCB protocol and page layout that we …","The guest-host communications block.","Implementation of the GHCB protocol using the wrapped GHCB …","","","","","","","","","Flags indicating which fields in a specific GHCB instance …","","","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The current privilege level of the executing code.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","The value of the DR7 debug register.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Calls a CPUID function for the given input using the GHCB …","Gets the guest-physical address for the guest-hypervisor …","The usage of the GHCB page. A value of 0 indicates the …","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read a 32 bit number from an IO port via the IOIO protocol.","Read an 8 bit number from an IO port via the IOIO protocol.","Writes a 32 bit number to an IO port via the IOIO protocol.","Writes an 8 bit number to an IO port via the IOIO protocol.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","The version of the GHCB protocol and page layout in use.","The value of the RAX register.","The value of the RBX register.","The value of the RCX register.","The value of the RDX register.","Registers the address of the GHCB with the hypervisor.","Removes the specified flags in-place.","Zeroes the entire GHCB.","Inserts or removes the specified flags depending on the …","Area that can be used as a shared buffer for communicating …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Guest-controlled exit code.","Guest-controlled exit information 1.","Guest-controlled exit information 2.","Guest-controlled additional information.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Bitmap indicating which quadwords of the save state area …","The guest-physical address of the page that contains the …","Value of the XCR0 extended control register.","The value of the IA32_XSS model-specific reqister.","","","VM absorb request by a migration agent.","VM absorb response.","The AEAD algorithm used for encryption.","256-bit AES-GCM.","A signed attestation report.","The data contained in an attestation report.","Request for an attestation report.","Response containing the attestation report.","Whether the author key digest is included in the report.","The currently supported attestation report version number.","The currently supported header version number.","The currently supported message version number.","CPUID request.","CPUID response.","Debugging the guest is allowed.","The elliptic curve used.","ECDSA using curve P-384 with SHA-384.","An ECDSA public key.","An ECDSA signature.","VM export request. Used for VM migration.","VM export response. Used for VM migration.","The size of a guest message, including the header and …","An encrypted guest message.","The header for an encrypted guest request message.","The required policy for a guest to run.","VM import request. Used during VM migration, typically by …","VM import response. Used during VM migration.","Invalid encryption algorithm.","Invalid message type.","Invalid.","Invalid.","The supplied parameters in the request was invalid.","Request for a derivce key.","Derived key response.","The guest can be associated with a migration agent.","The type of message represented by the payload.","The author key digest is not present.","Curve P-384.","Information on the platform configuration.","Flags indicating allowed policy options.","Reserved, must always be 1.","Attestation report request.","Attestation report response.","The status of the report response.","The guest can only be activated on a single socket.","Simulatneous multi-threading (SMT) is allowed.","Indicates that simulatneous multi-threading (SMT) is …","The signing algorithm used for the report signature.","Report was successfully generated.","Indicates that transparent secure memory encryption (TSME) …","The version of all the components in the Trusted Computing …","Timestamp counter information response.","","VMRK request. Provides the VM root key to use after …","VMRK response. Status of using the VM root key after …","The author key digest is present.","The minimum ABI major version required to launch the guest.","The minimum ABI minor version required to launch the guest.","The algorithm used to encrypt the payload.","Returns the set containing all flags.","Returns the set containing all flags.","The authentication tag for the payload and additional data.","The SHA-384 digest of the author public key used to …","Whether the digest of the author key is included in the …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","The current security version number (SVN) of the secure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Identifier unique to the chip, unless the ID has been …","","","","","","","The build number of the committed secure firmware ABI …","The major number of the committed secure firmware ABI …","The minor number of the committed secure firmware ABI …","The committed TCB version.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The build number of the current secure firmware ABI …","The major number of the current secure firmware ABI …","The minor number of the current secure firmware ABI …","The current version of each of the components in the …","The curve for this public key.","The data contained in the report.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","The family ID provided at launch.","The allowed settings for the guest.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","The guest security version number.","","","The message header.","The size of the header in bytes.","The header version. Currently only version 1 is supported.","Custom data provided by the hypervisor at launch.","The SHA-384 digest of the ID public key used to sign the …","The image ID provided at launch.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","The value of the current TCB version when the guest was …","The measurement of the VM memory calculated at launch.","The size of the encrypted message payload in bytes.","The type of message that the payload represents.","The version of the message. Currently only version 1 is …","The ID of the VM communication key that was used to …","The lowest current patch level of all the CPU cores.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","The encrypted payload.","Information about the platform.","The policy required by the guest VM to be launched.","The R component of this signature. The value is …","The R component of this public. The value is zero-extended …","Removes the specified flags in-place.","Removes the specified flags in-place.","The attestation report.","The custom data to be included in the attestation report.","The custom data provided in the attestation request.","The report ID of this guest.","The report ID of this guest’s migration agent.","The size of the report.","The reported TCB version that was used to generate the …","The S component of this signature. The value is …","The S component of this public key. The value is …","The message sequence number. This is used as the IV for …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","The signature over the data.","The algorithm used to sign the report.","The current SVN of the SNP firmware.","The status of the operation.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The current SVN of the PSP operating system.","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The version of the attestation report format.","The VM Protection Level (VMPL) to be used in the …","The VMPL value that was passed in the request.","Code in the page can be executed in rings 0..2.","Code in the page can be executed in ring 3.","The input parameters were invalid.","Insufficient permissions.","The page size does not match the page size entry in the …","The potential errors when calling the PVALIDATE or …","The page cannot be used as a VM save area.","The page is a 2MiB page.","The page is a 4KiB page.","The size of a memory page.","Permission mask used by the RMP.","The target VMPL can read the page.","Representation of the RMP permission used by the RMPADJUST …","The page is not validated.","The page is validated.","Whether a page is in the validated state or not.","The page validation status was not updated. This value is …","Whether the page can be used as a VM save area.","The target VMPL can write to the page.","The page can be used as a VM save area.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","Try to create Self from the raw representation","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","The bit mask specifying the permission.","Marks a page as validated or unvalidated in the RMP.","Removes the specified flags in-place.","Adjusts the permissions of a page in the RMP.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","The target VMPL to which the permission applies.","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unconditionally exits from the guest to the hypervisor.","Whether this page can be used as a VM save area.","A reference to the interrupt stack frame will be passed as …","","","The backed-up value of the code segment selector.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","The backed-up value of the RAX register.","The backed-up value of the RBX register.","The backed-up value of the RCX register.","The backed-up value of the RDI register.","The backed-up value of the RDX register.","The backed-up value CPU’s flags register.","The backed-up value of the instruction pointer when the …","The backed-up value of the RSI register.","The backed-up value of the stack pointer.","The backed-up value of the stack segment.","","","","","","A factory for creating port readers and writers that use …","GHCB-based wrapper for a single IO port.","Factory for instantiating IO port readers and writers.","Wrapper implementation that can either create IO ports …","Reader that can be used to read values from a port.","","Writer that can be used to write values to a port.","","","Factory for creating port reader and writers that perform …","An IO port reader and writer implementation that uses the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new IO port reader instance.","","","","Creates a new IO port writer instance.","","","","","","","","","","","","","","Tries to read from the port.","","","","Tries to write a value to the port.","","","","","","","","","","","","","Alternate injection is enabled for this guest.","The new AMD SEV-SNP feature for starting new Application …","GHCB must be 4KiB-aligned.","The register of interest from the result of executing …","A request to execute CPUID for a specific leaf and return …","A response from executing CPUID for a specific leaf. Only …","Debug Register Swapping is enabled for this guest.","","","","","Non-specific termination request.","Contains the guest-physical address of the GHCB page. The …","","The supported range for the GHCB protocol version does not …","","A request for the hypervisor’s supported features.","Flags indicating which features are supported by the …","","","Value indicating that the hypervisor does not have a …","The Prevent Host IBS feature is enabled for this guest.","Whether a memory page is private to the guest, or shared …","A request for the hypervisor’s preferred location for …","The response containing the preferred location of the GHCB.","","Reflect-VC is enabled for this guest.","Restricted interrrupt injection is supported.","Restricted Injection is enabled for this guest.","Timer support is available if restricted interrupt …","","Request to register a guest-physical address for the GHCB …","The response containing the result of the GHCB …","Secure Timestamp Counter is enabled for this guest.","SEV is enabled for this guest.","SEV-ES is enabled for this guest.","AMD SEV-SNP is supported.","SEV-SNP is active for this guest.","SNP Branch Target Buffer Isolation is enabled for this …","The version of the GHCB MSR protocol supported by this …","A request for information about the supported GHCB MSR …","Response from the hypervisor about the encryption bit and …","Flags indicating which SEV features are active.","","","The SEV-SNP features supported by the hypervisor is not …","Request to change a memory page from shared to private or …","The response containing the result of the SNP Page State …","The reason for requesting termination from the hypervisor.","Request for the hypervisor to terminate the guest.","VMSA Register Protection is enabled for this guest.","Virtual Top-of-Memory is enabled for this guest.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requests a change of state for a page to be either private …","Changes the SNP page state assignments in the RMP for a …","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","The page table bit used for inidicating that a page is …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Try to create Self from the raw representation","Try to create Self from the raw representation","Gets the value of the specified register that was returned …","Gets the CPUID values for EAX, EBX, ECX and EDX and …","Requests a bitmap specifying the features supported by the …","Requests the hypervisor’s preferred location for the …","Gets information about the supported GHCB MSR protocol …","Gets the status of SEV features for the current guest.","The preferred guest-physical address for the GHCB.","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","The CPUID leaf to request. Sub-leafs are not supported by …","The maximum version of the GHCB MSR protocol supported by …","The minimum version of the GHCB MSR protocol supported by …","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","The register to return from the result. This protocol only …","The register that the value represents.","Registers the location of the GHCB page for the current …","Removes the specified flags in-place.","Removes the specified flags in-place.","Requests termination from the hypervisor.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the address of the GHCB page before exiting to the …","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The value of the requested register after executing CPUID.","","The size of the secrets page.","The version of the secrets pages that we expect to receive.","Representation of the secrets page.","","","The family, model and stepping of the CPU as reported in …","","Returns the argument unchanged.","Guest-OS-visible workarounds provided by the hypervisor …","Area reserved for guest OS use.","Area reserved for guest OS use.","The least significant bit indicates where an initial …","Calls <code>U::from(self)</code>.","","","Scaling factor that can be used for calculating the real …","","The version of the secrets page.","VM-platform communication key 0. AES key used for …","VM-platform communication key 1. AES key used for …","VM-platform communication key 2. AES key used for …","VM-platform communication key 3. AES key used for …","Bitmap indicating which quadwords of the VM Save Area have …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,5,6,1,4,5,6,6,6,4,5,5,4,5,5,1,4,5,6,1,4,5,6,1,4,5,6,1,4,5,6,1,4,5,6,1,4,5,6,4,4,9,9,0,0,0,0,9,9,9,9,9,9,9,9,0,9,9,9,10,11,10,11,9,9,9,9,9,9,9,10,11,9,10,11,9,9,9,9,9,9,11,11,9,9,11,9,9,9,11,9,9,9,9,9,10,11,9,9,9,9,9,10,10,11,9,9,9,9,10,11,9,10,10,10,10,9,9,10,11,9,9,11,11,11,11,11,10,9,11,9,11,9,9,11,11,11,11,9,9,9,10,11,9,10,11,9,10,11,9,9,11,11,11,11,30,30,30,30,0,29,0,0,0,0,0,0,0,0,30,30,25,0,41,0,0,30,30,0,0,0,0,30,30,29,30,41,42,38,30,30,25,0,37,42,0,0,25,30,30,0,25,25,24,0,38,24,0,30,30,30,30,37,35,35,28,24,25,28,34,34,24,25,24,25,24,25,24,25,24,25,24,25,24,25,36,27,28,29,30,31,32,33,34,24,35,36,25,37,38,39,40,41,42,27,28,29,30,31,32,33,34,24,35,36,25,37,38,39,40,41,42,34,24,25,24,25,24,25,34,34,34,34,24,25,24,25,34,34,34,34,40,33,24,25,24,25,24,25,24,25,24,25,34,35,27,28,29,30,31,32,33,34,24,24,24,24,24,35,36,25,25,25,25,25,37,38,39,40,41,42,27,28,29,30,31,32,33,34,24,35,36,25,37,38,39,40,41,42,24,25,24,25,24,25,24,25,29,30,37,38,41,42,34,24,25,27,28,28,34,34,34,24,25,24,25,24,25,27,28,29,30,31,32,33,34,24,35,36,25,37,38,39,40,41,42,24,25,24,25,34,34,28,28,28,28,36,24,25,24,25,27,34,34,39,40,24,25,32,31,34,34,34,32,34,39,40,28,24,25,33,34,36,32,24,25,24,25,24,25,36,24,25,24,25,27,28,29,30,31,32,33,34,24,35,36,25,37,38,39,40,41,42,27,28,29,30,31,32,33,34,24,35,36,25,37,38,39,40,41,42,27,28,29,30,31,32,33,34,24,35,36,25,37,38,39,40,41,42,24,25,34,31,34,43,43,46,46,46,0,47,45,45,0,0,43,0,44,44,0,46,0,43,47,43,43,43,43,43,43,43,43,49,44,45,46,43,47,49,44,45,46,43,47,44,43,44,43,43,43,43,43,43,43,43,44,45,46,43,43,43,43,43,47,49,44,45,46,43,47,43,43,43,43,44,45,46,47,43,43,43,43,49,44,45,46,43,47,43,43,43,43,49,0,43,0,43,43,43,43,49,44,43,43,49,44,45,46,43,47,49,44,45,46,43,47,49,44,45,46,43,47,43,0,49,0,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,54,58,0,0,0,0,0,0,0,54,58,0,0,52,55,56,54,58,52,55,56,54,58,52,55,56,54,58,52,55,56,54,58,52,54,54,81,52,56,54,81,52,56,54,52,55,56,54,58,52,55,56,54,58,82,55,55,58,83,55,55,58,52,55,56,54,58,84,85,86,87,60,59,23,0,0,0,60,67,67,67,67,68,0,23,68,23,0,0,23,63,0,60,0,0,0,66,60,59,60,59,0,0,0,60,60,60,59,60,60,0,0,0,0,0,66,68,0,0,0,0,60,60,59,60,23,63,23,63,59,60,59,60,59,60,59,60,59,60,59,60,59,60,73,72,88,69,70,89,71,74,78,64,79,90,75,67,23,66,59,68,60,63,73,72,88,69,70,89,71,74,78,64,79,90,75,67,23,66,59,68,60,63,23,63,0,0,67,66,59,60,67,66,59,60,59,60,59,60,59,60,59,60,23,63,59,60,59,60,72,67,66,59,60,59,60,67,23,23,66,59,59,59,59,59,68,60,60,60,60,60,63,63,73,72,88,69,70,89,71,74,78,64,79,90,75,67,23,66,59,68,60,63,59,60,59,60,59,60,59,60,67,66,0,0,0,0,0,0,71,59,60,59,60,59,60,59,60,73,72,88,69,70,89,71,74,78,64,79,90,75,67,23,66,59,68,60,63,59,60,59,60,69,72,72,73,74,64,59,60,59,60,75,69,70,0,59,60,0,59,60,0,23,63,59,60,59,60,59,60,67,66,59,60,23,63,59,60,73,72,72,88,69,70,70,89,71,71,74,78,78,64,79,79,90,75,67,23,66,59,59,68,60,63,73,72,88,69,70,89,71,74,78,64,79,90,75,67,23,66,59,68,60,63,73,72,88,69,70,89,71,74,78,64,79,90,75,67,23,66,59,68,60,63,59,60,70,91,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[1,2],3],[[4,2],3],[[5,2],3],[[6,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[10,10],[11,11],[10,10],[11,11],[[9,9],9],[[9,9]],[[9,9],9],[[9,9]],[9,12],[[9,9],9],[[9,9]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[[]],[[9,9],13],[9,9],[[9,9],14],0,[[],11],[[],9],[[9,9],9],0,[[],9],[[9,9],14],[[9,15]],[[11,2],3],[[9,2],3],[[9,2],3],[[9,2],3],[[9,2],3],[[9,2],3],[[]],[[]],[[]],[12,[[16,[9]]]],[12,9],[12,9],[15,9],[[10,4],[[7,[5,17]]]],[10,18],0,[9],[[9,9]],[[9,9],9],[[9,9],14],[[]],[[]],[[]],[[10,19],[[7,[20,17]]]],[[10,19],[[7,[21,17]]]],[[10,19,20],[[7,[17]]]],[[10,19,21],[[7,[17]]]],[9,14],[9,14],[22,10],[[],11],[9,9],[[9,9],[[16,[13]]]],0,0,0,0,0,[10,[[7,[23]]]],[[9,9]],[11],[[9,9,14]],0,[[9,9],9],[[9,9]],0,0,0,0,[[9,9],9],[[]],[[9,9]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],24],[[],25],0,0,0,[[24,24],24],[[25,25],25],[[24,24]],[[25,25]],[[24,24],24],[[25,25],25],[[24,24]],[[25,25]],[24,26],[25,19],[[24,24],24],[[25,25],25],[[24,24]],[[25,25]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[24,24],[25,25],[[]],[[]],[[24,24],13],[[25,25],13],0,0,0,0,[24,24],[25,25],[[24,24],14],[[25,25],14],0,0,0,0,0,0,[[],24],[[],25],[[24,24],24],[[25,25],25],[[],24],[[],25],[[24,24],14],[[25,25],14],[[24,15]],[[25,15]],0,0,[[27,2],3],[[28,2],3],[[29,2],3],[[30,2],3],[[31,2],3],[[32,2],3],[[33,2],3],[[34,2],3],[[24,2],3],[[24,2],3],[[24,2],3],[[24,2],3],[[24,2],3],[[35,2],3],[[36,2],3],[[25,2],3],[[25,2],3],[[25,2],3],[[25,2],3],[[25,2],3],[[37,2],3],[[38,2],3],[[39,2],3],[[40,2],3],[[41,2],3],[[42,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[16,[24]]]],[19,[[16,[25]]]],[26,24],[19,25],[26,24],[19,25],[15,24],[15,25],[21,[[16,[29]]]],[21,[[16,[30]]]],[26,[[16,[37]]]],[20,[[16,[38]]]],[20,[[16,[41]]]],[20,[[16,[42]]]],0,[24],[25],0,0,0,0,0,0,[[24,24]],[[25,25]],[[24,24],24],[[25,25],25],[[24,24],14],[[25,25],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,14],[25,14],[24,14],[25,14],0,0,0,0,0,0,0,[24,24],[25,25],[[24,24],[[16,[13]]]],[[25,25],[[16,[13]]]],0,0,0,0,0,[[24,24]],[[25,25]],0,0,0,0,0,0,0,0,0,0,[[24,24,14]],[[25,25,14]],0,0,0,0,[[24,24],24],[[25,25],25],[[24,24]],[[25,25]],[[24,24],24],[[25,25],25],0,[[]],[[]],[[24,24]],[[25,25]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[24,24],24],[[25,25],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],43],[[43,43],43],[[43,43]],[[43,43],43],[[43,43]],[43,21],[[43,43],43],[[43,43]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[43,43],[[]],[[]],[[43,43],13],[43,43],[[43,43],14],[[43,43],43],[[],43],[[43,43],14],[[43,15]],[[44,2],3],[[45,2],3],[[46,2],3],[[43,2],3],[[43,2],3],[[43,2],3],[[43,2],3],[[43,2],3],[[47,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[16,[43]]]],[21,43],[21,43],[15,43],[20,[[16,[44]]]],[20,[[16,[45]]]],[20,[[16,[46]]]],[21,[[16,[47]]]],[43],[[43,43]],[[43,43],43],[[43,43],14],[[]],[[]],[[]],[[]],[[]],[[]],[43,14],[43,14],[43,43],[[43,43],[[16,[13]]]],0,[[48,45,44],[[7,[46]]]],[[43,43]],[[48,45,49],[[7,[46]]]],[[43,43,14]],[[43,43],43],[[43,43]],[[43,43],43],0,[[]],[[]],[[43,43]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[43,43],43],[[]],0,0,[[]],[[]],0,[[50,2],3],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],7],[[],7],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,52],[53,54],[[],54],[19],[[52,19],55],[[56,19],57],[[54,19],58],[19],[[52,19],55],[[56,19],57],[[54,19],58],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],[[7,[17]]]],[55,[[7,[20,17]]]],[55,[[7,[21,17]]]],[58,[[7,[17]]]],[[],[[7,[17]]]],[[55,21],[[7,[17]]]],[[55,20],[[7,[17]]]],[58,[[7,[17]]]],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],59],[[],60],[[],61],[[],61],[23,[[16,[62]]]],[63,[[16,[62]]]],[[59,59],59],[[60,60],60],[[59,59]],[[60,60]],[[59,59],59],[[60,60],60],[[59,59]],[[60,60]],[59,26],[60,26],[[59,59],59],[[60,60],60],[[59,59]],[[60,60]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[16,[61]]]],[63,[[16,[61]]]],[64,[[7,[17]]]],[[65,66],[[7,[17]]]],[67,67],[66,66],[59,59],[60,60],[[]],[[]],[[]],[[]],[[59,59],13],[[60,60],13],[59,59],[60,60],[[59,59],14],[[60,60],14],[[],59],[[],60],[23,17],[63,17],[[59,59],59],[[60,60],60],[[],59],[[],60],0,[[67,67],14],[[66,66],14],[[59,59],14],[[60,60],14],[[59,15]],[[60,15]],[[67,2],3],[[23,2],3],[[23,2],3],[[66,2],3],[[59,2],3],[[59,2],3],[[59,2],3],[[59,2],3],[[59,2],3],[[68,2],3],[[60,2],3],[[60,2],3],[[60,2],3],[[60,2],3],[[60,2],3],[[63,2],3],[[63,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[16,[59]]]],[26,[[16,[60]]]],[26,59],[26,60],[26,59],[26,60],[15,59],[15,60],[21,[[16,[67]]]],[21,[[16,[66]]]],[69,[[7,[70,17]]]],[[20,50],[[7,[17]]]],[[],[[7,[59,17]]]],[[],[[7,[71,17]]]],[[],[[7,[72,17]]]],[[],[[7,[60,63]]]],0,[59],[60],[[59,59]],[[60,60]],[[59,59],59],[[60,60],60],[[59,59],14],[[60,60],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,14],[60,14],[59,14],[60,14],0,0,0,[48,[[7,[73,17]]]],[48,[[7,[74,23]]]],[[48,66],[[7,[64,17]]]],[59,59],[60,60],[[59,59],[[16,[13]]]],[[60,60],[[16,[13]]]],0,0,0,[74,[[7,[23]]]],[[59,59]],[[60,60]],[75,76],[[59,59,14]],[[60,60,14]],[73],[23,[[16,[61]]]],[63,[[16,[61]]]],[[59,59],59],[[60,60],60],[[59,59]],[[60,60]],[[59,59],59],[[60,60],60],[[]],[[]],[[]],[[]],[[],77],[[],77],[[59,59]],[[60,60]],[[],7],[[],7],[26,[[7,[72,17]]]],[[],7],[[],7],[[],7],[26,[[7,[70,17]]]],[[],7],[[],7],[26,[[7,[71,17]]]],[[],7],[[],7],[26,[[7,[78]]]],[[],7],[26,[[7,[79,17]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[26,[[7,[59,17]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[59,59],59],[[60,60],60],0,0,0,0,0,[[]],[[]],0,[[80,2],3],[[]],0,0,0,0,[[]],[[],7],[[],7],0,[[],8],0,0,0,0,0,0],"p":[[3,"CpuidFunction"],[3,"Formatter"],[6,"Result"],[3,"CpuidInput"],[3,"CpuidOutput"],[3,"CpuidPage"],[4,"Result"],[3,"TypeId"],[3,"ValidBitmap"],[3,"GhcbProtocol"],[3,"Ghcb"],[15,"u128"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[4,"Option"],[15,"str"],[3,"PhysAddr"],[15,"u16"],[15,"u32"],[15,"u8"],[8,"Translator"],[4,"RegisterGhcbGpaError"],[3,"PlatformInfo"],[3,"PolicyFlags"],[15,"u64"],[3,"GuestMessage"],[3,"GuestMessageHeader"],[4,"AeadAlgorithm"],[4,"MessageType"],[3,"AttestationRequest"],[3,"AttestationResponse"],[3,"AttestationReport"],[3,"AttestationReportData"],[3,"GuestPolicy"],[3,"TcbVersion"],[4,"AuthorKey"],[4,"ReportStatus"],[3,"EcdsaSignature"],[3,"EcdsaPublicKey"],[4,"SigningAlgorithm"],[4,"EccCurve"],[3,"PermissionMask"],[4,"Validation"],[4,"PageSize"],[4,"InstructionError"],[4,"Vmsa"],[15,"usize"],[3,"RmpPermission"],[3,"MutableInterruptStackFrame"],[3,"Mutex"],[3,"GhcbIoFactory"],[6,"Spinlock"],[4,"PortFactoryWrapper"],[3,"GhcbIoPort"],[3,"RawIoPortFactory"],[6,"Port"],[4,"PortWrapper"],[3,"HypervisorFeatureSupportResponse"],[3,"SevStatus"],[8,"Error"],[3,"Backtrace"],[4,"SevStatusError"],[3,"SnpPageStateChangeRequest"],[3,"PhysFrame"],[4,"PageAssignment"],[4,"CpuidRegister"],[4,"TerminationReason"],[3,"CpuidRequest"],[3,"CpuidResponse"],[3,"PreferredGhcbGpaResponse"],[3,"SevInfoResponse"],[3,"GhcbGpa"],[3,"RegisterGhcbGpaRequest"],[3,"TerminationRequest"],[15,"never"],[3,"String"],[3,"RegisterGhcbGpaResponse"],[3,"SnpPageStateChangeResponse"],[3,"SecretsPage"],[8,"IoPortFactory"],[8,"PortReader"],[8,"PortWriter"],[13,"Raw"],[13,"Ghcb"],[13,"Raw"],[13,"Ghcb"],[3,"SevInfoRequest"],[3,"PreferredGhcbGpaRequest"],[3,"HypervisorFeatureSupportRequest"],[13,"GhcbResponseLocationNotMatchingRequest"]]},\
"sev_serial":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SerialPort","borrow","borrow_mut","from","init","into","new","send","try_from","try_into","type_id","wait_for_empty_output","write_str"],"q":["sev_serial","","","","","","","","","","","",""],"d":["Basic implementation that allows for writing to a serial …","","","Returns the argument unchanged.","Initializes the serial port for writing.","Calls <code>U::from(self)</code>.","Creates a new instance of a serial port with the given …","Sends a byte of data via the serial port.","","","","Wait until the output buffer is empty.",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[]],[1,[[3,[2]]]],[[]],[[4,5],1],[[1,6],[[3,[2]]]],[[],3],[[],3],[[],7],[1,[[3,[2]]]],[[1,2],8]],"p":[[3,"SerialPort"],[15,"str"],[4,"Result"],[15,"u16"],[4,"PortFactoryWrapper"],[15,"u8"],[3,"TypeId"],[6,"Result"]]},\
"trusted_shuffler":{"doc":"Trusted Shuffler implementation.","t":[3,3,3,3,8,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["EncryptedRequest","EncryptedResponse","PlaintextRequest","PlaintextResponse","RequestHandler","TrustedShuffler","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","eq","eq","fmt","fmt","from","from","from","from","from","handle","headers","headers","headers","headers","into","into","into","into","into","invoke","new","trailers","trailers","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uri","uri"],"q":["trusted_shuffler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,6,19,1,3,6,19,10,1,3,6,19,10,1,3,1,3,1,3,6,19,10,1,3,15,6,19,1,3,6,19,10,1,3,10,10,19,3,6,19,10,1,3,6,19,10,1,3,6,19,10,1,3,6,1],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],2],[[3,3],2],[[1,4],5],[[3,4],5],[[]],[[]],[[]],[[]],[[]],[6,[[9,[[8,[7]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[10,1],[[11,[3]]]],[[12,[14,[13]],[16,[15]]],10],0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],0,0],"p":[[3,"EncryptedRequest"],[15,"bool"],[3,"EncryptedResponse"],[3,"Formatter"],[6,"Result"],[3,"PlaintextRequest"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"TrustedShuffler"],[6,"Result"],[15,"usize"],[3,"Duration"],[4,"Option"],[8,"RequestHandler"],[3,"Arc"],[4,"Result"],[3,"TypeId"],[3,"PlaintextResponse"]]},\
"trusted_shuffler_backend":{"doc":"Backend server for the Trusted Shuffler example.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,5,11,11,11,11,12,5,5,5,11,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["MyEcho","Opt","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","default","echo","echo","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","handler","into","into","into_request","into_request","listen_address","main","start_grpc_backend","start_http_backend","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_grpc","vzip","vzip","EchoRequest","EchoResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","echo_client","echo_server","echoed_value","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value_to_echo","vzip","vzip","EchoClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","echo","fmt","from","inner","into","into_request","new","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Echo","EchoServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","echo","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["trusted_shuffler_backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_shuffler_backend::echo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_shuffler_backend::echo::echo_client","","","","","","","","","","","","","","","","","","","","","trusted_shuffler_backend::echo::echo_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,2,2,2,3,2,3,2,2,2,2,3,0,3,3,2,3,2,2,2,0,2,3,2,3,2,0,0,0,2,2,3,2,3,2,3,2,2,2,2,3,0,0,4,23,4,23,4,23,4,23,4,23,4,23,0,0,23,4,23,4,23,4,23,4,23,4,23,4,23,4,23,4,23,4,23,4,23,4,4,23,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,37,0,0,0,35,37,35,37,35,35,35,37,35,37,35,36,37,35,37,35,35,35,37,35,37,35,35,35,35,35,37,35,37,35,37,35,37,35,37,35,35],"f":[0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[2,2],[[]],[[],1],[[],1],[[],3],0,[[3,[5,[4]]],[[8,[[7,[6]]]]]],[[3,9],10],[[]],[[]],[11,[[13,[2,12]]]],[11,[[13,[2,12]]]],[[],[[15,[14]]]],[[[17,[16]]],[[13,[[18,[16]],19]]]],[[]],[[]],[[],5],[[],5],0,[[],20],[21,20],[21,20],[[]],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[2,11],[[13,[12]]]],[[2,11],[[13,[12]]]],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[4],[23],[4,4],[23,23],[[]],[[]],[[],4],[[],23],0,0,0,[4,24],[23,24],[[4,4],25],[[23,23],25],[[4,9],10],[[23,9],10],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],0,[[]],[[]],0,[26,26],[[]],[[]],[[[26,[27]]],[[26,[27]]]],[[]],[[],[[13,[[26,[28]],29]]]],[[26,[30,[4]]],[[13,[[31,[23]],32]]]],[[[26,[33]],9],10],[[]],0,[[]],[[],5],[[],26],[26,26],[[]],[[],13],[[],13],[[],22],[[]],[[],[[26,[34]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[17],[[35,17]],[[[37,[36]]],[[37,[36]]]],[[[35,[36]]],[[35,[36]]]],[[]],[[]],[[[5,[4]]],[[8,[[7,[6]]]]]],[[[37,[33]],9],10],[[[35,[[0,[33,36]]]],9],10],[[]],[[]],[[[38,[36]]],[[35,[36]]]],0,[[]],[[]],[[],5],[[],5],[36,[[35,[36]]]],[[35,39],[[40,[13]]]],[39,[[40,[13]]]],0,[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[]],[[]],[36,[[34,[[35,[36]]]]]]],"p":[[3,"Command"],[3,"Opt"],[3,"MyEcho"],[3,"EchoRequest"],[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Body"],[3,"Request"],[3,"Response"],[3,"Error"],[6,"Result"],[4,"SocketAddr"],[3,"TypeId"],[3,"EchoResponse"],[15,"usize"],[15,"bool"],[3,"EchoClient"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[8,"Debug"],[3,"InterceptedService"],[3,"EchoServer"],[8,"Echo"],[3,"_Inner"],[3,"Arc"],[3,"Context"],[4,"Poll"]]},\
"trusted_shuffler_client":{"doc":"Client for the Trusted Shuffler example.","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,11,11,11,11,12,11],"n":["Opt","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","from","from_arg_matches","from_arg_matches_mut","group_id","into","into_request","main","qps","seconds","server_url","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_grpc","vzip"],"q":["trusted_shuffler_client","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],[2,2],[[]],[[],1],[[],1],[[]],[3,[[5,[2,4]]]],[3,[[5,[2,4]]]],[[],[[7,[6]]]],[[]],[[],8],[[],9],0,0,0,[[]],[[],5],[[],5],[[],10],[[2,3],[[5,[4]]]],[[2,3],[[5,[4]]]],0,[[]]],"p":[[3,"Command"],[3,"Opt"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Request"],[6,"Result"],[3,"TypeId"]]},\
"trusted_shuffler_common":{"doc":"","t":[0,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["echo","send_grpc_request","send_http_request","send_with_request","EchoRequest","EchoResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","echo_client","echo_server","echoed_value","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value_to_echo","vzip","vzip","EchoClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","echo","fmt","from","into","into_request","new","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","Echo","EchoServer","borrow","borrow_mut","call","call","clone","clone_into","echo","fmt","from","from_arc","into","into_request","new","poll_ready","poll_ready","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["trusted_shuffler_common","","","","trusted_shuffler_common::echo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_shuffler_common::echo::echo_client","","","","","","","","","","","","","","","","","","","","trusted_shuffler_common::echo::echo_server","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,10,11,10,11,10,11,10,11,10,11,10,11,0,0,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,10,11,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,28,28,28,28,28,28,29,28,28,28,28,28,28,28,28,28,28,28,28,28,28],"f":[0,[1,[[4,[[3,[2]]]]]],[[5,6],[[4,[[3,[2]]]]]],[[[8,[7]]],[[4,[[9,[7]]]]]],0,0,[[]],[[]],[[]],[[]],[10],[11],[10,10],[11,11],[[]],[[]],[[],10],[[],11],0,0,0,[10,12],[11,12],[[10,10],13],[[11,11],13],[[10,14],15],[[11,14],15],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,[[]],[[]],0,[19,19],[[]],[[]],[[[19,[20]]],[[19,[20]]]],[[]],[[],[[17,[[19,[21]],22]]]],[[19,[23,[10]]],[[17,[[24,[11]],25]]]],[[[19,[26]],14],15],[[]],[[]],[[],16],[[],19],[19,19],[[]],[[],17],[[],17],[[],18],[[]],[[],[[19,[27]]]],0,0,[[]],[[]],[8],[[28,8]],[[[28,[29]]],[[28,[29]]]],[[]],[[[16,[10]]],[[32,[[31,[30]]]]]],[[[28,[[0,[26,29]]]],14],15],[[]],[[[33,[29]]],[[28,[29]]]],[[]],[[],16],[29,[[28,[29]]]],[34,[[35,[17]]]],[[28,34],[[35,[17]]]],[[]],[[],17],[[],17],[[],18],[[]],[29,[[27,[[28,[29]]]]]]],"p":[[3,"String"],[15,"u8"],[3,"Vec"],[6,"Result"],[15,"str"],[3,"Method"],[3,"Body"],[3,"Request"],[3,"Response"],[3,"EchoRequest"],[3,"EchoResponse"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Request"],[4,"Result"],[3,"TypeId"],[3,"EchoClient"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[8,"Debug"],[3,"InterceptedService"],[3,"EchoServer"],[8,"Echo"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Arc"],[3,"Context"],[4,"Poll"]]},\
"trusted_shuffler_server":{"doc":"Trusted Shuffler server.","t":[3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,0,11,12,5,12,11,11,11,11,11,11,12,12,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Opt","augment_args","augment_args_for_update","backend_url","batch_size","borrow","borrow_mut","clone","clone_into","command","command_for_update","from","from_arg_matches","from_arg_matches_mut","group_id","http","into","listen_address","main","timeout_ms","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","0","0","HttpRequestHandler","HyperRequestWrapper","HyperResponseWrapper","Service","ServiceBuilder","backend_url","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","call","call","copy_selected_keys","from","from","from","from","from","handle","into","into","into","into","into","new","poll_ready","poll_ready","strip","strip","trusted_shuffler","trusted_shuffler","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["trusted_shuffler_server","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_shuffler_server::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,2,2,2,2,2,2,2,11,13,0,0,0,0,0,21,21,11,13,14,17,21,11,13,14,17,11,13,14,17,0,21,11,13,14,17,21,21,11,13,14,17,17,14,17,11,13,14,17,21,11,13,14,17,21,11,13,14,17,21,11,13,14,17],"f":[0,[1,1],[1,1],0,0,[[]],[[]],[2,2],[[]],[[],1],[[],1],[[]],[3,[[5,[2,4]]]],[3,[[5,[2,4]]]],[[],[[7,[6]]]],0,[[]],0,[[],8],0,[[]],[[],5],[[],5],[[],9],[[2,3],[[5,[4]]]],[[2,3],[[5,[4]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,[[8,[11]]]],[12,[[8,[13]]]],[[14,[16,[15]]]],[17],[[18,[20,[19]]],18],[[]],[[]],[[]],[[]],[[]],[[21,10],[[24,[[23,[22]]]]]],[[]],[[]],[[]],[[]],[[]],[[25,[7,[26]],27],17],[[14,28],[[29,[5]]]],[[17,28],[[29,[5]]]],[11,[[8,[30]]]],[13,[[8,[31]]]],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],9],[[],9],[[],9],[[],9],[[],9]],"p":[[3,"Command"],[3,"Opt"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[6,"Result"],[3,"TypeId"],[3,"PlaintextRequest"],[3,"HyperRequestWrapper"],[3,"EncryptedResponse"],[3,"HyperResponseWrapper"],[3,"Service"],[3,"Body"],[3,"Request"],[3,"ServiceBuilder"],[3,"HeaderMap"],[3,"HeaderName"],[3,"Vec"],[3,"HttpRequestHandler"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[3,"Duration"],[15,"str"],[3,"Context"],[4,"Poll"],[3,"EncryptedRequest"],[3,"PlaintextResponse"]]},\
"virtio":{"doc":"Simple virtio drivers implemented based on polling.","t":[8,8,8,8,0,10,0,10,0,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,3,3,3,18,3,3,3,18,18,18,3,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,0,11,11,0,11,11,11,11,13,13,17,18,18,3,13,13,13,13,13,13,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["InverseTranslator","Read","Translator","Write","console","flush","queue","read","vsock","write","Console","borrow","borrow_mut","find_and_configure_device","flush","from","get_status","into","read","read_bytes","try_from","try_into","type_id","write","write_bytes","DeviceWriteOnlyQueue","DriverWriteOnlyQueue","Queue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","get_avail_addr","get_desc_addr","get_used_addr","inner","inner","into","into","into","must_notify_device","new","new","read_next_used_buffer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virtq","write_buffer","AvailRing","Desc","DescFlags","NO_NOTIFY","RingFlags","UsedElem","UsedRing","VIRTQ_DESC_F_INDIRECT","VIRTQ_DESC_F_NEXT","VIRTQ_DESC_F_WRITE","VirtQueue","addr","all","all","avail","avail_event","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","default","default","default","desc","difference","difference","empty","empty","eq","eq","extend","extend","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","id","idx","idx","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","len","length","new","next","not","not","partial_cmp","partial_cmp","remove","remove","ring","ring","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","used","used_event","VSock","borrow","borrow_mut","find_and_configure_device","from","get_status","into","packet","read_filtered_packet","read_packet","socket","try_from","try_into","type_id","write_packet","CreditRequest","CreditUpdate","HEADER_SIZE","NO_RECEIVE","NO_SEND","Packet","Request","Response","Rst","Rw","Shutdown","Stream","VSockFlags","VSockOp","VSockType","all","as_slice","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_repr","from_repr","get_buf_alloc","get_dst_cid","get_dst_port","get_flags","get_fwd_cnt","get_len","get_op","get_payload","get_payload_len","get_src_cid","get_src_port","get_type","hash","insert","intersection","intersects","into","into","into","into","is_all","is_empty","new","new_control","new_data","not","partial_cmp","remove","set","set_buf_alloc","set_dst_cid","set_dst_port","set_flags","set_fwd_cnt","set_op","set_src_cid","set_src_port","sub","sub_assign","symmetric_difference","to_owned","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","Socket","SocketConnector","SocketListener","accept","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","flush","from","from","from","into","into","into","new","new","read","shutdown","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write"],"q":["virtio","","","","","","","","","","virtio::console","","","","","","","","","","","","","","","virtio::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","virtio::queue::virtqvirtio::vsock","","","","","","","","","","","","","","","virtio::vsock::packet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","virtio::vsock::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Read bytes from a source.","Memory address translation functions.","Write bytes to a source.","","Flush any output buffers, if they exist.","","Read bytes until <code>data</code> has been filled.","","Write all bytes in <code>data</code>.","Simple driver implementation for a virtio serial/console …","","","Finds the virtio console PCI device, initialises the …","","Returns the argument unchanged.","Gets the device status.","Calls <code>U::from(self)</code>.","","Reads the next available bytes from the receive queue, if …","","","","","Writes the data to the transmit queue.","A queue where the descriptor buffers are only writable by …","A queue where the descriptor buffers are only writable by …","A container for a boxed virtqueue and its associated …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the address of the available ring.","Gets the address of the descriptor table.","Gets the address of the used ring.","The inner queue.","The inner queue.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the device wants to be notified of queue …","","","Reads the contents of the next used buffer from the queue, …","","","","","","","","","","","Writes the data to a buffer and adds its descriptor to the …","The ring buffer that indicates which descriptors have been …","A descriptor for a byte buffer used in a virtio queue.","Flags about a descriptor.","This indicates that the owner of the ring does not require …","Flags about the available and used rings.","An element indicating a used descriptor chain.","The ring buffer that indicates which available descriptors …","This means the buffer contains a list of buffer …","This marks a buffer as continuing via the next field to …","This marks a buffer as device write-only (otherwise device …","A split virtqueue implementation.","The guest-physical address of the buffer.","Returns the set containing all flags.","Returns the set containing all flags.","The available ring, which is controlled by the driver.","Event details. Only used if VIRTIO_F_EVENT_IDX has been …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","The descriptor table.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","Driver-specific flags for the queue.","Flags providing more info about this descriptor.","Device-specific flags for the queue.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","The index of the head of the used descriptor chain.","The next index that will be used in the ring (modulo …","The next index that will be used in the ring (modulo …","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Total length of the bytes that was written to the used …","The lengths of the buffer.","","The index of the next descriptor in the chain if this is …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","The ring-buffer containing indices of the heads of …","The ring-buffer containing the used elements.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The used ring, which is controlled by the device.","Event details. Only used if VIRTIO_F_EVENT_IDX has been …","Low-level driver interface to interact with a virtio …","","","Finds the virtio vsock PCI device, initialises the device, …","Returns the argument unchanged.","Gets the device status.","Calls <code>U::from(self)</code>.","Virtio vsock packet implementation.","Reads the next valid packet that matches the filter, if …","Reads the next valid packet from the receive queue, if one …","","","","","Writes the packet to the transmit queue.","Request for update on credit to calculate stream buffer …","Give update on credit to support flow control, either in …","The size of the packet header in bytes.","Indicates that no more payload data will be received.","Indicates that no more payload data will be senn.","","Connection request.","Connections accepted response.","Connection reset, either in reponse to a shutdown request …","Represents a data packet.","Connection shutdown request.","Only stream sockets are currently supported in the Virtio …","Flags about a socket connection.","Vsock Ops.","Socket Type.","Returns the set containing all flags.","Returns the entire buffer as a slice.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Try to create Self from the raw representation","Try to create Self from the raw representation","Gets the size of the peer’s stream buffer.","Gets the destination CID.","Gets the destination port.","Gets the flags.","Gets the number of bytes that the peer has read out of the …","Gets the payload length.","Gets the op that the packet represents.","Gets the payload.","Gets the actual length of the payload in the current …","Gets the source CID.","Gets the source port.","Gets the type of socket the packet is intended for.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new <code>Packet</code> from an existing buffer.","Creates a new control <code>Packet</code> with only a header.","Creates a new data <code>Packet</code> with the given payload length.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets the size of the stream buffer.","Sets the destination CID.","Sets the destination port.","Sets the flags.","Sets the number of bytes read from the stream buffer.","Sets the op that the packet represents.","Sets the source CID.","Sets the source port.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","A connection-oriented socket.","Connector to initiate a connection to a listener on the …","Listener that waits for a connection initiated from the …","Listens for a connection from the host on the specified …","","","","","","","Tries to connect to a listener on the host.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Shuts the connection down.","","","","","","","","","",""],"i":[0,0,0,0,0,44,0,45,0,44,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,17,18,14,17,18,14,17,18,14,14,14,14,17,18,17,18,14,14,17,18,18,17,18,14,17,18,14,17,18,14,0,17,0,0,0,21,0,0,0,20,20,20,0,30,20,21,46,26,20,21,20,21,20,21,20,21,20,21,20,21,20,21,25,46,20,30,21,26,23,25,46,20,30,21,26,23,20,21,23,20,21,23,20,21,20,21,20,21,25,26,23,46,20,21,20,21,20,21,20,21,25,30,26,20,20,20,20,20,30,21,21,21,21,21,26,23,25,46,20,30,21,26,23,20,21,20,21,20,21,20,21,20,21,23,25,26,20,21,20,21,20,21,25,46,20,30,21,26,23,20,21,20,21,23,30,30,30,20,21,20,21,20,21,25,26,20,21,20,21,20,21,20,21,20,21,23,20,21,25,46,20,30,21,26,23,25,46,20,30,21,26,23,25,46,20,30,21,26,23,20,21,46,25,0,32,32,32,32,32,32,0,32,32,0,32,32,32,32,36,36,0,35,35,0,36,36,36,36,36,37,0,0,0,35,34,35,35,35,35,35,35,35,34,36,35,37,34,36,35,37,35,35,35,35,35,35,35,36,35,37,35,34,36,36,35,35,35,35,35,37,37,34,36,35,37,35,35,35,35,36,37,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,34,36,35,37,35,35,34,34,34,35,35,35,35,34,34,34,34,34,34,34,34,35,35,35,35,36,37,35,34,36,35,37,34,36,35,37,34,36,35,37,35,0,0,0,41,43,41,42,43,41,42,43,42,43,41,42,43,41,42,43,41,42,42,43,41,42,43,41,42,43,41,42,42],"f":[0,0,0,0,0,[[],1],0,[[],1],0,[[],1],0,[[]],[[]],[[2,3],[[1,[[6,[4,5]]]]]],[[[6,[5]]],1],[[]],[[[6,[5]]],7],[[]],[[[6,[5]]],1],[[[6,[5]]],[[10,[[9,[8]]]]]],[[],11],[[],11],[[],12],[[[6,[5]]],1],[[[6,[5]]],[[10,[13]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[5]]],15],[[[14,[5]]],15],[[[14,[5]]],15],0,0,[[]],[[]],[[]],[[[14,[5]]],16],[2,[[17,[5]]]],[2,[[18,[5]]]],[[[18,[5]]],[[10,[[19,[8]]]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,[[[17,[5]]],[[10,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],21],0,0,[[20,20],20],[[21,21],21],[[20,20]],[[21,21]],[[20,20],20],[[21,21],21],[[20,20]],[[21,21]],[20,22],[21,22],[[20,20],20],[[21,21],21],[[20,20]],[[21,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[23,23],[[]],[[]],[[]],[[20,20],24],[[21,21],24],[20,20],[21,21],[[20,20],16],[[21,21],16],[[],25],[[],26],[[],23],0,[[20,20],20],[[21,21],21],[[],20],[[],21],[[20,20],16],[[21,21],16],[[20,27]],[[21,27]],0,0,0,[[20,28],29],[[20,28],29],[[20,28],29],[[20,28],29],[[20,28],29],[[30,28],29],[[21,28],29],[[21,28],29],[[21,28],29],[[21,28],29],[[21,28],29],[[26,28],29],[[23,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[10,[20]]]],[22,[[10,[21]]]],[22,20],[22,21],[22,20],[22,21],[27,20],[27,21],[20],[21],0,0,0,[[20,20]],[[21,21]],[[20,20],20],[[21,21],21],[[20,20],16],[[21,21],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,16],[21,16],[20,16],[21,16],0,0,[[20,31,7],30],0,[20,20],[21,21],[[20,20],[[10,[24]]]],[[21,21],[[10,[24]]]],[[20,20]],[[21,21]],0,0,[[20,20,16]],[[21,21,16]],[[20,20],20],[[21,21],21],[[20,20]],[[21,21]],[[20,20],20],[[21,21],21],[[]],[[]],[[]],[[20,20]],[[21,21]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[20,20],20],[[21,21],21],0,0,0,[[]],[[]],[[2,3],[[1,[[32,[4,5]]]]]],[[]],[[[32,[5]]],7],[[]],0,[[[32,[5]],33,16],[[10,[34]]]],[[[32,[5]]],[[10,[34]]]],0,[[],11],[[],11],[[],12],[[[32,[5]],34]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],35],[34],[[35,35],35],[[35,35]],[[35,35],35],[[35,35]],[35,7],[[35,35],35],[[35,35]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[[]],[[35,35],24],[35,35],[[35,35],16],[[35,35],35],[[],35],[[36,36],16],[[35,35],16],[[37,37],16],[[35,27]],[[34,28],29],[[36,28],29],[[36,28],[[11,[38]]]],[[35,28],29],[[35,28],29],[[35,28],29],[[35,28],29],[[35,28],29],[[37,28],[[11,[38]]]],[[37,28],29],[[]],[[]],[[]],[[]],[7,[[10,[35]]]],[7,35],[7,35],[27,35],[22,[[10,[36]]]],[22,[[10,[37]]]],[34,7],[34,39],[34,7],[34,35],[34,7],[34,7],[34,[[1,[36]]]],[34],[34,13],[34,39],[34,7],[34,[[1,[37]]]],[35],[[35,35]],[[35,35],35],[[35,35],16],[[]],[[]],[[]],[[]],[35,16],[35,16],[[[19,[8]]],[[1,[34]]]],[[7,7,36],[[1,[34]]]],[[7,7],[[1,[34]]]],[35,35],[[35,35],[[10,[24]]]],[[35,35]],[[35,35,16]],[[34,7]],[[34,39]],[[34,7]],[[34,35]],[[34,7]],[[34,36],1],[[34,39]],[[34,7]],[[35,35],35],[[35,35]],[[35,35],35],[[]],[[],40],[[],40],[[35,35]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[35,35],35],0,0,0,[[[41,[5]]],[[1,[[42,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[5]]],[[1,[[42,[5]]]]]],[[[42,[5]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[[32,[5]],7,7],[[43,[5]]]],[[[32,[5]],7],[[41,[5]]]],[[[42,[5]]],1],[[[42,[5]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[[42,[5]]],1]],"p":[[6,"Result"],[8,"Translator"],[8,"InverseTranslator"],[3,"VirtioPciTransport"],[8,"Allocator"],[3,"Console"],[15,"u32"],[15,"u8"],[3,"VecDeque"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"usize"],[3,"Queue"],[3,"VirtAddr"],[15,"bool"],[3,"DriverWriteOnlyQueue"],[3,"DeviceWriteOnlyQueue"],[3,"Vec"],[3,"DescFlags"],[3,"RingFlags"],[15,"u16"],[3,"UsedElem"],[4,"Ordering"],[3,"AvailRing"],[3,"UsedRing"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Desc"],[3,"PhysAddr"],[3,"VSock"],[8,"Fn"],[3,"Packet"],[3,"VSockFlags"],[4,"VSockOp"],[4,"VSockType"],[3,"Error"],[15,"u64"],[3,"String"],[3,"SocketListener"],[3,"Socket"],[3,"SocketConnector"],[8,"Write"],[8,"Read"],[3,"VirtQueue"]]},\
"vsock_echo":{"doc":"","t":[17,17,5],"n":["BUFFER_SIZE","FILE_DESCRIPTOR","main"],"q":["vsock_echo","",""],"d":["","",""],"i":[0,0,0],"f":[0,0,[[]]],"p":[]},\
"weather_lookup":{"doc":"Oak Functions weather lookup example.","t":[5,5],"n":["init","main"],"q":["weather_lookup",""],"d":["",""],"i":[0,0],"f":[[[]],[[]]],"p":[]},\
"xtask":{"doc":"A utility binary to run tests and orchestrate examples and …","t":[13,13,4,7,11,11,0,5,0,0,5,0,0,0,5,11,0,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,3,7,11,11,11,11,11,11,11,12,11,11,11,11,3,5,5,5,5,11,11,11,11,5,5,5,12,5,11,11,5,5,11,5,11,11,11,17,4,13,13,17,17,3,17,13,3,8,13,3,3,3,13,4,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,12,12,10,11,11,10,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,12,12,11,12,12,5,5,5,5,5,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,3,3,13,13,3,3,3,13,3,4,13,3,13,3,4,3,13,13,13,3,3,13,13,13,3,13,13,13,13,3,13,13,13,13,13,3,13,13,3,13,13,8,8,3,4,4,3,13,3,13,3,4,4,3,13,13,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,10,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,12,5,12,10,11,11,11,10,11,12,5,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,13,17,4,3,13,17,12,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Check","Fix","FormatMode","PROCESSES","borrow","borrow_mut","check_build_licenses","check_format","check_license","check_todo","cleanup","diffs","examples","files","format","from","internal","into","launcher","main","match_cmd","run_bazel_build","run_bazel_test","run_bazel_tests","run_buildifier","run_cargo_clean","run_cargo_clippy","run_cargo_deny","run_cargo_doc","run_cargo_fmt","run_cargo_fuzz","run_cargo_test","run_cargo_tests","run_cargo_udeps","run_check_build_licenses","run_check_license","run_check_todo","run_ci","run_clang_format","run_completion","run_embedmd","run_fuzz_targets_in_crate","run_hadolint","run_liche","run_markdownlint","run_prettier","run_shellcheck","run_tests","spread","try_from","try_into","type_id","CheckBuildLicenses","borrow","borrow_mut","description","from","into","new","path","run","try_from","try_into","type_id","CheckLicense","borrow","borrow_mut","description","from","into","new","path","run","try_from","try_into","type_id","CheckTodo","PATTERN","borrow","borrow_mut","description","from","into","is_invalid_todo","new","path","run","try_from","try_into","type_id","ModifiedContent","add_affected_crates","add_affected_protos","affected_protos","all_affected_crates","borrow","borrow_mut","contains","contains_path","crates_affected_by_files","crates_affected_by_protos","directly_modified_crates","files","find_crate_toml_file","fmt","from","get_local_dependencies","imported_proto_files","into","modified_files","try_from","try_into","type_id","ALL_CLIENTS","Application","Bazel","Cargo","DEFAULT_EXAMPLE_BACKEND_RUST_TARGET","DEFAULT_SERVER_RUST_TARGET","Executable","NO_CLIENTS","Npm","OakExample","OakExampleSteps","OakFunctions","OakFunctionsApplication","OakFunctionsExample","Server","Shell","Target","WizerOpt","additional_args","applications","applications","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_docker","build_oak_functions_example","build_oak_functions_linux_fd_bin","build_oak_functions_server_variants","build_rust_binary","build_wasm_module","clients","constant_response_size_bytes","construct_application_build_steps","construct_application_build_steps","construct_application_build_steps","construct_server_run_step","construct_server_run_step","construct_server_run_step","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","example","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_build_client","get_build_client","has_oak_functions_application","input","into","into","into","into","into","into","into","into","lookup_data","name","new","options","output","run","run_client","run_clients","run_oak_functions_example","run_oak_functions_examples","run_oak_functions_server","run_trusted_shuffler","run_wizer","server","server_variant","target","target","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wasm_path","wizer","0","additional_build_args","bazel_target","build_script","cargo_manifest","config","package_directory","run_script","affected_example_toml_filles","crate_manifest_files","example_toml_files","file_contains","is_bazel_file","is_build_file","is_cargo_package_file","is_cargo_toml_file","is_cargo_workspace_file","is_clang_format_file","is_dockerfile","is_example_toml_file","is_fuzzing_toml_file","is_html_file","is_ignored_entry","is_ignored_path","is_javascript_file","is_markdown_file","is_shell_script","is_source_code_file","is_toml_file","is_typescript_file","is_yaml_file","read_file","source_files","to_string","workspace_manifest_files","All","Base","BuildBaremetalVariants","BuildBaremetalVariantsOpt","BuildClient","BuildOakFunctionsExample","BuildOakFunctionsServerVariants","BuildServerOpt","CargoBinary","CargoManifest","CheckFormat","Cmd","Command","Commits","Completion","Completion","Context","Dependency","DependencySpec","DiffToMain","Error","Format","FuzzConfig","FuzzableExample","Json","Multiple","Ok","Opt","RunBazelTests","RunCargoClean","RunCargoClippy","RunCargoDeny","RunCargoFuzz","RunCargoFuzz","RunCargoTests","RunCargoUdeps","RunCi","RunLauncherTest","RunOakExamplesOpt","RunOakFunctionsExamples","RunTests","RunTestsOpt","RunTrustedShuffler","RunTrustedShufflerGrpc","Runnable","Running","RunningCmd","Scope","ServerVariant","ServerVariantIter","Single","SingleStatusResult","Skipped","Status","StatusResultValue","Step","StepResult","Text","WithBackground","all_dependencies_with_toml_path","application_variant","args","args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","back_idx","bin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_client","build_dependencies","build_docker","build_server","child","child","cleanup","client_additional_args","client_rust_target","client_rust_toolchain","client_variant","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","current_dir","default","dependencies","depth","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev_dependencies","dry_run","eq","eq","eq","eq","eq","equivalent","error","example_name","examples","executable","failed_steps_prefixes","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","footer_long","footer_short","format_logs","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","get","get_hash","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","hash","header","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","keep_going","kill","kill","kill_process","len","len","logs","logs","manifest_path","margin","marker","name","name","new","new","new","new_in_dir","next","next_back","nth","ok","opt","out_dir","partial_cmp","partial_cmp","path","path_to_executable","path_to_manifest","prefix","process_gone","remaining","result","result","result","root","run","run","run_server","run_step","scope","server_additional_args","server_rust_target","server_rust_toolchain","server_variant","size_hint","stderr","stderr","stdout","stdout","target_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value","values","values_to_string","variant","0","0","0","0","0","0","0","0","0","0","background","command","foreground","name","name","name","steps","CLIENT_PATH","Crosvm","LOOKUP_PATH","LauncherMode","LauncherModeIter","Native","WASM_PATH","back_idx","borrow","borrow","borrow_mut","borrow_mut","build_baremetal_variants","build_binary","build_released_binary","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","get","idx","into","into","into_iter","iter","len","marker","next","next_back","nth","option_covers_variant","run_client","run_launcher","run_launcher_test","run_variant","runtime_binary_path","runtime_crate_name","runtime_crate_path","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","variant_subcommand"],"q":["xtask","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::check_build_licenses","","","","","","","","","","","","xtask::check_license","","","","","","","","","","","","xtask::check_todo","","","","","","","","","","","","","","xtask::diffs","","","","","","","","","","","","","","","","","","","","","","","xtask::examples","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::examples::Application","xtask::examples::Target","","","","","","","xtask::files","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::internalxtask::internal::Command","","","","","","","xtask::internal::Dependency","","xtask::internal::Scope","xtask::internal::Step","","","","","","","xtask::launcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Functionality for testing variants of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Similar to the <code>vec!</code> macro, but also allows a “spread” …","","","","A <code>Runnable</code> command that checks for the existence of BUILD …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A <code>Runnable</code> command that checks for the existence of source …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A <code>Runnable</code> command that checks for the existence of todos …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Checks if <code>crate_toml_path</code> has a direct or indirect …","Adds <code>proto_path</code> to the list of <code>affected_protos</code> if …","Returns the list of paths to all <code>.proto</code> files affected by …","Path to the <code>Cargo.toml</code> files for all crates that are …","","","","","","Returns the paths to <code>Cargo.toml</code> files of crates affected …","Returns the list of paths to <code>Cargo.toml</code> files for all …","List of modified files.","","","Returns the argument unchanged.","Returns paths to <code>Cargo.toml</code> files of local crates (crates …","Returns paths to all <code>.proto</code> files that <code>proto_file_path</code> …","Calls <code>U::from(self)</code>.","Get all the files that have been modified in the given …","","","","","Identify the application the server runs.","","","","","","","","Holds the components for running an example in Oak: a …","Construct run and build steps an <code>OakExample</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build every variant of the function server. It’s easier …","Build every variant of the function server. It’s easier …","","","","","Constructs application build steps.","","","Constructs run step for the example server.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of all known Cargo Manifest files that …","","","Return whether the provided path refers to a Bazel file (…","","Return whether the provided path refers to a <code>Cargo.toml</code> …","Return whether the provided path refers to a <code>Cargo.toml</code> …","Return whether the provided path refers to a …","Return whether the provided path refers to a source file …","","","Return whether the provided path refers to a <code>fuzz</code> crate …","","","Return whether to ignore the specified path. This is used …","","Return whether the provided path refers to a markdown file …","","Return whether the provided path refers to a source file …","","","","","Return an iterator of all the first-party and non-ignored …","","Return an iterator of all known Cargo Manifest files that …","","Production-like server variant, without logging or any of …","","","","","","","Partial information about a Cargo binary, as included in a …","Partial representation of Cargo manifest files.","","A single command.","","","","","Encapsulates all the local state relative to a step, and …","Partial representation of a dependency in a <code>Cargo.toml</code> …","Partial representation of a Json specification of a …","","","","Struct representing config files for fuzzing.","Config for building an example for fuzzing.","Json specification of a dependency.","","","","","","","","","","","","","","Holds the options for running the example.","","","","","","A task that can be run asynchronously.","A task that is currently running asynchronously.","","","","An iterator over the variants of Self","","","","A construct to keep track of the status of the execution. …","The outcome of an individual step of execution.","An execution step, which may be a single <code>Runnable</code>, or a …","","Plaintext specification of a dependency with only the …","","","","","Additional <code>libFuzzer</code> arguments passed through to the binary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a description of the task, e.g. the command line …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints a footer that repeats information from the header.","Prints a footer that does not repeat information from the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Attempts to kill the running task.","","Returns the number of top-level steps or commands. The …","","","","Path to the Cargo.toml file for the example.","","","","Name of the example","","","","","","","","","","Path to desired location of the .wasm file.","","","","Get path to the executable server binary for the server …","","","","","Returns the final result of the task, upon spontaneous …","","","","Starts the task and returns a <code>Running</code> implementation.","Run the provided command, printing a status message with …","","Run the provided step, printing out information about the …","","","","","","","","Returns an <code>AsyncRead</code> object to stream stderr logs from the …","","Returns an <code>AsyncRead</code> object to stream stdout logs from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Guarantees that the <code>error</code>, <code>ok</code>, and <code>remaining</code> counts are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Get the path to the respective runtime variant that should …","Get the crate name of respective runtime variant","Get the path to the respective binary variant that should …","","","","","","","","","","","Get the subcommand for launching in this mode"],"i":[7,7,0,0,7,7,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,14,14,14,14,14,14,14,14,14,14,14,0,17,17,17,17,17,17,17,17,17,17,17,0,0,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,8,8,8,8,0,0,0,8,0,8,8,0,0,8,0,8,8,8,0,0,28,28,0,0,0,0,28,0,0,37,0,0,0,28,0,0,39,34,31,34,31,37,35,38,36,28,39,34,31,37,35,38,36,28,39,0,0,0,0,0,0,0,31,36,73,34,35,73,34,35,36,31,37,35,38,36,28,39,34,31,37,35,38,36,28,39,34,31,37,35,38,36,28,39,73,34,31,38,34,31,37,35,38,36,28,39,36,31,34,34,38,0,0,0,0,0,0,0,0,31,36,35,39,34,31,37,35,38,36,28,39,34,31,37,35,38,36,28,39,34,31,37,35,38,36,28,39,36,35,74,75,76,77,75,76,78,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,46,45,0,0,45,45,0,0,0,45,0,0,1,0,45,0,0,0,1,50,45,0,0,55,2,50,0,45,45,45,45,0,45,45,45,45,45,0,45,45,0,45,45,0,0,0,0,0,0,2,0,50,0,0,0,0,55,2,42,32,53,9,6,11,32,29,33,10,9,48,6,11,32,29,33,10,9,48,45,45,47,42,44,2,65,53,63,6,45,11,32,1,29,46,47,33,10,9,48,42,54,55,56,57,58,49,50,51,44,2,65,53,63,6,45,11,32,1,29,46,47,33,10,9,48,42,54,55,56,57,58,49,50,51,32,42,32,32,44,63,10,32,29,29,29,6,45,11,32,1,29,46,47,33,10,9,48,49,50,51,6,45,11,32,1,29,46,47,33,10,9,48,49,50,51,6,6,11,32,29,33,10,9,48,6,11,32,29,33,10,9,48,53,46,42,44,30,53,46,42,54,55,56,57,58,42,6,1,46,55,56,50,50,49,32,57,53,65,11,44,45,11,32,1,29,46,33,10,9,48,42,54,55,56,57,58,49,50,44,44,0,44,2,65,53,63,6,45,11,32,1,29,46,47,33,10,9,48,42,54,55,56,57,58,49,50,51,6,45,11,32,29,33,10,9,48,6,45,11,32,29,33,10,9,48,1,46,47,50,6,11,32,29,33,10,9,48,45,50,44,47,44,2,65,53,63,6,45,11,32,1,29,46,47,33,10,9,48,42,54,55,56,57,58,49,50,51,47,46,6,63,16,0,2,47,6,51,58,44,47,54,58,65,53,49,53,47,47,47,49,44,58,55,56,56,46,46,44,0,49,16,63,51,44,30,53,32,0,6,32,33,33,33,47,63,16,63,16,9,6,45,11,32,1,29,46,47,33,10,9,48,49,50,51,44,49,50,44,2,65,53,63,6,45,11,32,1,29,46,47,33,10,9,48,42,54,55,56,57,58,49,50,51,44,2,65,53,63,6,45,11,32,1,29,46,47,33,10,9,48,42,54,55,56,57,58,49,50,51,44,2,65,53,63,6,45,11,32,1,29,46,47,33,10,9,48,42,54,55,56,57,58,49,50,51,49,6,45,11,32,29,33,10,9,48,6,45,11,32,29,33,10,9,48,51,65,0,48,79,80,81,82,83,84,85,86,87,88,89,90,89,90,91,89,91,0,70,0,0,0,70,0,71,70,71,70,71,0,0,0,70,71,70,71,70,70,70,70,71,71,71,70,71,71,70,71,71,71,71,71,0,0,0,0,0,70,70,70,71,70,71,70,70,71,70,71,70,71,70],"f":[0,0,0,0,[[]],[[]],0,[1,2],0,0,[[]],0,0,0,[1,2],[[]],0,[[]],0,[[],[[5,[[4,[3]]]]]],[6,2],[[],2],[[],2],[[],2],[7,2],[[],2],[1,2],[[],2],[8,2],[[7,8],2],[9,2],[[10,8],2],[[10,1],2],[1,2],[8,2],[8,2],[8,2],[[],2],[7,2],[11,2],[7,2],[[12,9],2],[[],2],[[],2],[7,2],[7,2],[[],2],[[],2],0,[[],5],[[],5],[[],13],0,[[]],[[]],[14,15],[[]],[[]],[15,[[4,[14]]]],0,[[[4,[14]],6],[[4,[16]]]],[[],5],[[],5],[[],13],0,[[]],[[]],[17,15],[[]],[[]],[15,[[4,[17]]]],0,[[[4,[17]],6],[[4,[16]]]],[[],5],[[],5],[[],13],0,0,[[]],[[]],[18,15],[[]],[[]],[19,20],[15,[[4,[18]]]],0,[[[4,[18]],6],[[4,[16]]]],[[],5],[[],5],[[],13],0,[[21,22]],[[15,23]],[8,[[23,[15]]]],[1,8],[[]],[[]],[[8,19],20],[[8,12],20],[8,8],[[],[[24,[15]]]],[8,8],0,[15,[[25,[15]]]],[[8,26],27],[[]],[12,[[23,[15]]]],[15,[[23,[15]]]],[[]],[1,8],[[],5],[[],5],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,29],[[4,[30]]]],[31,2],[[32,1],2],[[],2],[33,2],[[19,33],2],[[19,28,19],2],0,0,[[],[[23,[2]]]],[34,[[23,[2]]]],[[35,19],[[23,[2]]]],[2,2],[[34,2],2],[[35,34,2],2],[[],36],[[],[[5,[31]]]],[[],[[5,[37]]]],[[],[[5,[35]]]],[[],[[5,[38]]]],[[],[[5,[36]]]],[[],[[5,[28]]]],[[],[[5,[39]]]],0,[[31,26],27],[[37,26],27],[[35,26],27],[[38,26],27],[[36,26],27],[[28,26],27],[[39,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[34,29],[31,20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[31,32],34],0,0,[[39,29,[23,[15]]],[[4,[30]]]],[[19,39,29,[23,[15]]],2],[[31,29,[23,[15]]],2],[34,2],[[32,1],2],[36,[[4,[30]]]],[[[23,[19]]],2],[[19,19],2],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,[[[23,[15]]],[[4,[40]]]],[[],40],[1,[[4,[40]]]],[[12,19],20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[41,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,20],[12,15],[[],40],[21,15],[[],40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[42,[[23,[15]]]],0,0,0,[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],[43,43],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[44,19],44],0,0,0,0,0,0,[6,6],[45,45],[11,11],[32,32],[1,1],[29,29],[46,46],[47,47],[33,33],[10,10],[9,9],[48,48],[49,49],[50,50],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,[[],46],0,[44,52],[[],15],[53,15],[[],[[5,[46]]]],[[],[[5,[42]]]],[[],[[5,[54]]]],[[],[[5,[55]]]],[[],[[5,[56]]]],[[],[[5,[57]]]],[[],[[5,[58]]]],0,0,[[1,1],20],[[46,46],20],[[55,55],20],[[56,56],20],[[50,50],20],[[],20],0,0,0,0,0,0,[[44,26],27],[[45,26],27],[[11,26],27],[[32,26],27],[[1,26],27],[[29,26],27],[[46,26],27],[[33,26],27],[[10,26],27],[[9,26],27],[[48,26],27],[[42,26],27],[[54,26],27],[[55,26],27],[[56,26],27],[[57,26],27],[[58,26],27],[[49,26],27],[[50,26],27],[44,15],[44,15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,[[5,[6,60]]]],[59,[[5,[45,60]]]],[59,[[5,[11,60]]]],[59,[[5,[32,60]]]],[59,[[5,[29,60]]]],[59,[[5,[33,60]]]],[59,[[5,[10,60]]]],[59,[[5,[9,60]]]],[59,[[5,[48,60]]]],[59,[[5,[6,60]]]],[59,[[5,[45,60]]]],[59,[[5,[11,60]]]],[59,[[5,[32,60]]]],[59,[[5,[29,60]]]],[59,[[5,[33,60]]]],[59,[[5,[10,60]]]],[59,[[5,[9,60]]]],[59,[[5,[48,60]]]],[19,[[5,[1]]]],[19,[[5,[46]]]],[[47,52],[[25,[46]]]],[[],61],[[],[[25,[62]]]],[[],[[25,[62]]]],[[],[[25,[62]]]],[[],[[25,[62]]]],[[],[[25,[62]]]],[[],[[25,[62]]]],[[],[[25,[62]]]],[[],[[25,[62]]]],[19,20],[50],[44,15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],0,[63],[[]],[64],[2,52],[47,52],0,0,0,[44,15],0,0,0,[[],65],[19,[[4,[53]]]],[52,49],[[19,12],[[4,[53]]]],[47,25],[47,25],[[47,52],25],0,0,0,[[55,55],[[25,[66]]]],[[56,56],[[25,[66]]]],0,[46,19],[46,19],0,[64,20],0,[4,[[68,[[4,[67]]]]]],[[[4,[63]]],[[68,[[4,[67]]]]]],[[[4,[51]]],[[68,[[4,[67]]]]]],[6,44],[[4,6],[[4,[16]]]],[[[4,[53]],6],[[4,[16]]]],0,[[44,2,49],[[68,[[4,[67]]]]]],0,0,0,0,0,[47],[63,[[4,[69]]]],[[],[[4,[69]]]],[63,[[4,[69]]]],[[],[[4,[69]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[49,44,20]],[[6,59],[[5,[60]]]],[[45,59],[[5,[60]]]],[[11,59],[[5,[60]]]],[[32,59],[[5,[60]]]],[[29,59],[[5,[60]]]],[[33,59],[[5,[60]]]],[[10,59],[[5,[60]]]],[[9,59],[[5,[60]]]],[[48,59],[[5,[60]]]],[[6,59],[[5,[60]]]],[[45,59],[[5,[60]]]],[[11,59],[[5,[60]]]],[[32,59],[[5,[60]]]],[[29,59],[[5,[60]]]],[[33,59],[[5,[60]]]],[[10,59],[[5,[60]]]],[[9,59],[[5,[60]]]],[[48,59],[[5,[60]]]],0,0,[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[48,2],[[19,19],2],[[19,19],2],[70,70],[71,71],[[]],[[]],[[70,70],20],[[70,26],[[5,[72]]]],[[70,26],27],[[]],[[]],[[71,52],[[25,[70]]]],0,[[]],[[]],[[]],[[],71],[71,52],0,[71,25],[71,25],[[71,52],25],[[48,70],20],[[19,19,52],2],[70,[[4,[30]]]],[[],2],[70,2],[70,15],[70,19],[70,15],[71],[[]],[[]],[[],15],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[70,[[23,[15]]]]],"p":[[4,"Scope"],[4,"Step"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"Opt"],[4,"FormatMode"],[3,"ModifiedContent"],[3,"RunCargoFuzz"],[3,"RunTestsOpt"],[3,"Completion"],[3,"Path"],[3,"TypeId"],[3,"CheckBuildLicenses"],[3,"String"],[8,"Running"],[3,"CheckLicense"],[3,"CheckTodo"],[15,"str"],[15,"bool"],[3,"PathBuf"],[3,"HashMap"],[3,"Vec"],[3,"HashSet"],[4,"Option"],[3,"Formatter"],[6,"Result"],[4,"Target"],[3,"BuildClient"],[8,"Runnable"],[3,"OakExample"],[3,"RunOakExamplesOpt"],[3,"BuildServerOpt"],[3,"OakFunctionsExample"],[3,"OakFunctionsApplication"],[3,"Server"],[4,"Application"],[3,"WizerOpt"],[3,"Executable"],[8,"Iterator"],[3,"DirEntry"],[3,"CargoManifest"],[3,"Command"],[3,"Context"],[4,"Command"],[4,"ServerVariant"],[3,"ServerVariantIter"],[3,"BuildBaremetalVariantsOpt"],[3,"Status"],[4,"StatusResultValue"],[3,"SingleStatusResult"],[15,"usize"],[3,"Cmd"],[3,"CargoBinary"],[4,"Dependency"],[3,"DependencySpec"],[3,"FuzzConfig"],[3,"FuzzableExample"],[3,"ArgMatches"],[6,"Error"],[15,"u64"],[3,"Id"],[3,"RunningCmd"],[15,"i32"],[3,"StepResult"],[4,"Ordering"],[8,"Future"],[3,"Pin"],[8,"AsyncRead"],[4,"LauncherMode"],[3,"LauncherModeIter"],[3,"Error"],[8,"OakExampleSteps"],[13,"OakFunctions"],[13,"Cargo"],[13,"Bazel"],[13,"Shell"],[13,"Npm"],[13,"BuildBaremetalVariants"],[13,"RunOakFunctionsExamples"],[13,"BuildOakFunctionsExample"],[13,"BuildOakFunctionsServerVariants"],[13,"RunCargoTests"],[13,"RunCargoFuzz"],[13,"Completion"],[13,"Text"],[13,"Json"],[13,"Commits"],[13,"WithBackground"],[13,"Single"],[13,"Multiple"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
