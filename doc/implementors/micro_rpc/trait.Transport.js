(function() {var implementors = {
"oak_echo_service":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_echo_service/proto/trait.Echo.html\" title=\"trait oak_echo_service::proto::Echo\">Echo</a>&gt; Transport for <a class=\"struct\" href=\"oak_echo_service/proto/struct.EchoServer.html\" title=\"struct oak_echo_service::proto::EchoServer\">EchoServer</a>&lt;S&gt;"]],
"oak_functions_freestanding":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_functions_freestanding/schema/trait.OakFunctions.html\" title=\"trait oak_functions_freestanding::schema::OakFunctions\">OakFunctions</a>&gt; Transport for <a class=\"struct\" href=\"oak_functions_freestanding/schema/struct.OakFunctionsServer.html\" title=\"struct oak_functions_freestanding::schema::OakFunctionsServer\">OakFunctionsServer</a>&lt;S&gt;"]],
"oak_functions_launcher":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_functions_launcher/schema/trait.OakFunctions.html\" title=\"trait oak_functions_launcher::schema::OakFunctions\">OakFunctions</a>&gt; Transport for <a class=\"struct\" href=\"oak_functions_launcher/schema/struct.OakFunctionsServer.html\" title=\"struct oak_functions_launcher::schema::OakFunctionsServer\">OakFunctionsServer</a>&lt;S&gt;"]],
"oak_tensorflow_service":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_tensorflow_service/schema/trait.Tensorflow.html\" title=\"trait oak_tensorflow_service::schema::Tensorflow\">Tensorflow</a>&gt; <a class=\"trait\" href=\"micro_rpc/trait.Transport.html\" title=\"trait micro_rpc::Transport\">Transport</a> for <a class=\"struct\" href=\"oak_tensorflow_service/schema/struct.TensorflowServer.html\" title=\"struct oak_tensorflow_service::schema::TensorflowServer\">TensorflowServer</a>&lt;S&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()