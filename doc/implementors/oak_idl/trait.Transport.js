(function() {var implementors = {
"oak_echo_service":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_echo_service/proto/trait.EchoService.html\" title=\"trait oak_echo_service::proto::EchoService\">EchoService</a>&gt; Transport for <a class=\"struct\" href=\"oak_echo_service/proto/struct.EchoServiceServer.html\" title=\"struct oak_echo_service::proto::EchoServiceServer\">EchoServiceServer</a>&lt;S&gt;"]],
"oak_functions_freestanding":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_functions_freestanding/schema/trait.TrustedRuntime.html\" title=\"trait oak_functions_freestanding::schema::TrustedRuntime\">TrustedRuntime</a>&gt; Transport for <a class=\"struct\" href=\"oak_functions_freestanding/schema/struct.TrustedRuntimeServer.html\" title=\"struct oak_functions_freestanding::schema::TrustedRuntimeServer\">TrustedRuntimeServer</a>&lt;S&gt;"]],
"oak_functions_launcher":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_functions_launcher/schema/trait.TrustedRuntime.html\" title=\"trait oak_functions_launcher::schema::TrustedRuntime\">TrustedRuntime</a>&gt; Transport for <a class=\"struct\" href=\"oak_functions_launcher/schema/struct.TrustedRuntimeServer.html\" title=\"struct oak_functions_launcher::schema::TrustedRuntimeServer\">TrustedRuntimeServer</a>&lt;S&gt;"]],
"oak_tensorflow_service":[["impl&lt;S:&nbsp;<a class=\"trait\" href=\"oak_tensorflow_service/schema/trait.TensorflowService.html\" title=\"trait oak_tensorflow_service::schema::TensorflowService\">TensorflowService</a>&gt; <a class=\"trait\" href=\"oak_idl/trait.Transport.html\" title=\"trait oak_idl::Transport\">Transport</a> for <a class=\"struct\" href=\"oak_tensorflow_service/schema/struct.TensorflowServiceServer.html\" title=\"struct oak_tensorflow_service::schema::TensorflowServiceServer\">TensorflowServiceServer</a>&lt;S&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()