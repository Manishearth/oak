(function() {var implementors = {};
implementors["oak_attestation_common"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_attestation_common/keying_material/struct.Assertion.html\" title=\"struct oak_attestation_common::keying_material::Assertion\">Assertion</a>","synthetic":false,"types":["oak_attestation_common::keying_material::Assertion"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_attestation_common/keying_material/struct.KeyingMaterial.html\" title=\"struct oak_attestation_common::keying_material::KeyingMaterial\">KeyingMaterial</a>","synthetic":false,"types":["oak_attestation_common::keying_material::KeyingMaterial"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_attestation_common/report/struct.Report.html\" title=\"struct oak_attestation_common::report::Report\">Report</a>","synthetic":false,"types":["oak_attestation_common::report::Report"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_attestation_common/report/struct.AttestationInfo.html\" title=\"struct oak_attestation_common::report::AttestationInfo\">AttestationInfo</a>","synthetic":false,"types":["oak_attestation_common::report::AttestationInfo"]}];
implementors["oak_functions_client"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.LogEntry.html\" title=\"struct oak_functions_client::rekor::LogEntry\">LogEntry</a>","synthetic":false,"types":["oak_functions_client::rekor::LogEntry"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.LogEntryVerification.html\" title=\"struct oak_functions_client::rekor::LogEntryVerification\">LogEntryVerification</a>","synthetic":false,"types":["oak_functions_client::rekor::LogEntryVerification"]}];
implementors["oak_remote_attestation"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_remote_attestation/message/struct.ClientHello.html\" title=\"struct oak_remote_attestation::message::ClientHello\">ClientHello</a>","synthetic":false,"types":["oak_remote_attestation::message::ClientHello"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_remote_attestation/message/struct.ServerIdentity.html\" title=\"struct oak_remote_attestation::message::ServerIdentity\">ServerIdentity</a>","synthetic":false,"types":["oak_remote_attestation::message::ServerIdentity"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_remote_attestation/message/struct.ClientIdentity.html\" title=\"struct oak_remote_attestation::message::ClientIdentity\">ClientIdentity</a>","synthetic":false,"types":["oak_remote_attestation::message::ClientIdentity"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.133/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_remote_attestation/message/struct.EncryptedData.html\" title=\"struct oak_remote_attestation::message::EncryptedData\">EncryptedData</a>","synthetic":false,"types":["oak_remote_attestation::message::EncryptedData"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()